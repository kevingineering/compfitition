{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\n\nconst GoalForm = props => {\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal,\n        updateGoal = goalContext.updateGoal,\n        current = goalContext.current,\n        clearCurrent = goalContext.clearCurrent;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlerts = alertContext.clearAlerts;\n\n  const _useState = useState({\n    name: '',\n    duration: 28,\n    startDate: moment.utc(),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    privacy: 'only me',\n    initialValue: 0,\n    started: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1]; //control if current or not\n\n\n  useEffect(() => {\n    if (Object.entries(current).length) {\n      setGoal(_objectSpread({}, current, {\n        startDate: moment.utc(current.startDate)\n      }));\n\n      if (moment.utc(current.startDate) < moment.now()) {\n        setGoal(_objectSpread({}, current, {\n          started: true\n        }));\n        setAlert('This goal has already begun, so some attributes cannot be changed.');\n      }\n    } //eslint-disable-next-line\n\n  }, []);\n  const message = Object.entries(current).length ? 'Modify Goal' : 'Add Goal';\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        total = goal.total,\n        privacy = goal.privacy,\n        initialValue = goal.initialValue,\n        started = goal.started;\n\n  const handleSubmit = async e => {\n    let time = moment.utc().startOf('day').diff(startDate, 'days');\n    e.preventDefault();\n    clearAlerts(); //verify start date not in past\n\n    if (time > 0 && !started) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    } //verify finish date is not in past (for goals that have started)\n\n\n    if (duration - time < 0) {\n      setAlert('Finish date cannot be in the past.');\n      return null;\n    }\n\n    if (name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //readjust duration if using 'pass/fail'\n      if (type === 'pass/fail' && duration % 7 !== 0) {\n        let newDuration = duration - duration % 7 + 7;\n        setGoal(_objectSpread({}, goal, {\n          duration: newDuration\n        }));\n        console.log(goal);\n        console.log(newDuration);\n      } //fix date\n\n\n      setGoal(_objectSpread({}, goal, {\n        startDate: moment.utc(startDate)\n      })); //add/update goal and tell user\n\n      if (message === 'Modify Goal') {\n        await updateGoal(goal);\n        setAlert('Goal updated!');\n        clearCurrent();\n      } else {\n        await addGoal(goal);\n        setAlert('Goal added!');\n      } //redirect to homepage and clear alerts\n\n\n      props.history.push('/');\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    } else setAlert('Please enter all fields.');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') setGoal(_objectSpread({}, goal, {\n        [e.target.name]: ''\n      }));else setGoal(_objectSpread({}, goal, {\n        [e.target.name]: parseInt(e.target.value)\n      }));\n    } else setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, message), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Goal Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(\"input\", {\n    disabled: started,\n    type: \"date\",\n    name: \"startDate\",\n    onChange: started ? null : handleChange,\n    value: moment.utc(startDate).format('YYYY-MM-DD'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Goal Duration (days)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), type === 'pass/fail' && !Number.isInteger(duration / 7) && duration !== '' && React.createElement(\"span\", {\n    className: \"block small-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"*Goal duration will be adjusted to \", duration - duration % 7 + 7, \" days to use full weeks.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"What type of goal would you like?\", React.createElement(\"select\", {\n    disabled: started,\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Pass/Fail  (e.g. Stretch every day)\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Total  (e.g. Run 100 miles)\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Difference  (e.g. Gain 10 lbs)\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, type === 'pass/fail' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"How many days a week do you want to hit your goal?\"), React.createElement(\"select\", {\n    disabled: started,\n    name: \"total\",\n    value: total,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Every day\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Six days a week\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Five days a week\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Four days a week\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Three days a week\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Twice a week\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Once a week\"))), type === 'total' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"What total number do you want to hit?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), type === 'difference' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"What is your current number?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"initialValue\",\n    onChange: handleChange,\n    value: initialValue,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"What number do you want to achieve?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Who can see your goal?\", React.createElement(\"select\", {\n    name: \"privacy\",\n    value: privacy,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"only me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Only Me\"), React.createElement(\"option\", {\n    value: \"friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"My Friends\"), React.createElement(\"option\", {\n    value: \"public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Everyone\")))), type !== 'pass/fail' && React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }, \"Units (e.g lbs or miles)\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: message,\n    className: \"btn btn-block btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  })));\n};\n\nexport default GoalForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","useEffect","GoalContext","AlertContext","moment","GoalForm","props","goalContext","addGoal","updateGoal","current","clearCurrent","alertContext","setAlert","clearAlerts","name","duration","startDate","utc","type","units","total","privacy","initialValue","started","goal","setGoal","Object","entries","length","now","message","handleSubmit","e","time","startOf","diff","preventDefault","newDuration","console","log","history","push","setTimeout","handleChange","target","value","parseInt","format","Number","isInteger"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,WAAW,GAAGP,UAAU,CAACE,WAAD,CAA9B;AADwB,QAEhBM,OAFgB,GAE+BD,WAF/B,CAEhBC,OAFgB;AAAA,QAEPC,UAFO,GAE+BF,WAF/B,CAEPE,UAFO;AAAA,QAEKC,OAFL,GAE+BH,WAF/B,CAEKG,OAFL;AAAA,QAEcC,YAFd,GAE+BJ,WAF/B,CAEcI,YAFd;AAIxB,QAAMC,YAAY,GAAGZ,UAAU,CAACG,YAAD,CAA/B;AAJwB,QAKhBU,QALgB,GAKUD,YALV,CAKhBC,QALgB;AAAA,QAKNC,WALM,GAKUF,YALV,CAKNE,WALM;;AAAA,oBAOAf,QAAQ,CAAC;AAC/BgB,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,SAAS,EAAEb,MAAM,CAACc,GAAP,EAHoB;AAI/BC,IAAAA,IAAI,EAAE,WAJyB;AAK/BC,IAAAA,KAAK,EAAE,EALwB;AAM/BC,IAAAA,KAAK,EAAE,CANwB;AAO/BC,IAAAA,OAAO,EAAE,SAPsB;AAQ/BC,IAAAA,YAAY,EAAE,CARiB;AAS/BC,IAAAA,OAAO,EAAE;AATsB,GAAD,CAPR;AAAA;AAAA,QAOjBC,IAPiB;AAAA,QAOXC,OAPW,kBAmBxB;;;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,MAAM,CAACC,OAAP,CAAelB,OAAf,EAAwBmB,MAA5B,EAAoC;AAClCH,MAAAA,OAAO,mBAAMhB,OAAN;AAAeO,QAAAA,SAAS,EAAEb,MAAM,CAACc,GAAP,CAAWR,OAAO,CAACO,SAAnB;AAA1B,SAAP;;AACA,UAAIb,MAAM,CAACc,GAAP,CAAWR,OAAO,CAACO,SAAnB,IAAgCb,MAAM,CAAC0B,GAAP,EAApC,EAAkD;AAChDJ,QAAAA,OAAO,mBAAKhB,OAAL;AAAcc,UAAAA,OAAO,EAAE;AAAvB,WAAP;AACAX,QAAAA,QAAQ,CAAC,oEAAD,CAAR;AACD;AACF,KAPa,CAQd;;AACD,GATQ,EASN,EATM,CAAT;AAWA,QAAMkB,OAAO,GAAGJ,MAAM,CAACC,OAAP,CAAelB,OAAf,EAAwBmB,MAAxB,GAAiC,aAAjC,GAAiD,UAAjE;AA/BwB,QAiChBd,IAjCgB,GAiCkEU,IAjClE,CAiChBV,IAjCgB;AAAA,QAiCVC,QAjCU,GAiCkES,IAjClE,CAiCVT,QAjCU;AAAA,QAiCAC,SAjCA,GAiCkEQ,IAjClE,CAiCAR,SAjCA;AAAA,QAiCWE,IAjCX,GAiCkEM,IAjClE,CAiCWN,IAjCX;AAAA,QAiCiBC,KAjCjB,GAiCkEK,IAjClE,CAiCiBL,KAjCjB;AAAA,QAiCwBC,KAjCxB,GAiCkEI,IAjClE,CAiCwBJ,KAjCxB;AAAA,QAiC+BC,OAjC/B,GAiCkEG,IAjClE,CAiC+BH,OAjC/B;AAAA,QAiCwCC,YAjCxC,GAiCkEE,IAjClE,CAiCwCF,YAjCxC;AAAA,QAiCsDC,OAjCtD,GAiCkEC,IAjClE,CAiCsDD,OAjCtD;;AAmCxB,QAAMQ,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChC,QAAIC,IAAI,GAAG9B,MAAM,CAACc,GAAP,GAAaiB,OAAb,CAAqB,KAArB,EAA4BC,IAA5B,CAAiCnB,SAAjC,EAA4C,MAA5C,CAAX;AACAgB,IAAAA,CAAC,CAACI,cAAF;AACAvB,IAAAA,WAAW,GAHqB,CAKhC;;AACA,QAAGoB,IAAI,GAAG,CAAP,IAAY,CAACV,OAAhB,EAAyB;AACvBX,MAAAA,QAAQ,CAAC,mCAAD,CAAR;AACA,aAAO,IAAP;AACD,KAT+B,CAWhC;;;AACA,QAAGG,QAAQ,GAAGkB,IAAX,GAAkB,CAArB,EAAuB;AACrBrB,MAAAA,QAAQ,CAAC,oCAAD,CAAR;AACA,aAAO,IAAP;AACD;;AAED,QAAGE,IAAI,IAAIC,QAAR,IAAoBC,SAApB,IAAiCE,IAAjC,IAAyCE,KAAzC,KAAmDD,KAAK,IAAID,IAAI,KAAK,WAArE,CAAH,EAAsF;AACpF;AACA,UAAIA,IAAI,KAAK,WAAT,IAAwBH,QAAQ,GAAG,CAAX,KAAiB,CAA7C,EAAiD;AAC/C,YAAIsB,WAAW,GAAItB,QAAQ,GAAIA,QAAQ,GAAG,CAAvB,GAA4B,CAA/C;AACAU,QAAAA,OAAO,mBAAMD,IAAN;AAAYT,UAAAA,QAAQ,EAAEsB;AAAtB,WAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,OAPmF,CASpF;;;AACAZ,MAAAA,OAAO,mBAAMD,IAAN;AAAYR,QAAAA,SAAS,EAAEb,MAAM,CAACc,GAAP,CAAWD,SAAX;AAAvB,SAAP,CAVoF,CAYpF;;AACA,UAAIc,OAAO,KAAK,aAAhB,EAA+B;AAC7B,cAAMtB,UAAU,CAACgB,IAAD,CAAhB;AACAZ,QAAAA,QAAQ,CAAC,eAAD,CAAR;AACAF,QAAAA,YAAY;AACb,OAJD,MAIO;AACL,cAAMH,OAAO,CAACiB,IAAD,CAAb;AACAZ,QAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,OApBmF,CAsBpF;;;AACAP,MAAAA,KAAK,CAACmC,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf7B,QAAAA,WAAW;AACZ,OAFS,EAEP,IAFO,CAAV;AAGD,KA3BD,MA6BED,QAAQ,CAAC,0BAAD,CAAR;AACH,GA/CD;;AAiDA,QAAM+B,YAAY,GAAGX,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACY,MAAF,CAAS9B,IAAT,KAAkB,UAAlB,IAAgCkB,CAAC,CAACY,MAAF,CAAS9B,IAAT,KAAkB,OAAlD,IAA6DkB,CAAC,CAACY,MAAF,CAAS9B,IAAT,KAAkB,cAAnF,EAAmG;AACjG,UAAIkB,CAAC,CAACY,MAAF,CAASC,KAAT,KAAmB,EAAvB,EACEpB,OAAO,mBACFD,IADE;AAEL,SAACQ,CAAC,CAACY,MAAF,CAAS9B,IAAV,GAAiB;AAFZ,SAAP,CADF,KAMEW,OAAO,mBACFD,IADE;AAEL,SAACQ,CAAC,CAACY,MAAF,CAAS9B,IAAV,GAAiBgC,QAAQ,CAACd,CAAC,CAACY,MAAF,CAASC,KAAV;AAFpB,SAAP;AAIH,KAXD,MAaEpB,OAAO,mBACFD,IADE;AAEL,OAACQ,CAAC,CAACY,MAAF,CAAS9B,IAAV,GAAiBkB,CAAC,CAACY,MAAF,CAASC;AAFrB,OAAP;AAIH,GAlBD;;AAoBA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,OAAL,CADF,EAEE;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAA8B,IAAA,YAAY,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAEY,YAHZ;AAIE,IAAA,KAAK,EAAE7B,IAJT;AAKE,IAAA,SAAS,EAAE,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAaE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,QAAQ,EAAES,OADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,QAAQ,EAAEA,OAAO,GAAG,IAAH,GAAUoB,YAJ7B;AAKE,IAAA,KAAK,EAAExC,MAAM,CAACc,GAAP,CAAWD,SAAX,EAAsB+B,MAAtB,CAA6B,YAA7B,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,EAwBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAEJ,YAHZ;AAIE,IAAA,KAAK,EAAE5B,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQGG,IAAI,KAAK,WAAT,IAAwB,CAAE8B,MAAM,CAACC,SAAP,CAAiBlC,QAAQ,GAAG,CAA5B,CAA1B,IAA8DA,QAAQ,KAAK,EAA3E,IACC;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAuEA,QAAQ,GAAIA,QAAQ,GAAG,CAAvB,GAA4B,CAAnG,6BATJ,CAxBF,EAqCE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACE;AACE,IAAA,QAAQ,EAAEQ,OADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEL,IAHT;AAIE,IAAA,QAAQ,EAAEyB,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CANF,EAOE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAPF,EAQE;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARF,CADF,CADF,CArCF,EAoDE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,IAAI,KAAK,WAAT,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADF,EAEE;AACE,IAAA,QAAQ,EAAEK,OADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEH,KAHT;AAIE,IAAA,QAAQ,EAAEuB,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,EAQE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBARF,EASE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATF,EAUE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVF,EAWE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,EAYE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,CAFF,CAFJ,EAoBGzB,IAAI,KAAK,OAAT,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEyB,YAHZ;AAIE,IAAA,KAAK,EAAEvB,KAJT;AAKE,IAAA,GAAG,EAAC,GALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBJ,EAgCGF,IAAI,KAAK,YAAT,IACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,QAAQ,EAAEyB,YAHZ;AAIE,IAAA,KAAK,EAAErB,YAJT;AAKE,IAAA,GAAG,EAAC,GALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CATF,EAUE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,QAAQ,EAAEqB,YAHZ;AAIE,IAAA,KAAK,EAAEvB,KAJT;AAKE,IAAA,GAAG,EAAC,GALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAjCJ,CApDF,EA0GE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAEC,OAFT;AAGE,IAAA,QAAQ,EAAEsB,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAME;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF,CADF,CA1GF,EAuHGzB,IAAI,KAAK,WAAT,IACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,QAAQ,EAAEyB,YAJZ;AAKE,IAAA,KAAK,EAAExB,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAxHJ,EAoIE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEW,OAFT;AAGE,IAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApIF,CAFF,CADF;AA+ID,CAvPD;;AAyPA,eAAe1B,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\n\nconst GoalForm = props => {\n  const goalContext = useContext(GoalContext);\n  const { addGoal, updateGoal, current, clearCurrent } = goalContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlerts } = alertContext;\n\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: 28,\n    startDate: moment.utc(),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    privacy: 'only me',\n    initialValue: 0,\n    started: false\n  });\n\n  //control if current or not\n  useEffect(() => {\n    if (Object.entries(current).length) {\n      setGoal({ ...current, startDate: moment.utc(current.startDate)});\n      if (moment.utc(current.startDate) < moment.now()) {\n        setGoal({...current, started: true })\n        setAlert('This goal has already begun, so some attributes cannot be changed.')\n      }\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const message = Object.entries(current).length ? 'Modify Goal' : 'Add Goal';\n\n  const { name, duration, startDate, type, units, total, privacy, initialValue, started } = goal;\n\n  const handleSubmit = async (e) => {\n    let time = moment.utc().startOf('day').diff(startDate, 'days');\n    e.preventDefault();\n    clearAlerts();\n\n    //verify start date not in past\n    if(time > 0 && !started) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    }\n\n    //verify finish date is not in past (for goals that have started)\n    if(duration - time < 0){\n      setAlert('Finish date cannot be in the past.');\n      return null;\n    }\n\n    if(name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //readjust duration if using 'pass/fail'\n      if (type === 'pass/fail' && duration % 7 !== 0 ) {\n        let newDuration = (duration - (duration % 7) + 7)\n        setGoal({ ...goal, duration: newDuration });\n        console.log(goal);\n        console.log(newDuration);\n      }\n\n      //fix date\n      setGoal({ ...goal, startDate: moment.utc(startDate) });\n\n      //add/update goal and tell user\n      if (message === 'Modify Goal') {\n        await updateGoal(goal);\n        setAlert('Goal updated!');\n        clearCurrent();\n      } else {\n        await addGoal(goal);\n        setAlert('Goal added!');\n      }\n\n      //redirect to homepage and clear alerts\n      props.history.push('/');\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    }\n    else \n      setAlert('Please enter all fields.');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') \n        setGoal({\n          ...goal,\n          [e.target.name]: ''\n        });\n      else \n        setGoal({\n          ...goal,\n          [e.target.name]: parseInt(e.target.value)\n        });\n    }\n    else\n      setGoal({\n        ...goal, \n        [e.target.name]: e.target.value\n      });\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>{message}</h1>\n      <form onSubmit={handleSubmit} autoComplete='off'>\n        {/* Name */}\n        <div className=\"form-group\">\n          <label>Goal Name</label>\n          <input \n            type='text' \n            name='name' \n            onChange={handleChange}\n            value={name}\n            autoFocus={true}\n          />\n        </div>\n        {/* Start Date */}\n        <div className=\"form-group\">\n          <label>Start Date</label>\n          <input \n            disabled={started}\n            type='date' \n            name='startDate' \n            onChange={started ? null : handleChange}\n            value={moment.utc(startDate).format('YYYY-MM-DD')}\n          />\n        </div>\n        {/* Duration */}\n        <div className=\"form-group\">\n          <label>Goal Duration (days)</label>\n          <input \n            type='number' \n            name='duration' \n            onChange={handleChange}\n            value={duration}\n          />\n          {type === 'pass/fail' && !(Number.isInteger(duration / 7)) && (duration !== '') &&\n            <span className='block small-text'>*Goal duration will be adjusted to {duration - (duration % 7) + 7} days to use full weeks.</span>\n          }\n        </div>\n        {/* Type */}\n        <div className=\"form-group\">\n          <label>What type of goal would you like?\n            <select\n              disabled={started}\n              name='type'\n              value={type}\n              onChange={handleChange}\n            >\n              <option value='pass/fail'>Pass/Fail  (e.g. Stretch every day)</option>\n              <option value='total'>Total  (e.g. Run 100 miles)</option>\n              <option value='difference'>Difference  (e.g. Gain 10 lbs)</option>\n            </select>  \n          </label>\n        </div>\n        {/* Total */}\n        <div className=\"form-group\">\n          {type === 'pass/fail' && (\n            <React.Fragment>\n              <label>How many days a week do you want to hit your goal?</label>\n              <select\n                disabled={started}\n                name='total'\n                value={total}\n                onChange={handleChange}\n              >\n                <option value='7'>Every day</option>\n                <option value='6'>Six days a week</option>\n                <option value='5'>Five days a week</option>\n                <option value='4'>Four days a week</option>\n                <option value='3'>Three days a week</option>\n                <option value='2'>Twice a week</option>\n                <option value='1'>Once a week</option>\n              </select>  \n            </React.Fragment>\n          )}\n          {type === 'total' && (\n            <React.Fragment>\n              <label>What total number do you want to hit?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n          {type === 'difference' && (\n            <React.Fragment>\n              <label>What is your current number?</label>\n              <input \n                type='number' \n                name='initialValue' \n                onChange={handleChange}\n                value={initialValue}\n                min='0'\n              />\n              <label>What number do you want to achieve?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n        </div>\n        {/* Privacy */}\n        <div className=\"form-group\">\n          <label>Who can see your goal?\n            <select\n              name='privacy'\n              value={privacy}\n              onChange={handleChange}>\n              <option value='only me'>Only Me</option>\n              <option value='friends'>My Friends</option>\n              <option value='public'>Everyone</option>\n            </select>  \n          </label>\n        </div>\n        {/* Units */}\n        {type !== 'pass/fail' && (\n          <div className=\"form-group\">\n            <label>Units (e.g lbs or miles)</label>\n            <input \n              type='text' \n              name='units' \n              placeholder='Units (Example: miles)' \n              onChange={handleChange}\n              value={units}\n            />\n          </div> \n        )}\n        {/* Submit */}\n        <input \n          type='submit' \n          value={message} \n          className='btn btn-block btn-primary'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default GoalForm;"]},"metadata":{},"sourceType":"module"}
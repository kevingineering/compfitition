{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\n\nconst GoalForm = props => {\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal,\n        updateGoal = goalContext.updateGoal,\n        current = goalContext.current,\n        clearCurrent = goalContext.clearCurrent;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlerts = alertContext.clearAlerts;\n\n  const _useState = useState({\n    name: '',\n    duration: 28,\n    startDate: moment().format('YYYY-MM-DD'),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    privacy: 'only me',\n    sign: true\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1]; //control if current or not\n\n\n  useEffect(() => {\n    if (Object.entries(current).length) {\n      setGoal(_objectSpread({}, current, {\n        sign: total >= 0,\n        startDate: moment(current.startDate).format('YYYY-MM-DD')\n      }));\n    } //eslint-disable-next-line\n\n  }, []);\n  const message = Object.entries(current).length ? 'Modify Goal' : 'Add Goal';\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        total = goal.total,\n        privacy = goal.privacy,\n        sign = goal.sign;\n\n  const handleSubmit = e => {\n    let time = moment().startOf('day').diff(startDate, 'days');\n    e.preventDefault();\n    clearAlerts(); //verify start date not in past\n\n    if (time > 0) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    } //set sign on type 'difference'\n\n\n    if (!sign) setGoal(_objectSpread({}, goal, {\n      total: total * -1\n    }));\n\n    if (name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //readjust duration if using 'pass/fail'\n      if (type === 'pass/fail') setGoal(_objectSpread({}, goal, {\n        duration: duration - duration % 7 + 7\n      })); //fix date\n\n      setGoal(_objectSpread({}, goal, {\n        startDate: moment(e.target.value)\n      })); //add/update goal and tell user\n\n      if (message === 'Modify Goal') {\n        updateGoal(goal);\n        setAlert('Goal updated!');\n        clearCurrent();\n      } else {\n        addGoal(goal);\n        setAlert('Goal added!');\n      } //redirect to homepage and clear alerts\n\n\n      props.history.push('/');\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    } else setAlert('Please enter all fields.');\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setGoal(_objectSpread({}, goal, {\n      sign: !sign\n    }));\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total') {\n      if (e.target.value === '') setGoal(_objectSpread({}, goal, {\n        [e.target.name]: ''\n      }));else setGoal(_objectSpread({}, goal, {\n        [e.target.name]: parseInt(e.target.value)\n      }));\n    } else setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, message), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Goal Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    onChange: handleChange,\n    value: startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Goal Duration (days)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), type === 'pass/fail' && !Number.isInteger(duration / 7) && duration !== '' && React.createElement(\"span\", {\n    className: \"block small-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"*Goal duration will be adjusted to \", duration - duration % 7 + 7, \" days to use full weeks.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"What type of goal would you like?\", React.createElement(\"select\", {\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Pass/Fail  (e.g. I went to the gym today)\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Total  (e.g. I ran three miles today)\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Difference  (e.g. I lost three pounds this month)\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, type === 'pass/fail' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"How many days a week do you want to hit your goal?\"), React.createElement(\"select\", {\n    name: \"total\",\n    value: total,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Every day\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Six days a week\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Five days a week\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Four days a week\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Three days a week\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Twice a week\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Once a week\"))), type === 'total' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"What total number do you want to hit?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), type === 'difference' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"What difference do you want to achieve?\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    className: \"btn-square btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: sign ? 'fas fa-plus' : 'fas fa-minus',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    id: \"input-special\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Who can see your goal?\", React.createElement(\"select\", {\n    name: \"privacy\",\n    value: privacy,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"only me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"Only Me\"), React.createElement(\"option\", {\n    value: \"friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"My Friends\"), React.createElement(\"option\", {\n    value: \"public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Everyone\")))), type !== 'pass/fail' && React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, \"Units (e.g lbs or miles)\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: message,\n    className: \"btn btn-block btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  })));\n};\n\nexport default GoalForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","useEffect","GoalContext","AlertContext","moment","GoalForm","props","goalContext","addGoal","updateGoal","current","clearCurrent","alertContext","setAlert","clearAlerts","name","duration","startDate","format","type","units","total","privacy","sign","goal","setGoal","Object","entries","length","message","handleSubmit","e","time","startOf","diff","preventDefault","target","value","history","push","setTimeout","handleClick","handleChange","parseInt","Number","isInteger"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\n\nconst GoalForm = props => {\n  const goalContext = useContext(GoalContext);\n  const { addGoal, updateGoal, current, clearCurrent } = goalContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlerts } = alertContext;\n\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: 28,\n    startDate: moment().format('YYYY-MM-DD'),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    privacy: 'only me',\n    sign: true\n  });\n\n  //control if current or not\n  useEffect(() => {\n    if (Object.entries(current).length) {\n      setGoal({ ...current, sign: (total >= 0), startDate: moment(current.startDate).format('YYYY-MM-DD') });\n    }\n      //eslint-disable-next-line\n  }, [])\n\n  const message = Object.entries(current).length ? 'Modify Goal' : 'Add Goal';\n\n  const { name, duration, startDate, type, units, total, privacy, sign } = goal;\n\n  const handleSubmit = e => {\n    let time = moment().startOf('day').diff(startDate, 'days');\n    e.preventDefault();\n    clearAlerts();\n    //verify start date not in past\n    if(time > 0) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    }\n    //set sign on type 'difference'\n    if(!sign)\n      setGoal({ ...goal, total: total * -1 })\n    if(name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //readjust duration if using 'pass/fail'\n      if (type === 'pass/fail')\n        setGoal({ ...goal, duration: duration - (duration % 7) + 7 });\n      //fix date\n      setGoal({ ...goal, startDate: moment(e.target.value)});\n      //add/update goal and tell user\n      if (message === 'Modify Goal') {\n        updateGoal(goal);\n        setAlert('Goal updated!');\n        clearCurrent();\n      } else {\n        addGoal(goal);\n        setAlert('Goal added!');\n      }\n      \n      //redirect to homepage and clear alerts\n      props.history.push('/');\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    }\n    else \n      setAlert('Please enter all fields.');\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setGoal({ ...goal, sign: !sign });\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total') {\n      if (e.target.value === '') \n        setGoal({\n          ...goal,\n          [e.target.name]: ''\n        });\n      else \n        setGoal({\n          ...goal,\n          [e.target.name]: parseInt(e.target.value)\n        });\n    }\n    else\n      setGoal({\n        ...goal, \n        [e.target.name]: e.target.value\n      });\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>{message}</h1>\n      <form onSubmit={handleSubmit} autoComplete='off'>\n        {/* Name */}\n        <div className=\"form-group\">\n          <label>Goal Name</label>\n          <input \n            type='text' \n            name='name' \n            onChange={handleChange}\n            value={name}\n            autoFocus={true}\n          />\n        </div>\n        {/* Start Date */}\n        <div className=\"form-group\">\n          <label>Start Date</label>\n          <input \n            type='date' \n            name='startDate' \n            onChange={handleChange}\n            value={startDate}\n          />\n        </div>\n        {/* Duration */}\n        <div className=\"form-group\">\n          <label>Goal Duration (days)</label>\n          <input \n            type='number' \n            name='duration' \n            onChange={handleChange}\n            value={duration}\n          />\n          {type === 'pass/fail' && !(Number.isInteger(duration / 7)) && (duration !== '') &&\n            <span className='block small-text'>*Goal duration will be adjusted to {duration - (duration % 7) + 7} days to use full weeks.</span>\n          }\n        </div>\n        {/* Type */}\n        <div className=\"form-group\">\n          <label>What type of goal would you like?\n            <select\n              name='type'\n              value={type}\n              onChange={handleChange}>\n              <option value='pass/fail'>Pass/Fail  (e.g. I went to the gym today)</option>\n              <option value='total'>Total  (e.g. I ran three miles today)</option>\n              <option value='difference'>Difference  (e.g. I lost three pounds this month)</option>\n            </select>  \n          </label>\n        </div>\n        {/* Total / Sign */}\n        <div className=\"form-group\">\n          {type === 'pass/fail' && (\n            <React.Fragment>\n              <label>How many days a week do you want to hit your goal?</label>\n              <select\n                name='total'\n                value={total}\n                onChange={handleChange}>\n                <option value='7'>Every day</option>\n                <option value='6'>Six days a week</option>\n                <option value='5'>Five days a week</option>\n                <option value='4'>Four days a week</option>\n                <option value='3'>Three days a week</option>\n                <option value='2'>Twice a week</option>\n                <option value='1'>Once a week</option>\n              </select>  \n            </React.Fragment>\n          )}\n          {type === 'total' && (\n            <React.Fragment>\n              <label>What total number do you want to hit?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n          {type === 'difference' && (\n            <React.Fragment>\n              <label className='block'>What difference do you want to achieve?</label>\n              <button\n                type='button'\n                onClick={handleClick}\n                className='btn-square btn-primary'\n              >\n              <i className={sign ? 'fas fa-plus' : 'fas fa-minus' } />\n              </button>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                id='input-special'\n              />\n            </React.Fragment>\n          )}\n        </div>\n        {/* Privacy */}\n        <div className=\"form-group\">\n          <label>Who can see your goal?\n            <select\n              name='privacy'\n              value={privacy}\n              onChange={handleChange}>\n              <option value='only me'>Only Me</option>\n              <option value='friends'>My Friends</option>\n              <option value='public'>Everyone</option>\n            </select>  \n          </label>\n        </div>\n        {/* Units */}\n        {type !== 'pass/fail' && (\n          <div className=\"form-group\">\n            <label>Units (e.g lbs or miles)</label>\n            <input \n              type='text' \n              name='units' \n              placeholder='Units (Example: miles)' \n              onChange={handleChange}\n              value={units}\n            />\n          </div> \n        )}\n        {/* Submit */}\n        <input \n          type='submit' \n          value={message} \n          className='btn btn-block btn-primary'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default GoalForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchItem.js\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport userimg from '../../resources/userimg.png';\nimport PropTypes from 'prop-types';\nimport FriendContext from '../../contexts/friends/friendContext';\n\nconst SearchItem = ({\n  user: {\n    firstName,\n    lastName,\n    email,\n    _id\n  }\n}) => {\n  const friendContext = useContext(FriendContext);\n  const friends = friendContext.friends;\n  const avatar = null; //configure button based on friend and request status\n\n  const buttonClass = 'btn-caution';\n  const buttonMsg = 'Add Friend';\n  const friendIds = friends.map(friend => friend._id);\n\n  if (friendIds.includes(_id)) {\n    buttonClass = 'btn-success';\n    buttonMsg = 'Friend';\n  }\n\n  const handleClick = () => {//set current\n  };\n\n  return React.createElement(\"li\", {\n    className: \"search-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"search-link\",\n    onClick: handleClick,\n    to: `/friend/${_id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar !== null ? avatar : userimg,\n    alt: firstName.charAt(0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"search-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, firstName, \" \", lastName), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"search-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, email)), React.createElement(\"button\", {\n    className: `search-btn ${buttonClass}`,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, buttonMsg)));\n};\n\nSearchItem.propTypes = {\n  user: PropTypes.object.isRequired\n};\nexport default SearchItem;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchItem.js"],"names":["React","useContext","Link","userimg","PropTypes","FriendContext","SearchItem","user","firstName","lastName","email","_id","friendContext","friends","avatar","buttonClass","buttonMsg","friendIds","map","friend","includes","handleClick","charAt","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAD;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B;AAAP,CAAD,KAA+C;AAChE,QAAMC,aAAa,GAAGX,UAAU,CAACI,aAAD,CAAhC;AADgE,QAExDQ,OAFwD,GAE5CD,aAF4C,CAExDC,OAFwD;AAIhE,QAAMC,MAAM,GAAG,IAAf,CAJgE,CAMhE;;AACA,QAAMC,WAAW,GAAG,aAApB;AACA,QAAMC,SAAS,GAAG,YAAlB;AAEA,QAAMC,SAAS,GAAGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACR,GAA7B,CAAlB;;AAEA,MAAIM,SAAS,CAACG,QAAV,CAAmBT,GAAnB,CAAJ,EAA6B;AAC3BI,IAAAA,WAAW,GAAG,aAAd;AACAC,IAAAA,SAAS,GAAG,QAAZ;AACD;;AAED,QAAMK,WAAW,GAAG,MAAM,CACxB;AACD,GAFD;;AAIA,SACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,OAAO,EAAEA,WAAvC;AAAoD,IAAA,EAAE,EAAG,WAAUV,GAAI,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEG,MAAM,KAAK,IAAX,GAAkBA,MAAlB,GAA2BX,OADlC;AAEE,IAAA,GAAG,EAAEK,SAAS,CAACc,MAAV,CAAiB,CAAjB,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bd,SAA/B,OAA2CC,QAA3C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,KAAhC,CAHF,CAPF,EAYE;AACE,IAAA,SAAS,EAAG,cAAaK,WAAY,EADvC;AAEE,IAAA,OAAO,EAAEM,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGL,SAJH,CAZF,CADF,CADF;AAuBD,CA5CD;;AA8CAV,UAAU,CAACiB,SAAX,GAAuB;AACrBhB,EAAAA,IAAI,EAAEH,SAAS,CAACoB,MAAV,CAAiBC;AADF,CAAvB;AAIA,eAAenB,UAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport userimg from '../../resources/userimg.png';\nimport PropTypes from 'prop-types';\nimport FriendContext from '../../contexts/friends/friendContext';\n\nconst SearchItem = ({user: {firstName, lastName, email, _id}}) => {\n  const friendContext = useContext(FriendContext);\n  const { friends } = friendContext;\n  \n  const avatar = null;\n  \n  //configure button based on friend and request status\n  const buttonClass = 'btn-caution';\n  const buttonMsg = 'Add Friend';\n\n  const friendIds = friends.map(friend => friend._id);\n\n  if (friendIds.includes(_id)) {\n    buttonClass = 'btn-success';\n    buttonMsg = 'Friend'\n  }\n\n  const handleClick = () => {\n    //set current\n  }\n\n  return (\n    <li className='search-item'>\n      <Link className='search-link' onClick={handleClick} to={`/friend/${_id}`}>\n        <div className=\"flex\">\n          <img\n            src={avatar !== null ? avatar : userimg}\n            alt={firstName.charAt(0)}\n          />\n        </div>\n        <div className='search-container'>\n          <span className='search-name'>{firstName} {lastName}</span>\n          <br/>\n          <span className='search-email'>{email}</span>\n        </div>\n        <button\n          className={`search-btn ${buttonClass}`}\n          onClick={handleClick}\n        >\n          {buttonMsg}\n        </button>\n      </Link>\n    </li>\n  );\n};\n\nSearchItem.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default SearchItem;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/comptable/CompChartTotal.js\";\nimport React from 'react';\nimport Chart from 'react-google-charts';\n\nconst CompChartTotal = ({\n  competitionArray,\n  units,\n  type\n}) => {\n  //format data array and configure tooltip \n  let dataPointsZero = ['x'];\n  let dataPointsOne = [0];\n  let dataPointsBeyond = []; //the length of the values coming after\n  //has fewer edge cases than using time\n\n  let valuesLength = 0; //the maximum value for the chart, one more than the leader's score\n\n  let maxValue = 0;\n\n  if (competitionArray.length !== 0) {\n    valuesLength = competitionArray[0][2].length;\n    maxValue = competitionArray[0][1] + 1;\n  }\n\n  let tooltipMsg = type === 'total' ? 'Total: ' : 'Successes: '; //configure dataPoints [0] and[1]\n\n  for (let i = 0; i < competitionArray.length; i++) {\n    dataPointsZero.push(competitionArray[i][0], {\n      role: 'tooltip',\n      type: 'string',\n      p: {\n        html: true\n      }\n    });\n    dataPointsOne.push(0, 'Start');\n  } //configure rest of dataPoints\n\n\n  for (let i = 0; i < valuesLength; i++) {\n    let list = [i + 1];\n\n    for (let j = 0; j < competitionArray.length; j++) list.push(competitionArray[j][2][i], `Day ${i + 1} \\n ${tooltipMsg} ${competitionArray[j][2][i]} ${units}`);\n\n    dataPointsBeyond.push(list);\n  }\n\n  let dataPoints = [dataPointsZero, dataPointsOne, ...dataPointsBeyond];\n  return React.createElement(\"div\", {\n    className: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    chartType: \"LineChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: dataPoints,\n    options: {\n      chartArea: {\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%'\n      },\n      axisTitlesPosition: 'none',\n      hAxis: {\n        textPosition: 'none',\n        baselineColor: 'none',\n        gridlines: {\n          color: 'transparent'\n        },\n        viewWindow: {\n          min: 0\n        }\n      },\n      legend: {\n        position: 'in'\n      },\n      vAxis: {\n        textPosition: 'none',\n        baselineColor: 'none',\n        viewWindow: {\n          max: maxValue\n        }\n      },\n      titlePosition: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n};\n\nexport default CompChartTotal;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/comptable/CompChartTotal.js"],"names":["React","Chart","CompChartTotal","competitionArray","units","type","dataPointsZero","dataPointsOne","dataPointsBeyond","valuesLength","maxValue","length","tooltipMsg","i","push","role","p","html","list","j","dataPoints","chartArea","left","top","width","height","axisTitlesPosition","hAxis","textPosition","baselineColor","gridlines","color","viewWindow","min","legend","position","vAxis","max","titlePosition"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst CompChartTotal = ({competitionArray, units, type }) => {\n\n  //format data array and configure tooltip \n  let dataPointsZero = ['x'];\n  let dataPointsOne = [0];\n  let dataPointsBeyond = [];\n\n  //the length of the values coming after\n  //has fewer edge cases than using time\n  let valuesLength = 0;\n  //the maximum value for the chart, one more than the leader's score\n  let maxValue = 0;\n\n  if (competitionArray.length !== 0) {\n    valuesLength = competitionArray[0][2].length;\n    maxValue = competitionArray[0][1] + 1;\n  }\n\n  let tooltipMsg = type === 'total' ? 'Total: ' : 'Successes: ';\n\n  //configure dataPoints [0] and[1]\n  for (let i = 0; i < competitionArray.length; i++) {\n    dataPointsZero.push(\n      competitionArray[i][0],\n      { role: 'tooltip', type: 'string', p: { html: true }}\n    )\n    dataPointsOne.push(\n      0, 'Start'\n    )\n  }\n\n  //configure rest of dataPoints\n  for (let i = 0; i < valuesLength; i++) {\n    let list = [i + 1];\n    for (let j = 0; j < competitionArray.length; j++)\n      list.push(\n        competitionArray[j][2][i],\n        `Day ${i + 1} \\n ${tooltipMsg} ${competitionArray[j][2][i]} ${units}`\n      )\n    dataPointsBeyond.push(list);\n  }\n\n  let dataPoints = [dataPointsZero, dataPointsOne, ...dataPointsBeyond];\n  \n  return (\n    <div className='border'>\n      <Chart\n        chartType=\"LineChart\"\n        loader={<div>Loading Chart</div>}\n        data={dataPoints}\n        options={{\n          chartArea: {\n            left: 0,\n            top: 0,\n            width: '100%',\n            height: '100%',\n          },\n          axisTitlesPosition: 'none',\n          hAxis: {\n            textPosition: 'none',\n            baselineColor: 'none',\n            gridlines: {\n              color: 'transparent'\n            },\n            viewWindow: {\n              min: 0\n            }\n          },\n          legend: {\n            position: 'in'\n          },\n          vAxis: {\n            textPosition: 'none',\n            baselineColor: 'none',\n            viewWindow: {\n              max: maxValue\n            }\n          },\n          titlePosition: 'none',\n        }}\n      />\n    </div>\n  )\n}\n\nexport default CompChartTotal\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/auth/authState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_AUTH_LOADING, CLEAR_AUTH_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    error: null,\n    loading: false\n  };\n\n  const _useReducer = useReducer(AuthReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //used for register, login, and update\n\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //get user data\n\n  const getUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      setLoading();\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //log in user\n\n\n  const loginUser = async formData => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      }); //getUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //register new user\n\n\n  const registerUser = async formData => {\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      getUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //update user\n\n\n  const updateUser = async () => {\n    try {} catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //logout\n\n\n  const logoutUser = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //set loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_AUTH_LOADING\n    });\n  }; //clear erros\n\n\n  const clearUserErrors = () => {\n    dispatch({\n      type: CLEAR_AUTH_ERRORS\n    });\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      error: state.error,\n      loading: state.loading,\n      getUser,\n      loginUser,\n      registerUser,\n      updateUser,\n      logoutUser,\n      clearUserErrors\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/auth/authState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_AUTH_LOADING","CLEAR_AUTH_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","user","error","loading","state","dispatch","config","headers","getUser","setLoading","res","get","type","payload","data","err","response","msg","loginUser","formData","post","registerUser","updateUser","logoutUser","clearUserErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_AUTH_LOADING,\n  CLEAR_AUTH_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = { \n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    error: null,\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //used for register, login, and update\n  const config = { \n    headers: { \n      'Content-Type': 'application/json'\n    }\n  };\n\n  //get user data\n  const getUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      setLoading();\n      const res = await axios.get('/api/auth');\n      dispatch({ type: USER_LOADED, payload: res.data })\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR, payload: err.response.data.msg });\n    }\n  }\n\n  //log in user\n  const loginUser = async formData => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n      //getUser();\n    } catch (err) {\n      dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg });\n    }\n  }\n\n  //register new user\n  const registerUser = async formData => {\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      getUser();\n    } catch (err) {\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\n    }\n  }\n  \n  //update user\n  const updateUser = async () => {\n    try {\n\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR, payload: err.response.data.msg });\n    }\n  }\n\n  //logout\n  const logoutUser = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  //set loading\n  const setLoading = () => {\n    dispatch({ type: SET_AUTH_LOADING });\n  };\n\n  //clear erros\n  const clearUserErrors = () => {\n    dispatch({ type: CLEAR_AUTH_ERRORS });\n  };\n\n  return (\n    <AuthContext.Provider\n    value={{\n      user: state.user,\n      error: state.error,\n      loading: state.loading,\n      getUser,\n      loginUser,\n      registerUser,\n      updateUser,\n      logoutUser,\n      clearUserErrors\n    }}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}
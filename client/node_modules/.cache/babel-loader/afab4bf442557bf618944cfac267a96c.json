{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalList.js\";\nimport React, { useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport GoalItem from './GoalItem';\nimport PropTypes from 'prop-types';\n\nconst GoalList = ({\n  goals,\n  isOwner,\n  isGoal\n}) => {\n  const goalContext = useContext(GoalContext);\n  const goalsLoading = goalContext.goalsLoading; //create list\n\n  let itemList = null;\n  let type = isGoal ? 'goals' : 'competitions';\n\n  if (goalsLoading) {\n    itemList = React.createElement(\"li\", {\n      className: \"collection-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Loading...\");\n  } else if (goals.length === 0) {\n    itemList = React.createElement(\"li\", {\n      className: \"collection-item center collection-item-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"width-250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, isOwner ? `You have no ${type}... ` : `This user has no ${type}.`, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), isOwner ? 'You should fix that :)' : null));\n  } else {\n    itemList = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, goals.map(goal => React.createElement(GoalItem, {\n      goal: goal,\n      key: goal._id,\n      isOwner: isOwner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, itemList);\n};\n\nGoalList.propTypes = {\n  goals: PropTypes.array.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalList;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalList.js"],"names":["React","useContext","GoalContext","GoalItem","PropTypes","GoalList","goals","isOwner","isGoal","goalContext","goalsLoading","itemList","type","length","map","goal","_id","propTypes","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA8B;AAC7C,QAAMC,WAAW,GAAGR,UAAU,CAACC,WAAD,CAA9B;AAD6C,QAErCQ,YAFqC,GAEpBD,WAFoB,CAErCC,YAFqC,EAI7C;;AACA,MAAIC,QAAQ,GAAG,IAAf;AAEA,MAAIC,IAAI,GAAGJ,MAAM,GAAG,OAAH,GAAa,cAA9B;;AAEA,MAAIE,YAAJ,EAAkB;AAChBC,IAAAA,QAAQ,GACN;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,GAND,MAOK,IAAIL,KAAK,CAACO,MAAN,KAAiB,CAArB,EAAwB;AAC3BF,IAAAA,QAAQ,GACN;AAAI,MAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,OAAO,GACL,eAAcK,IAAK,MADd,GAEL,oBAAmBA,IAAK,GAH7B,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMGL,OAAO,GACN,wBADM,GAEN,IARJ,CADF,CADF;AAeD,GAhBI,MAiBA;AACHI,IAAAA,QAAQ,GACN,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAhC;AAAqC,MAAA,OAAO,EAAET,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CADH,CADF;AAKD;;AAED,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,QADH,CADF;AAKD,CA9CD;;AAgDAN,QAAQ,CAACY,SAAT,GAAqB;AACnBX,EAAAA,KAAK,EAAEF,SAAS,CAACc,KAAV,CAAgBC,UADJ;AAEnBZ,EAAAA,OAAO,EAAEH,SAAS,CAACgB,IAAV,CAAeD;AAFL,CAArB;AAKA,eAAed,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport GoalItem from './GoalItem';\nimport PropTypes from 'prop-types';\n\nconst GoalList = ({goals, isOwner, isGoal}) => {\n  const goalContext = useContext(GoalContext);\n  const { goalsLoading } = goalContext;\n  \n  //create list\n  let itemList = null;\n\n  let type = isGoal ? 'goals' : 'competitions';\n\n  if (goalsLoading) {\n    itemList = (\n      <li className='collection-item'>\n        Loading...\n      </li>\n    )\n  }\n  else if (goals.length === 0) {\n    itemList = (\n      <li className='collection-item center collection-item-block'>\n        <p className='width-250'>\n          {isOwner ? \n            `You have no ${type}... ` :\n            `This user has no ${type}.`\n          }\n          <br/>\n          {isOwner ? \n            'You should fix that :)' :\n            null\n          }\n        </p>\n      </li>\n    );\n  }\n  else {\n    itemList = (\n      <React.Fragment>\n        {goals.map(goal => <GoalItem goal={goal} key={goal._id} isOwner={isOwner}/>)}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {itemList}\n    </React.Fragment>\n  )\n}\n\nGoalList.propTypes = {\n  goals: PropTypes.array.isRequired,\n  isOwner: PropTypes.bool.isRequired\n}\n\nexport default GoalList;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_FRIENDS, ADD_FRIEND, DELETE_FRIEND, SET_CURRENT_FRIEND, CLEAR_CURRENT_FRIEND, SET_FRIEND_LOADING, FRIENDS_ERROR, CLEAR_FRIEND_ERRORS, CLEAR_FRIENDS, FILTER_FRIENDS, CLEAR_FRIENDS_FILTER } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_FRIENDS:\n      return _objectSpread({}, state, {\n        friends: action.payload,\n        friendIds: action.payload.map(friend => friend._id),\n        friendsLoading: false\n      });\n\n    case ADD_FRIEND:\n      return _objectSpread({}, state, {\n        friends: [...state.friends, action.payload],\n        friendIds: [...state.friendIds, action.payload.id],\n        friendsLoading: false\n      });\n\n    case DELETE_FRIEND:\n      return _objectSpread({}, state, {\n        friends: state.friends.filter(friend => friend._id !== action.payload),\n        friendIds: state.friendIds.filter(id => id !== action.payload),\n        friendsLoading: false\n      });\n\n    case SET_CURRENT_FRIEND:\n      return _objectSpread({}, state, {\n        friendCurrent: state.friends.find(friend => friend._id === action.payload)\n      });\n\n    case CLEAR_CURRENT_FRIEND:\n      return _objectSpread({}, state, {\n        friendCurrent: {}\n      });\n\n    case SET_FRIEND_LOADING:\n      return _objectSpread({}, state, {\n        friendsLoading: true\n      });\n\n    case FRIENDS_ERROR:\n      return _objectSpread({}, state, {\n        friendsError: action.payload,\n        friendsLoading: false\n      });\n\n    case CLEAR_FRIEND_ERRORS:\n      return _objectSpread({}, state, {\n        friendsError: null\n      });\n\n    case CLEAR_FRIENDS:\n      return _objectSpread({}, state, {\n        friends: [],\n        friendsIds: [],\n        friendCurrent: {},\n        friendsError: null,\n        friendsLoading: true\n      });\n\n    case FILTER_FRIENDS:\n      return _objectSpread({}, state, {\n        friendsFiltered: state.friends.filter(friend => {\n          //Regular expression (regex) is used for searching text, 'gi' makes it not case sensitive\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return friend.firstName.match(regex) || friend.lastName.match(regex) || friend.email.match(regex) || friend.alias.match(regex);\n        })\n      });\n\n    case CLEAR_FRIENDS_FILTER:\n      return _objectSpread({}, state, {\n        friendsFiltered: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/friends/friendReducer.js"],"names":["GET_FRIENDS","ADD_FRIEND","DELETE_FRIEND","SET_CURRENT_FRIEND","CLEAR_CURRENT_FRIEND","SET_FRIEND_LOADING","FRIENDS_ERROR","CLEAR_FRIEND_ERRORS","CLEAR_FRIENDS","FILTER_FRIENDS","CLEAR_FRIENDS_FILTER","state","action","type","friends","payload","friendIds","map","friend","_id","friendsLoading","id","filter","friendCurrent","find","friendsError","friendsIds","friendsFiltered","regex","RegExp","firstName","match","lastName","email","alias"],"mappings":"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","sourcesContent":["import {\n  GET_FRIENDS,\n  ADD_FRIEND,\n  DELETE_FRIEND,\n  SET_CURRENT_FRIEND,\n  CLEAR_CURRENT_FRIEND,\n  SET_FRIEND_LOADING,\n  FRIENDS_ERROR,\n  CLEAR_FRIEND_ERRORS,\n  CLEAR_FRIENDS,\n  FILTER_FRIENDS,\n  CLEAR_FRIENDS_FILTER\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_FRIENDS:\n      return {\n        ...state,\n        friends: action.payload,\n        friendIds: action.payload.map(friend => friend._id),\n        friendsLoading: false\n      }\n    case ADD_FRIEND:\n      return {\n        ...state,\n        friends: [...state.friends, action.payload],\n        friendIds: [...state.friendIds, action.payload.id],\n        friendsLoading: false\n      }\n    case DELETE_FRIEND:\n      return {\n        ...state,\n        friends: state.friends.filter(friend => friend._id !== action.payload),\n        friendIds: state.friendIds.filter(id => id !== action.payload),\n        friendsLoading: false\n      }\n    case SET_CURRENT_FRIEND:\n      return {\n        ...state,\n        friendCurrent: state.friends.find(friend => friend._id === action.payload)\n      }\n    case CLEAR_CURRENT_FRIEND:\n      return {\n        ...state,\n        friendCurrent: {}\n      }\n    case SET_FRIEND_LOADING:\n      return {\n        ...state,\n        friendsLoading: true\n      }\n    case FRIENDS_ERROR:\n      return {\n        ...state,\n        friendsError: action.payload,\n        friendsLoading: false\n      }\n    case CLEAR_FRIEND_ERRORS:\n      return {\n        ...state,\n        friendsError: null\n      }\n    case CLEAR_FRIENDS:\n      return {\n        ...state,\n        friends: [],\n        friendsIds: [],\n        friendCurrent: {},\n        friendsError: null,\n        friendsLoading: true\n      }\n    case FILTER_FRIENDS:\n      return {\n        ...state,\n        friendsFiltered: state.friends.filter(friend => {\n          //Regular expression (regex) is used for searching text, 'gi' makes it not case sensitive\n          const regex = new RegExp(`${action.payload}`, 'gi')\n          return (\n            friend.firstName.match(regex) ||\n            friend.lastName.match(regex) ||\n            friend.email.match(regex) || \n            friend.alias.match(regex)\n          );\n        })\n      }\n    case CLEAR_FRIENDS_FILTER:\n      return {\n        ...state,\n        friendsFiltered: null\n      }\n    default: \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}
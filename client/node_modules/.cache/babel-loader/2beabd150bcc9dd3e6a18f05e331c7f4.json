{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalChartPassFail.js\";\nimport React from 'react';\nimport moment from 'moment';\n\nconst GoalChartPassFail = ({\n  isComplete,\n  isOwner,\n  isStarted,\n  time,\n  record,\n  setRecord,\n  duration,\n  startDate\n}) => {\n  //event.target will get the icon and fail, but event.currentTarget will get the button every time\n  const handleClick = e => {\n    if (isComplete || !isOwner) {\n      return null;\n    }\n\n    let clickLoc = parseInt(e.currentTarget.name);\n\n    if (isStarted || time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n    } else if (time === clickLoc || time === clickLoc + 1) {\n      setRecord(record.map((value, index) => {\n        if (index === clickLoc) {\n          if (value === null || value === false) {\n            value = true;\n          } else value = false;\n        }\n\n        return value;\n      }));\n    } else {\n      setAlert(\"You can only record data for today and yesterday.\");\n    }\n  }; //create table\n\n\n  const table = () => {\n    let list = [];\n\n    for (let i = 0; i < duration / 7; i++) {\n      list.push(React.createElement(\"span\", {\n        className: \"table-row\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"table-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Week \", i + 1, React.createElement(\"span\", {\n        className: \"hide-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, '', \" - \", moment.utc(startDate).add(7 * i, 'day').format('MMM Do'))), React.createElement(\"span\", {\n        className: \"table-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, buttons(i))));\n    }\n\n    return list;\n  }; //create buttons for table\n\n\n  const buttons = week => {\n    let list = [];\n\n    for (let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(React.createElement(\"button\", {\n        className: `table-btn ${time === loc && 'table-btn-today'}`,\n        onClick: handleClick,\n        key: loc,\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, record[loc] && React.createElement(\"i\", {\n        className: \"fas fa-check success-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), !record[loc] && record[loc] !== null && React.createElement(\"i\", {\n        className: \"fas fa-times danger-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), record[loc] === null && ' '));\n    }\n\n    return list;\n  };\n\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, table());\n};\n\nexport default GoalChartPassFail;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalChartPassFail.js"],"names":["React","moment","GoalChartPassFail","isComplete","isOwner","isStarted","time","record","setRecord","duration","startDate","handleClick","e","clickLoc","parseInt","currentTarget","name","setAlert","map","value","index","table","list","i","push","utc","add","format","buttons","week","total","loc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\nconst GoalChartPassFail = ({isComplete, isOwner, isStarted, time, record, setRecord, duration, startDate}) => {\n\n  //event.target will get the icon and fail, but event.currentTarget will get the button every time\n  const handleClick = e => {\n    if (isComplete || !isOwner) {\n      return null;\n    }\n    let clickLoc = parseInt(e.currentTarget.name);\n    if (isStarted || time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n    }\n    else if (time === clickLoc || time === clickLoc + 1) {\n      setRecord(record.map((value, index) => {\n        if (index === clickLoc) {\n          if (value === null || value === false) {\n            value = true;\n          }\n          else value = false;\n        }\n        return value;\n      }))\n    }\n    else {\n      setAlert(\"You can only record data for today and yesterday.\");\n    }\n  };\n\n  //create table\n  const table = () => {\n    let list = [];\n    for(let i = 0; i < duration / 7; i++) {\n      list.push(\n        <span className='table-row' key={i}>\n          <span className='table-label'>Week {i + 1}\n            <span className='hide-sm'>\n              {''} - {moment.utc(startDate).add(7 * i, 'day').format('MMM Do')}\n            </span>\n          </span>\n          <span className='table-buttons'>\n            {buttons(i)}\n          </span>\n        </span>);\n    }\n    return list;\n  };\n\n  //create buttons for table\n  const buttons = week => {\n    let list = [];\n    for(let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(\n        <button \n          className={`table-btn ${time === loc && 'table-btn-today'}`}\n          onClick={handleClick} \n          key={loc} \n          name={loc} \n        >\n          {record[loc] && <i className='fas fa-check success-color' name={loc}/>}\n          {!record[loc] && record[loc] !== null && <i className='fas fa-times danger-color' name={loc}/>}\n          {record[loc] === null && ' '}\n        </button>\n      )\n    }\n    return list;\n  };\n\n  return (\n    <li>\n      {table()}\n    </li>\n  )\n}\n\nexport default GoalChartPassFail;"]},"metadata":{},"sourceType":"module"}
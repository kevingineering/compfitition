{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/goalPieces/GoalProgress.js\";\nimport React, { useState } from 'react';\n\nconst GoalProgress = ({\n  type,\n  time,\n  record,\n  setRecord,\n  units\n}) => {\n  //state for controlled variables\n  const _useState = useState(record[time]),\n        _useState2 = _slicedToArray(_useState, 2),\n        today = _useState2[0],\n        setToday = _useState2[1];\n\n  const _useState3 = useState(record[time - 1]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        yesterday = _useState4[0],\n        setYesterday = _useState4[1]; //if value is less than zero, null\n  //if value is empty ('') do not record (type === 'difference') or set zero in array (type === 'total')\n  //otherwise set value in array\n  //diffence tracks only today, total tracks today and yesterday\n\n\n  const handleChange = e => {\n    if (e.target.value < 0) return null;\n\n    if (e.target.name === 'today') {\n      setToday(e.target.value);\n      if (type === 'difference') setRecord(record.map((value, index) => {\n        if (index === time + 1) {\n          if (e.target.value === '') return null;\n          value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));else if (type === 'total') setRecord(record.map((value, index) => {\n        if (index === time) {\n          if (e.target.value === '') value = 0;else value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));\n    } else {\n      setYesterday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          if (e.target.value === '') value = 0;else value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Record Your Progress\")), React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"width-75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Today:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"center\",\n    id: \"chart-input\",\n    type: \"number\",\n    value: today,\n    name: \"today\",\n    onChange: handleChange,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), units)), time > 0 && type === 'total' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"width-75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Yesterday:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"center\",\n    id: \"chart-input\",\n    type: \"number\",\n    value: yesterday,\n    name: \"yesterday\",\n    onChange: handleChange,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), units))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n};\n\nexport default GoalProgress;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/goalPieces/GoalProgress.js"],"names":["React","useState","GoalProgress","type","time","record","setRecord","units","today","setToday","yesterday","setYesterday","handleChange","e","target","value","name","map","index","parseFloat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst GoalProgress = ({type, time, record, setRecord, units}) => {\n\n  //state for controlled variables\n  const [today, setToday] = useState(record[time]);\n  const [yesterday, setYesterday] = useState(record[time - 1]);\n\n  //if value is less than zero, null\n  //if value is empty ('') do not record (type === 'difference') or set zero in array (type === 'total')\n  //otherwise set value in array\n  //diffence tracks only today, total tracks today and yesterday\n  const handleChange = e => {\n    if (e.target.value < 0)\n      return null;\n    if (e.target.name === 'today') {\n      setToday(e.target.value);\n      if (type === 'difference')\n        setRecord(record.map((value, index) => {\n          if (index === time + 1) {\n            if (e.target.value === '')\n              return null;\n            value = parseFloat(e.target.value);\n          }\n          return value;\n        }));\n      else if (type === 'total')\n        setRecord(record.map((value, index) => {\n          if (index === time) {\n            if (e.target.value === '')\n              value = 0;\n            else value = parseFloat(e.target.value);\n          }\n        return value;\n      }));\n    } \n    else {\n      setYesterday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          if (e.target.value === '')\n            value = 0;\n          else value = parseFloat(e.target.value);\n        }\n        return value;\n      }))\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <li className='table-info lr-border center'>\n        <strong>Record Your Progress</strong>\n      </li>\n      <li className='table-info lr-border center'>\n        <span className='width-75'>\n          Today:\n        </span>\n        <span>\n          <input \n            className='center'\n            id='chart-input'\n            type='number' \n            value={today} \n            name='today' \n            onChange={handleChange}\n            min='0'\n          />\n          {units}\n        </span>\n      </li>\n      {time > 0 && type === 'total' && \n        <React.Fragment>\n          <li className='table-info lr-border center'>\n            <span className='width-75'>\n              Yesterday:\n            </span>\n            <span>\n              <input \n                className='center'\n                id='chart-input'\n                type='number' \n                value={yesterday} \n                name='yesterday' \n                onChange={handleChange}\n                min='0'\n              />\n              {units}\n            </span>\n          </li>\n        </React.Fragment>\n      }\n      <hr/>\n    </React.Fragment>\n  )\n}\n\nexport default GoalProgress;"]},"metadata":{},"sourceType":"module"}
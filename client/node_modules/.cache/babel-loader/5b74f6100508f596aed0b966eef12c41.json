{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext'; //alert context\n\nconst GoalForm = () => {\n  const _useState = useState({\n    name: '',\n    duration: '',\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: '',\n    privacy: 'only me',\n    compId: '',\n    assume: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1];\n\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        frequency = goal.frequency,\n        privacy = goal.privacy,\n        compId = goal.compId,\n        assume = goal.assume;\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && duration && startDate && type && frequency) addGoal(goal);\n    setGoal({\n      name: '',\n      duration: '',\n      startDate: '',\n      type: '',\n      units: '',\n      frequency: '',\n      privacy: '',\n      compId: '',\n      assume: ''\n    }); //else\n    //show alert\n  };\n\n  const handleChange = e => {\n    setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Add Goal\"), React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Goal Name\",\n    onChange: handleChange,\n    value: name,\n    autofocus: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    placeholder: \"Duration (days)\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    placeholder: \"Start Date\",\n    onChange: handleChange,\n    value: startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Who do you want to be able to see your goal?\"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"privacy\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    checked: privacy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add Goal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    selected: type === 'pass/fail',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"total\",\n    selected: type === 'total',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"difference\",\n    selected: type === 'difference',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), \"Yes / No (Did I or did I not succeed today? e.g. Went to the gym) Total (How many did I achieve? e.g. Ran three miles) Difference (How much now compared to the beginning? e.g. Lost 15 lbs)\");\n};\n\nexport default GoalForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","GoalContext","GoalForm","name","duration","startDate","Date","now","type","units","frequency","privacy","compId","assume","goal","setGoal","goalContext","addGoal","handleSubmit","e","preventDefault","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\n//alert context\n\nconst GoalForm = () => {\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: '',\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: '',\n    privacy: 'only me',\n    compId: '',\n    assume: ''\n  });\n  const {name, duration, startDate, type, units, frequency, privacy, compId, assume } = goal;\n\n  const goalContext = useContext(GoalContext);\n  const { addGoal } = goalContext;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(name && duration && startDate && type && frequency)\n      addGoal(goal);\n      setGoal({\n        name: '',\n        duration: '',\n        startDate: '',\n        type: '',\n        units: '',\n        frequency: '',\n        privacy: '',\n        compId: '',\n        assume: ''\n      });\n    //else\n      //show alert\n  };\n\n  const handleChange = e => {\n    setGoal({\n      ...goal, \n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <div>\n      <h1>Add Goal</h1>\n      <form onSubmit={e => handleSubmit(e)}>\n        <input \n          type='text' \n          name='name' \n          placeholder='Goal Name' \n          onChange={handleChange}\n          value={name}\n          autofocus='true'\n        />\n        <input \n          type='number' \n          name='duration' \n          placeholder='Duration (days)' \n          onChange={handleChange}\n          value={duration}\n        />\n        <input \n          type='date' \n          name='startDate' \n          placeholder='Start Date' \n          onChange={handleChange}\n          value={startDate}\n        />\n        <input \n          type='text' \n          name='units' \n          placeholder='Units (Example: miles)' \n          onChange={handleChange}\n          value={units}\n        />\n        <p>Who do you want to be able to see your goal?</p>\n        <input \n          type='checkbox' \n          name='privacy' \n          placeholder='Units (Example: miles)' \n          onChange={handleChange}\n          checked={privacy}\n        /> \n        <input \n          type='submit' \n          value='Add Goal' \n        />\n      </form>\n      <select>\n          <option value='pass/fail' selected={type === 'pass/fail'}/>\n          <option value='total' selected={type === 'total'}/>\n          <option value='difference' selected={type === 'difference'}/>\n        </select>  \nYes / No (Did I or did I not succeed today? e.g. Went to the gym)\nTotal (How many did I achieve? e.g. Ran three miles)\nDifference (How much now compared to the beginning? e.g. Lost 15 lbs)\n    </div>\n  )\n}\n\nexport default GoalForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/requests/requestState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport RequestContext from './requestContext';\nimport RequestReducer from './requestReducer';\nimport { GET_REQUESTS, ADD_REQUEST, DELETE_REQUEST, REQUEST_ERROR, CLEAR_REQUESTS_ERROR, CLEAR_REQUESTS, SET_REQUESTS_LOADING } from '../types';\n\nconst RequestState = props => {\n  const initialState = {\n    requests: [],\n    requestsSent: [],\n    requestsReceived: [],\n    requestsError: null,\n    requestsLoading: true\n  };\n\n  const _useReducer = useReducer(RequestReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //set headers for \n\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //get user requests\n\n  const getRequests = async _id => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/requests');\n      dispatch({\n        type: GET_REQUESTS,\n        payload: {\n          requests: res.data,\n          _id: _id\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: REQUEST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //add request\n\n\n  const addRequest = async _id => {\n    try {\n      setLoading();\n      console.log(_id);\n      const res = await axios.post('/api/requests', _id, config);\n      dispatch({\n        type: ADD_REQUEST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REQUEST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //delete request - takes place after delete request you sent, accept request other sent, or reject request other sent \n\n\n  const deleteRequest = async _id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/requests/${_id}`);\n      dispatch({\n        type: DELETE_REQUEST,\n        payload: _id\n      });\n    } catch (err) {\n      dispatch({\n        type: REQUEST_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //set loading\n\n\n  const setLoading = () => {\n    return {\n      type: SET_REQUESTS_LOADING\n    };\n  }; //clear errors\n\n\n  const clearRequestsError = () => {\n    dispatch({\n      type: CLEAR_REQUESTS_ERROR\n    });\n  }; //clear requests\n\n\n  const clearRequests = () => {\n    dispatch({\n      type: CLEAR_REQUESTS\n    });\n  };\n\n  return React.createElement(RequestContext.Provider, {\n    value: {\n      requests: state.requests,\n      requestsSent: state.requestsSent,\n      requestsReceived: state.requestsReceived,\n      requestsError: state.requestsError,\n      requestsLoading: state.requestsLoading,\n      getRequests,\n      addRequest,\n      deleteRequest,\n      clearRequestsError,\n      clearRequests\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default RequestState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/requests/requestState.js"],"names":["React","useReducer","axios","RequestContext","RequestReducer","GET_REQUESTS","ADD_REQUEST","DELETE_REQUEST","REQUEST_ERROR","CLEAR_REQUESTS_ERROR","CLEAR_REQUESTS","SET_REQUESTS_LOADING","RequestState","props","initialState","requests","requestsSent","requestsReceived","requestsError","requestsLoading","state","dispatch","config","headers","getRequests","_id","setLoading","res","get","type","payload","data","err","response","msg","addRequest","console","log","post","deleteRequest","delete","clearRequestsError","clearRequests","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport RequestContext from './requestContext';\nimport RequestReducer from './requestReducer';\nimport {\n  GET_REQUESTS,\n  ADD_REQUEST,\n  DELETE_REQUEST,\n  REQUEST_ERROR,\n  CLEAR_REQUESTS_ERROR,\n  CLEAR_REQUESTS,\n  SET_REQUESTS_LOADING\n} from '../types';\n\nconst RequestState = props => {\n  const initialState = {\n    requests: [],\n    requestsSent: [],\n    requestsReceived: [],\n    requestsError: null,\n    requestsLoading: true\n  };\n\n  const [state, dispatch] = useReducer(RequestReducer, initialState);\n\n  //set headers for \n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  //get user requests\n  const getRequests = async _id => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/requests');\n      dispatch({ type: GET_REQUESTS, payload: { requests: res.data, _id: _id} });\n    } catch (err) {\n      dispatch({ type: REQUEST_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //add request\n  const addRequest = async _id => {\n    try {\n      setLoading();\n      console.log(_id)\n      const res = await axios.post('/api/requests', _id, config);\n      dispatch({ type: ADD_REQUEST, payload: res.data});\n    } catch (err) {\n      dispatch({ type: REQUEST_ERROR, payload: err.response.data.msg });\n    }\n  };\n  \n  //delete request - takes place after delete request you sent, accept request other sent, or reject request other sent \n  const deleteRequest = async _id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/requests/${_id}`);\n      dispatch({ type: DELETE_REQUEST, payload: _id });\n    } catch (err) {\n      dispatch({ type: REQUEST_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //set loading\n  const setLoading = () => {\n    return { type: SET_REQUESTS_LOADING }\n  };\n\n  //clear errors\n  const clearRequestsError = () => {\n    dispatch({ type: CLEAR_REQUESTS_ERROR });\n  };\n\n  //clear requests\n  const clearRequests = () => {\n    dispatch({ type: CLEAR_REQUESTS });\n  };\n\n  return (\n    <RequestContext.Provider\n    value={{\n      requests: state.requests,\n      requestsSent: state.requestsSent,\n      requestsReceived: state.requestsReceived,\n      requestsError: state.requestsError,\n      requestsLoading: state.requestsLoading,\n      getRequests,\n      addRequest,\n      deleteRequest,\n      clearRequestsError,\n      clearRequests\n    }}>\n      {props.children}\n    </RequestContext.Provider>\n  )\n};\n\nexport default RequestState;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalPassFail = ({\n  handleSave,\n  isOwner,\n  goal,\n  time,\n  isStarted\n}) => {\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlert = alertContext.clearAlert;\n  const duration = goal.duration,\n        startDate = goal.startDate,\n        units = goal.units,\n        total = goal.total,\n        compId = goal.compId,\n        tracker = goal.tracker,\n        type = goal.type;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  let isComplete = false;\n\n  if (time = duration) {\n    isComplete = true;\n  }\n\n  useEffect(() => {\n    setRecord(record.map((value, index) => {\n      if (index < time && value === null) {\n        value = false;\n      }\n\n      return value;\n    })); //eslint-disable-next-line\n  }, []); //clear alert before redirect\n\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }; //eslint-disable-next-line\n  }, []);\n  let value = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    if (record[i] === true) value++;\n  }\n\n  let toDatePercentage = round(value / (time + 1) * 100);\n  let totalPercentage = round(value / record.length * 100); //event.target will get the icon and fail, but event.currentTarget will get the button every time\n\n  const handleClick = e => {\n    if (isComplete || !isOwner) {\n      return null;\n    }\n\n    let clickLoc = parseInt(e.currentTarget.name);\n\n    if (isStarted || time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n    } else if (time === clickLoc || time === clickLoc + 1) {\n      setRecord(record.map((value, index) => {\n        if (index === clickLoc) {\n          if (value === null || value === false) {\n            value = true;\n          } else value = false;\n        }\n\n        return value;\n      }));\n    } else {\n      setAlert(\"You can only record data for today and yesterday.\");\n    }\n  };\n\n  const table = () => {\n    let list = [];\n\n    for (let i = 0; i < duration / 7; i++) {\n      list.push(React.createElement(\"span\", {\n        className: \"table-row\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"table-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Week \", i + 1, React.createElement(\"span\", {\n        className: \"hide-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, '', \" - \", moment.utc(startDate).add(7 * i, 'day').format('MMM Do'))), React.createElement(\"span\", {\n        className: \"table-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, buttons(i))));\n    }\n\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n\n    for (let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(React.createElement(\"button\", {\n        className: `table-btn ${time === loc && 'table-btn-today'}`,\n        onClick: handleClick,\n        key: loc,\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, record[loc] && React.createElement(\"i\", {\n        className: \"fas fa-check success-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), !record[loc] && record[loc] !== null && React.createElement(\"i\", {\n        className: \"fas fa-times danger-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), record[loc] === null && ' '));\n    }\n\n    return list;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, table()), React.createElement(GoalInfo, {\n    goal: goal,\n    record: record,\n    time: time,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), !isComplete && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })));\n};\n\nGoalPassFail.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalPassFail;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js"],"names":["React","useState","useContext","useEffect","moment","AlertContext","round","PropTypes","GoalInfo","GoalPassFail","handleSave","isOwner","goal","time","isStarted","alertContext","setAlert","clearAlert","duration","startDate","units","total","compId","tracker","type","record","setRecord","isComplete","map","value","index","i","length","toDatePercentage","totalPercentage","handleClick","e","clickLoc","parseInt","currentTarget","name","table","list","push","utc","add","format","buttons","week","loc","propTypes","func","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalPassFail = ({handleSave, isOwner, goal, time, isStarted}) => {\n  const alertContext = useContext(AlertContext);\n  const {setAlert, clearAlert} = alertContext;\n\n  const { duration, startDate, units, total, compId, tracker, type } = goal;\n\n  const [record, setRecord] = useState(tracker);\n\n  let isComplete = false;\n  if (time = duration) {\n    isComplete = true;\n  }\n\n  useEffect(() => {\n    setRecord(record.map((value, index) => {\n      if (index < time && value === null) {\n        value = false;\n      }\n      return value;\n    }));\n    //eslint-disable-next-line\n  }, []);\n\n  //clear alert before redirect\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }\n    //eslint-disable-next-line\n  }, []);\n\n  let value = 0;\n\n  for (let i = 0; i < record.length; i++ ) {\n    if (record[i] === true) \n      value++;\n  }\n\n  let toDatePercentage = round(value / (time + 1) * 100);\n  let totalPercentage = round(value / record.length * 100);\n\n  //event.target will get the icon and fail, but event.currentTarget will get the button every time\n  const handleClick = e => {\n    if (isComplete || !isOwner) {\n      return null;\n    }\n    let clickLoc = parseInt(e.currentTarget.name);\n    if (isStarted || time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n    }\n    else if (time === clickLoc || time === clickLoc + 1) {\n      setRecord(record.map((value, index) => {\n        if (index === clickLoc) {\n          if (value === null || value === false) {\n            value = true;\n          }\n          else value = false;\n        }\n        return value;\n      }))\n    }\n    else {\n      setAlert(\"You can only record data for today and yesterday.\");\n    }\n  };\n\n  const table = () => {\n    let list = [];\n    for(let i = 0; i < duration / 7; i++) {\n      list.push(\n        <span className='table-row' key={i}>\n          <span className='table-label'>Week {i + 1}\n            <span className='hide-sm'>\n              {''} - {moment.utc(startDate).add(7 * i, 'day').format('MMM Do')}\n            </span>\n          </span>\n          <span className='table-buttons'>\n            {buttons(i)}\n          </span>\n        </span>);\n    }\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n    for(let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(\n        <button \n          className={`table-btn ${time === loc && 'table-btn-today'}`}\n          onClick={handleClick} \n          key={loc} \n          name={loc} \n        >\n          {record[loc] && <i className='fas fa-check success-color' name={loc}/>}\n          {!record[loc] && record[loc] !== null && <i className='fas fa-times danger-color' name={loc}/>}\n          {record[loc] === null && ' '}\n        </button>\n      )\n    }\n    return list;\n  };\n\n  return (\n    <React.Fragment>\n      <ul>\n        {/* Chart */}\n        <li>\n          {table()}\n        </li>\n        {/* Info */}\n        <GoalInfo \n          goal={goal}\n          record={record}\n          time={time}\n          value={value}\n        />\n      </ul>\n      {/* Start Button */}\n      {!isComplete && isOwner && \n        <React.Fragment>\n          <button className='btn btn-primary btn-block' onClick={() => handleSave(record)}>\n            Save Goal\n          </button>\n          <p className='lr-border'/>\n        </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nGoalPassFail.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n}\n\nexport default GoalPassFail;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPage.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\nimport GoalButtons from './goalPieces/GoalButtons';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport GoalChart from './goalPieces/GoalChart';\n\nconst GoalPage = props => {\n  const _useContext = useContext(GoalContext),\n        goalCurrent = _useContext.goalCurrent,\n        goalsError = _useContext.goalsError,\n        updateGoalTracker = _useContext.updateGoalTracker;\n\n  const _useContext2 = useContext(AlertContext),\n        setAlert = _useContext2.setAlert;\n\n  const name = goalCurrent.name,\n        duration = goalCurrent.duration,\n        startDate = goalCurrent.startDate,\n        units = goalCurrent.units,\n        total = goalCurrent.total,\n        tracker = goalCurrent.tracker,\n        type = goalCurrent.type,\n        _id = goalCurrent._id;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  !Object.entries(goalCurrent).length && props.history.push('/'); //clear alert before redirect\n\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }; //eslint-disable-next-line\n  }, []); //fill missed past values in tracker array\n\n  useEffect(() => {\n    if (type === 'pass/fail') {\n      setRecord(record.map((value, index) => {\n        if (index < time && value === null) {\n          value = false;\n        }\n\n        return value;\n      }));\n    } //eslint-disable-next-line\n\n  }, []); //decide if competition has started, is over, or what day we are on\n\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  const isStarted = timeHours >= 0 ? true : false;\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration) time = duration;\n  const isComplete = time === duration ? true : false; //calc goal value\n\n  let value = 0;\n\n  if (type === 'difference') {\n    let temp = record.filter(value => value !== null);\n    value = temp.pop() - record[0];\n  } else if (type === 'total') {\n    for (let i = 0; i < record.length; i++) {\n      value += record[i];\n    }\n  } else if (type === 'pass/fail') {\n    for (let i = 0; i < record.length; i++) {\n      if (record[i] === true) value++;\n    }\n  }\n\n  const handleSave = async record => {\n    await updateGoalTracker(record, _id);\n\n    if (goalsError) {\n      setAlert(goalsError);\n    } else {\n      setAlert('Goal saved!');\n    }\n  };\n\n  let isOwner = true;\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, !Object.entries(goalCurrent).length ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, name), isStarted ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(GoalChart, {\n    goal: goal,\n    record: record,\n    setRecord: setRecord,\n    time: time,\n    isComplete: isCompelete,\n    isOwner: isOwner,\n    isStarted: isStarted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), time !== duration && isOwner && React.createElement(GoalProgress, {\n    type: type,\n    time: time,\n    record: record,\n    setRecord: setRecord,\n    units: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(GoalInfo, {\n    goal: goalCurrent,\n    record: record,\n    time: time,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Start: \", record[0], \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Duration: \", duration, \" days\")))), React.createElement(GoalButtons, {\n    isActive: time <= duration,\n    handleSave: handleSave,\n    isOwner: isOwner,\n    record: record,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })));\n};\n\nexport default GoalPage;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPage.js"],"names":["React","useState","useContext","useEffect","moment","GoalProgress","GoalInfo","GoalButtons","AlertContext","GoalContext","GoalChart","GoalPage","props","goalCurrent","goalsError","updateGoalTracker","setAlert","name","duration","startDate","units","total","tracker","type","_id","record","setRecord","Object","entries","length","history","push","clearAlert","map","value","index","time","timeHours","startOf","diff","isStarted","isComplete","temp","filter","pop","i","handleSave","isOwner","goal","isCompelete","utc","format"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,sBAC6BV,UAAU,CAACO,WAAD,CADvC;AAAA,QAClBI,WADkB,eAClBA,WADkB;AAAA,QACLC,UADK,eACLA,UADK;AAAA,QACOC,iBADP,eACOA,iBADP;;AAAA,uBAELb,UAAU,CAACM,YAAD,CAFL;AAAA,QAElBQ,QAFkB,gBAElBA,QAFkB;;AAAA,QAIlBC,IAJkB,GAI8CJ,WAJ9C,CAIlBI,IAJkB;AAAA,QAIZC,QAJY,GAI8CL,WAJ9C,CAIZK,QAJY;AAAA,QAIFC,SAJE,GAI8CN,WAJ9C,CAIFM,SAJE;AAAA,QAISC,KAJT,GAI8CP,WAJ9C,CAISO,KAJT;AAAA,QAIgBC,KAJhB,GAI8CR,WAJ9C,CAIgBQ,KAJhB;AAAA,QAIuBC,OAJvB,GAI8CT,WAJ9C,CAIuBS,OAJvB;AAAA,QAIgCC,IAJhC,GAI8CV,WAJ9C,CAIgCU,IAJhC;AAAA,QAIsCC,GAJtC,GAI8CX,WAJ9C,CAIsCW,GAJtC;;AAAA,oBAMEvB,QAAQ,CAACqB,OAAD,CANV;AAAA;AAAA,QAMnBG,MANmB;AAAA,QAMXC,SANW;;AAQ1B,GAACC,MAAM,CAACC,OAAP,CAAef,WAAf,EAA4BgB,MAA7B,IAAuCjB,KAAK,CAACkB,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAvC,CAR0B,CAU1B;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX6B,MAAAA,UAAU;AACX,KAFD,CADc,CAId;AACD,GALQ,EAKN,EALM,CAAT,CAX0B,CAkB1B;;AACA7B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,IAAI,KAAK,WAAb,EAA0B;AACxBG,MAAAA,SAAS,CAACD,MAAM,CAACQ,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,YAAIA,KAAK,GAAGC,IAAR,IAAgBF,KAAK,KAAK,IAA9B,EAAoC;AAClCA,UAAAA,KAAK,GAAG,KAAR;AACD;;AACD,eAAOA,KAAP;AACD,OALS,CAAD,CAAT;AAMD,KARa,CASd;;AACD,GAVQ,EAUN,EAVM,CAAT,CAnB0B,CA+B1B;;AACA,MAAIG,SAAS,GAAGjC,MAAM,GAAGkC,OAAT,CAAiB,KAAjB,EAAwBC,IAAxB,CAA6BpB,SAA7B,EAAwC,OAAxC,CAAhB;AACA,QAAMqB,SAAS,GAAGH,SAAS,IAAI,CAAb,GAAiB,IAAjB,GAAwB,KAA1C;AACA,MAAID,IAAI,GAAGhC,MAAM,GAAGkC,OAAT,CAAiB,KAAjB,EAAwBC,IAAxB,CAA6BpB,SAA7B,EAAwC,MAAxC,CAAX;AACA,MAAIiB,IAAI,GAAGlB,QAAX,EACEkB,IAAI,GAAGlB,QAAP;AACF,QAAMuB,UAAU,GAAGL,IAAI,KAAKlB,QAAT,GAAoB,IAApB,GAA2B,KAA9C,CArC0B,CAuC1B;;AACA,MAAIgB,KAAK,GAAG,CAAZ;;AACA,MAAIX,IAAI,KAAK,YAAb,EAA2B;AACzB,QAAImB,IAAI,GAAGjB,MAAM,CAACkB,MAAP,CAAcT,KAAK,IAAIA,KAAK,KAAK,IAAjC,CAAX;AACAA,IAAAA,KAAK,GAAGQ,IAAI,CAACE,GAAL,KAAanB,MAAM,CAAC,CAAD,CAA3B;AACD,GAHD,MAGO,IAAIF,IAAI,KAAK,OAAb,EAAsB;AAC3B,SAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,MAAM,CAACI,MAA3B,EAAmCgB,CAAC,EAApC,EAAyC;AACvCX,MAAAA,KAAK,IAAIT,MAAM,CAACoB,CAAD,CAAf;AACD;AACF,GAJM,MAIA,IAAItB,IAAI,KAAK,WAAb,EAA0B;AAC/B,SAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,MAAM,CAACI,MAA3B,EAAmCgB,CAAC,EAApC,EAAyC;AACvC,UAAIpB,MAAM,CAACoB,CAAD,CAAN,KAAc,IAAlB,EACEX,KAAK;AACR;AACF;;AAED,QAAMY,UAAU,GAAG,MAAOrB,MAAP,IAAkB;AACnC,UAAMV,iBAAiB,CAACU,MAAD,EAASD,GAAT,CAAvB;;AACA,QAAIV,UAAJ,EAAgB;AACdE,MAAAA,QAAQ,CAACF,UAAD,CAAR;AACD,KAFD,MAGK;AACHE,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACD;AACF,GARD;;AAUA,MAAI+B,OAAO,GAAG,IAAd;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACpB,MAAM,CAACC,OAAP,CAAef,WAAf,EAA4BgB,MAA7B,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCZ,IAAnC,CADF,EAEGuB,SAAS,GACR,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEQ,IADR;AAEE,IAAA,MAAM,EAAEvB,MAFV;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,IAAI,EAAEU,IAJR;AAKE,IAAA,UAAU,EAAEa,WALd;AAME,IAAA,OAAO,EAAEF,OANX;AAOE,IAAA,SAAS,EAAEP,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUGJ,IAAI,KAAKlB,QAAT,IAAqB6B,OAArB,IACC,oBAAC,YAAD;AACE,IAAA,IAAI,EAAExB,IADR;AAEE,IAAA,IAAI,EAAEa,IAFR;AAGE,IAAA,MAAM,EAAEX,MAHV;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,KAAK,EAAEN,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAmBE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEP,WADR;AAEE,IAAA,MAAM,EAAEY,MAFV;AAGE,IAAA,IAAI,EAAEW,IAHR;AAIE,IAAA,KAAK,EAAEF,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,CADQ,GA8BR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUT,MAAM,CAAC,CAAD,CADhB,OACsBL,KADtB,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUhB,MAAM,CAAC8C,GAAP,CAAW/B,SAAX,EAAsBgC,MAAtB,CAA6B,QAA7B,CADV,CAJF,CADF,CAFF,EAYE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS9B,KADT,OACiBD,KADjB,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaF,QADb,UAJF,CADF,CAZF,CAhCJ,EAwDE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEkB,IAAI,IAAIlB,QADpB;AAEE,IAAA,UAAU,EAAE4B,UAFd;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,EAAEtB,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDF,CAJF,CADF;AAuED,CA1ID;;AA4IA,eAAed,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\nimport GoalButtons from './goalPieces/GoalButtons';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport GoalChart from './goalPieces/GoalChart';\n\nconst GoalPage = (props) => {\n  const { goalCurrent, goalsError, updateGoalTracker } = useContext(GoalContext);\n  const { setAlert } = useContext(AlertContext);\n\n  const { name, duration, startDate, units, total, tracker, type, _id } = goalCurrent;\n \n  const [record, setRecord] = useState(tracker);\n\n  !Object.entries(goalCurrent).length && props.history.push('/');\n\n  //clear alert before redirect\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }\n    //eslint-disable-next-line\n  }, []);\n\n  //fill missed past values in tracker array\n  useEffect(() => {\n    if (type === 'pass/fail') {\n      setRecord(record.map((value, index) => {\n        if (index < time && value === null) {\n          value = false;\n        }\n        return value;\n      }));\n    }\n    //eslint-disable-next-line\n  }, []);\n\n  //decide if competition has started, is over, or what day we are on\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  const isStarted = timeHours >= 0 ? true : false;\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration)\n    time = duration;\n  const isComplete = time === duration ? true : false;\n\n  //calc goal value\n  let value = 0;\n  if (type === 'difference') {\n    let temp = record.filter(value => value !== null)\n    value = temp.pop() - record[0];\n  } else if (type === 'total') {\n    for (let i = 0; i < record.length; i++ ) {\n      value += record[i];\n    }\n  } else if (type === 'pass/fail') {\n    for (let i = 0; i < record.length; i++ ) {\n      if (record[i] === true) \n        value++;\n    }\n  }\n\n  const handleSave = async (record) => {\n    await updateGoalTracker(record, _id);\n    if (goalsError) {\n      setAlert(goalsError);\n    }\n    else {\n      setAlert('Goal saved!');\n    }\n  }\n  \n  let isOwner = true;\n\n  return (\n    <div className='form-container'>\n    {!Object.entries(goalCurrent).length ? (\n      <h2>Loading...</h2>\n    ) : (\n      <React.Fragment>\n        <h2 className='collection-header'>{name}</h2>\n        {isStarted ? (\n          <React.Fragment>\n            <ul>\n              <GoalChart \n                goal={goal}\n                record={record}\n                setRecord={setRecord} \n                time={time}\n                isComplete={isCompelete}\n                isOwner={isOwner}\n                isStarted={isStarted}\n              />\n              {time !== duration && isOwner && \n                <GoalProgress \n                  type={type}\n                  time={time}\n                  record={record}\n                  setRecord={setRecord}\n                  units={units}\n                />\n              }\n              <GoalInfo \n                goal={goalCurrent}\n                record={record}\n                time={time}\n                value={value}\n              />\n            </ul>\n          </React.Fragment>\n        ) : (\n          <ul>\n            {/* Info */}\n            <li className='table-info lr-border'>\n              <div className='space-between'>\n                <span>\n                  Start: {record[0]} {units}\n                </span>\n                <span className='right'>\n                  Begins {moment.utc(startDate).format('MMM Do')}\n                </span>\n              </div>\n            </li>\n            <li className='table-info lr-border'>\n              <div className='space-between'>\n                <span>\n                  Goal: {total} {units}\n                </span>\n                <span className='right'>\n                  Duration: {duration} days\n                </span>\n              </div>\n            </li>\n          </ul>\n        )}\n        <GoalButtons \n          isActive={time <= duration} \n          handleSave={handleSave}\n          isOwner={isOwner}\n          record={record}\n        />\n      </React.Fragment>\n    )}\n    </div>\n  )\n};\n\nexport default GoalPage;"]},"metadata":{},"sourceType":"module"}
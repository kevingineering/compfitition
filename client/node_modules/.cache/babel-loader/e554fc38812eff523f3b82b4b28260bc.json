{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/alerts/alertState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT, CLEAR_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = {};\n\n  const _useReducer = useReducer(AlertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //set alert - will timeout after 3 seconds\n  //if type is true, clear alert will not clear it\n\n\n  const setAlert = (msg, persist = false) => {\n    //console.log('setAlert');\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        id,\n        persist\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), 3000);\n  }; //clear alert\n\n\n  const clearAlert = () => {\n    //console.log('clearAlert');\n    dispatch({\n      type: CLEAR_ALERT\n    });\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert,\n      clearAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/alerts/alertState.js"],"names":["React","useReducer","uuid","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","CLEAR_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","persist","id","v4","type","payload","setTimeout","clearAlert","alert","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACEC,SADF,EAEEC,YAFF,EAGEC,WAHF,QAIO,UAJP;;AAMA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG,EAArB;;AAD0B,sBAGAT,UAAU,CAACG,YAAD,EAAeM,YAAf,CAHV;AAAA;AAAA,QAGnBC,KAHmB;AAAA,QAGZC,QAHY,oBAK1B;AACA;;;AACA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,KAAhB,KAA0B;AACzC;AACA,UAAMC,EAAE,GAAGd,IAAI,CAACe,EAAL,EAAX;AACAL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEb,SAAR;AAAmBc,MAAAA,OAAO,EAAE;AAACL,QAAAA,GAAD;AAAME,QAAAA,EAAN;AAAUD,QAAAA;AAAV;AAA5B,KAAD,CAAR;AAEAK,IAAAA,UAAU,CAAC,MAAMR,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEZ,YAAR;AAAsBa,MAAAA,OAAO,EAAEH;AAA/B,KAAD,CAAf,EAAsD,IAAtD,CAAV;AACD,GAND,CAP0B,CAe1B;;;AACA,QAAMK,UAAU,GAAG,MAAM;AACvB;AACAT,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACD,GAHD;;AAKA,SACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLe,MAAAA,KAAK,EAAEX,KADF;AAELE,MAAAA,QAFK;AAGLQ,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGZ,KAAK,CAACc,QAPT,CADF;AAWD,CAhCD;;AAkCA,eAAef,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport {\n  SET_ALERT,\n  REMOVE_ALERT,\n  CLEAR_ALERT\n} from '../types';\n\nconst AlertState = props => {\n  const initialState = {};\n\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n  //set alert - will timeout after 3 seconds\n  //if type is true, clear alert will not clear it\n  const setAlert = (msg, persist = false) => {\n    //console.log('setAlert');\n    const id = uuid.v4();\n    dispatch({ type: SET_ALERT, payload: {msg, id, persist}});\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 3000);\n  };\n\n  //clear alert\n  const clearAlert = () => {\n    //console.log('clearAlert');\n    dispatch({ type: CLEAR_ALERT });\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alert: state,\n        setAlert,\n        clearAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>    \n  );\n};\n\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}
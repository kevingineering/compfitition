{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartTotal from './GoalChartTotal';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\n\nconst GoalTotal = ({\n  handleSave,\n  isOwner,\n  goal,\n  time,\n  isStarted\n}) => {\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  const duration = goal.duration,\n        startDate = goal.startDate,\n        units = goal.units,\n        total = goal.total,\n        compId = goal.compId,\n        tracker = goal.tracker,\n        type = goal.type; //calc progress so far\n\n  let runningTotal = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    runningTotal += record[i];\n  } //state for controlled variables\n\n\n  const _useState3 = useState(record[time]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        today = _useState4[0],\n        setToday = _useState4[1];\n\n  const _useState5 = useState(record[time - 1]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        yesterday = _useState6[0],\n        setYesterday = _useState6[1]; //if value is less than zero, null, if value is empty ('') set zero in array, otherwise set value in array\n\n\n  const handleChange = e => {\n    if (e.target.value < 0) return null;\n\n    if (e.target.name === 'today') {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          if (e.target.value === '') value = 0;else value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));\n    } else {\n      setYesterday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          if (e.target.value === '') value = 0;else value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, isStarted ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(GoalChartTotal, {\n    units: units,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(GoalProgress, {\n    type: type,\n    time: time,\n    record: record,\n    setRecord: setRecord,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Record Your Progress\")), React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"width-75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Today:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"center\",\n    id: \"chart-input\",\n    type: \"number\",\n    value: today,\n    name: \"today\",\n    onChange: handleChange,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), units)), time > 0 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"width-75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Yesterday:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"center\",\n    id: \"chart-input\",\n    type: \"number\",\n    value: yesterday,\n    name: \"yesterday\",\n    onChange: handleChange,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), units)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Start Date: \", moment.utc(startDate).format('MMMM Do, YYYY')), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, time === duration ? `Duration: ${duration} days` : `Day: ${time + 1} / ${duration}`))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Total: \", runningTotal, \" / \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Goal Completion: \", round(runningTotal / total * 100), \"%\")))), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Duration: \", duration, \" days\")))));\n};\n\nGoalTotal.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalTotal;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js"],"names":["React","useState","moment","GoalChartTotal","round","PropTypes","GoalProgress","GoalTotal","handleSave","isOwner","goal","time","isStarted","tracker","record","setRecord","duration","startDate","units","total","compId","type","runningTotal","i","length","today","setToday","yesterday","setYesterday","handleChange","e","target","value","name","map","index","parseFloat","utc","format","propTypes","func","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartTotal from './GoalChartTotal';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\n\nconst GoalTotal = ({handleSave, isOwner, goal, time, isStarted}) => {\n  \n  const [record, setRecord] = useState(tracker);\n\n  const { duration, startDate, units, total, compId, tracker, type } = goal;\n\n\n  //calc progress so far\n  let runningTotal = 0;\n  for (let i = 0; i < record.length; i++ ) {\n    runningTotal += record[i];\n  }\n\n  //state for controlled variables\n  const [today, setToday] = useState(record[time]);\n  const [yesterday, setYesterday] = useState(record[time - 1]);\n\n  //if value is less than zero, null, if value is empty ('') set zero in array, otherwise set value in array\n  const handleChange = e => {\n    if (e.target.value < 0)\n      return null;\n    if(e.target.name === 'today') {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          if (e.target.value === '')\n            value = 0;\n          else value = parseFloat(e.target.value);\n        }\n        return value;\n      }));\n    } else {\n      setYesterday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          if (e.target.value === '')\n            value = 0;\n          else value = parseFloat(e.target.value);\n        }\n        return value;\n      }))\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {isStarted ? (\n        <React.Fragment>\n          <ul>\n            {/* Chart */}\n            <GoalChartTotal units={units} record={record} time={time}/>\n            {/* Progress */}\n            {time !== duration && isOwner && (\n              <React.Fragment>\n              <GoalProgress \n                  type={type}\n                  time={time}\n                  record={record}\n                  setRecord={setRecord}\n                />\n                <li className='table-info lr-border center'>\n                  <strong>Record Your Progress</strong>\n                </li>\n                <li className='table-info lr-border center'>\n                  <span className='width-75'>\n                    Today:\n                  </span>\n                  <span>\n                    <input \n                      className='center'\n                      id='chart-input'\n                      type='number' \n                      value={today} \n                      name='today' \n                      onChange={handleChange}\n                      min='0'\n                    />\n                    {units}\n                  </span>\n                </li>\n                {time > 0 &&\n                  <React.Fragment>\n                    <li className='table-info lr-border center'>\n                      <span className='width-75'>\n                        Yesterday:\n                      </span>\n                      <span>\n                        <input \n                          className='center'\n                          id='chart-input'\n                          type='number' \n                          value={yesterday} \n                          name='yesterday' \n                          onChange={handleChange}\n                          min='0'\n                        />\n                        {units}\n                      </span>\n                    </li>\n                    <hr/>\n                  </React.Fragment>\n                }\n              </React.Fragment>\n            )}\n            {/* Info */}\n            <li className='table-info lr-border'>\n              <div className='space-between'>\n                <span>\n                  Start Date: {moment.utc(startDate).format('MMMM Do, YYYY')}\n                </span>\n                <span className='right'>\n                  {time === duration ? \n                  `Duration: ${duration} days` : \n                  `Day: ${time + 1} / ${duration}`}\n                </span>\n              </div>\n            </li>\n            <li className='table-info lr-border'>\n              <div className='space-between'>\n                <span>\n                  Total: {runningTotal} / {total} {units}\n                </span>\n                <span className='right'>\n                  Goal Completion: {round(runningTotal / total * 100)}%\n                </span>\n              </div>\n            </li>\n          </ul>\n          {/* SaveButton */}\n          { time !== duration && isOwner &&\n            <React.Fragment>\n              <button \n                className='btn btn-primary btn-block' \n                onClick={() => handleSave(record)}\n              >\n                Save Goal\n              </button>\n              <p className='lr-border'/>\n            </React.Fragment>\n          }\n        </React.Fragment>\n      ) : (\n        <ul>\n          {/* Info */}\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Goal: {total} {units}\n              </span>\n              <span className='right'>\n                Begins {moment.utc(startDate).format('MMM Do')}\n              </span>\n            </div>\n          </li>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Duration: {duration} days\n              </span>\n            </div>\n          </li>\n        </ul>\n      )\n      }\n    </React.Fragment>\n  )\n}\n\nGoalTotal.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n}\n\nexport default GoalTotal;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPage.js\";\nimport React, { useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport GoalPassFail from './GoalPassFail';\nimport GoalTotal from './GoalTotal';\nimport GoalDifference from './GoalDifference';\nimport moment from 'moment';\nimport GoalButtons from './goalPieces/GoalButtons';\n\nconst GoalPage = props => {\n  const _useContext = useContext(GoalContext),\n        goalCurrent = _useContext.goalCurrent,\n        goalsError = _useContext.goalsError,\n        updateGoalTracker = _useContext.updateGoalTracker;\n\n  const _useContext2 = useContext(AlertContext),\n        setAlert = _useContext2.setAlert;\n\n  const name = goalCurrent.name,\n        _id = goalCurrent._id,\n        type = goalCurrent.type,\n        startDate = goalCurrent.startDate,\n        duration = goalCurrent.duration;\n  !Object.entries(goalCurrent).length && props.history.push('/');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration) time = duration;\n\n  const handleSave = async record => {\n    await updateGoalTracker(record, _id);\n\n    if (goalsError) {\n      setAlert(goalsError);\n    } else {\n      setAlert('Goal saved!');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, !Object.entries(goalCurrent).length ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, name), type === 'pass/fail' && React.createElement(GoalPassFail, {\n    goal: goalCurrent,\n    handleSave: handleSave,\n    isOwner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), type === 'total' && React.createElement(GoalTotal, {\n    goal: goalCurrent,\n    handleSave: handleSave,\n    isOwner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), type === 'difference' && React.createElement(GoalDifference, {\n    goal: goalCurrent,\n    handleSave: handleSave,\n    isOwner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(GoalButtons, {\n    isActive: time <= duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n};\n\nexport default GoalPage;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPage.js"],"names":["React","useContext","GoalContext","AlertContext","GoalPassFail","GoalTotal","GoalDifference","moment","GoalButtons","GoalPage","props","goalCurrent","goalsError","updateGoalTracker","setAlert","name","_id","type","startDate","duration","Object","entries","length","history","push","timeHours","startOf","diff","time","handleSave","record"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport GoalPassFail from './GoalPassFail';\nimport GoalTotal from './GoalTotal';\nimport GoalDifference from './GoalDifference';\nimport moment from 'moment';\nimport GoalButtons from './goalPieces/GoalButtons';\n\nconst GoalPage = props => {\n  const { goalCurrent, goalsError, updateGoalTracker } = useContext(GoalContext);\n\n  const { setAlert } = useContext(AlertContext);\n\n  const { name, _id, type, startDate, duration } = goalCurrent;\n\n  !Object.entries(goalCurrent).length && props.history.push('/');\n\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration)\n    time = duration;\n\n  const handleSave = async (record) => {\n    await updateGoalTracker(record, _id);\n    if (goalsError) {\n      setAlert(goalsError);\n    }\n    else {\n      setAlert('Goal saved!');\n    }\n  }\n\n  return (\n    <div className='form-container'>\n    {!Object.entries(goalCurrent).length ? (\n      <h2>Loading...</h2>\n    ) : (\n      <React.Fragment>\n        <h2 className='collection-header'>{name}</h2>\n        {type === 'pass/fail' && \n          <GoalPassFail goal={goalCurrent} handleSave={handleSave} isOwner={true}/>}\n        {type === 'total' && \n          <GoalTotal goal={goalCurrent} handleSave={handleSave} isOwner={true}/>}\n        {type === 'difference' && \n          <GoalDifference goal={goalCurrent} handleSave={handleSave} isOwner={true}/>}\n        <GoalButtons isActive={time <= duration} />\n      </React.Fragment>\n    )}\n    </div>\n  )\n}\n\nexport default GoalPage;\n"]},"metadata":{},"sourceType":"module"}
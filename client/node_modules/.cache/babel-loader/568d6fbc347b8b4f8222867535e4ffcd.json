{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartTotal from './GoalChartTotal';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\n\nconst GoalTotal = ({\n  handleSave,\n  isOwner,\n  goal: {\n    duration,\n    startDate,\n    units,\n    total,\n    compId,\n    tracker\n  }\n}) => {\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1]; //calc progress so far\n\n\n  let runningTotal = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    runningTotal += record[i];\n  } //calc time since goal started\n\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  if (time > duration) time = duration; //state for controlled variables\n\n  const _useState3 = useState(record[time]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        today = _useState4[0],\n        setToday = _useState4[1];\n\n  const _useState5 = useState(record[time - 1]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        yesterday = _useState6[0],\n        setYesterday = _useState6[1]; //if value is less than zero, null, if value is empty ('') set zero in array, otherwise set value in array\n\n\n  const handleChange = e => {\n    if (e.target.value < 0) return null;\n\n    if (e.target.name === 'today') {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          if (e.target.value === '') value = 0;else value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));\n    } else {\n      setYesterday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          if (e.target.value === '') value = 0;else value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, timeHours >= 0 ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(GoalChartTotal, {\n    units: units,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Record Your Progress\")), React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"width-75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Today:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"center\",\n    id: \"chart-input\",\n    type: \"number\",\n    value: today,\n    name: \"today\",\n    onChange: handleChange,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), units)), time > 0 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"width-75\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Yesterday:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"center\",\n    id: \"chart-input\",\n    type: \"number\",\n    value: yesterday,\n    name: \"yesterday\",\n    onChange: handleChange,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), units)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Start Date: \", moment.utc(startDate).format('MMMM Do, YYYY')), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, time === duration ? `Duration: ${duration} days` : `Day: ${time + 1} / ${duration}`))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Total: \", runningTotal, \" / \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Goal Completion: \", round(runningTotal / total * 100), \"%\")))), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Duration: \", duration, \" days\")))));\n};\n\nGoalTotal.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalTotal;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js"],"names":["React","useState","moment","GoalChartTotal","round","PropTypes","GoalTotal","handleSave","isOwner","goal","duration","startDate","units","total","compId","tracker","record","setRecord","runningTotal","i","length","time","startOf","diff","timeHours","today","setToday","yesterday","setYesterday","handleChange","e","target","value","name","map","index","parseFloat","utc","format","propTypes","func","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartTotal from './GoalChartTotal';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\n\nconst GoalTotal = ({handleSave, isOwner, goal: { duration, startDate, units, total, compId, tracker }}) => {\n  const [record, setRecord] = useState(tracker);\n\n  //calc progress so far\n  let runningTotal = 0;\n  for (let i = 0; i < record.length; i++ ) {\n    runningTotal += record[i];\n  }\n\n  //calc time since goal started\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours')\n  if (time > duration)\n    time = duration;\n\n  //state for controlled variables\n  const [today, setToday] = useState(record[time]);\n  const [yesterday, setYesterday] = useState(record[time - 1]);\n\n  //if value is less than zero, null, if value is empty ('') set zero in array, otherwise set value in array\n  const handleChange = e => {\n    if (e.target.value < 0)\n      return null;\n    if(e.target.name === 'today') {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          if (e.target.value === '')\n            value = 0;\n          else value = parseFloat(e.target.value);\n        }\n        return value;\n      }));\n    } else {\n      setYesterday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          if (e.target.value === '')\n            value = 0;\n          else value = parseFloat(e.target.value);\n        }\n        return value;\n      }))\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {timeHours >= 0 ? (\n        <React.Fragment>\n          <ul>\n            <GoalChartTotal units={units} record={record} time={time}/>\n            {time !== duration && isOwner && (\n              <React.Fragment>\n                <li className='table-info lr-border center'>\n                  <strong>Record Your Progress</strong>\n                </li>\n                <li className='table-info lr-border center'>\n                  <span className='width-75'>\n                    Today:\n                  </span>\n                  <span>\n                    <input \n                      className='center'\n                      id='chart-input'\n                      type='number' \n                      value={today} \n                      name='today' \n                      onChange={handleChange}\n                      min='0'\n                    />\n                    {units}\n                  </span>\n                </li>\n                {time > 0 &&\n                  <React.Fragment>\n                    <li className='table-info lr-border center'>\n                      <span className='width-75'>\n                        Yesterday:\n                      </span>\n                      <span>\n                        <input \n                          className='center'\n                          id='chart-input'\n                          type='number' \n                          value={yesterday} \n                          name='yesterday' \n                          onChange={handleChange}\n                          min='0'\n                        />\n                        {units}\n                      </span>\n                    </li>\n                    <hr/>\n                  </React.Fragment>\n                }\n              </React.Fragment>\n            )}\n            <li className='table-info lr-border'>\n              <div className='space-between'>\n                <span>\n                  Start Date: {moment.utc(startDate).format('MMMM Do, YYYY')}\n                </span>\n                <span className='right'>\n                  {time === duration ? \n                  `Duration: ${duration} days` : \n                  `Day: ${time + 1} / ${duration}`}\n                </span>\n              </div>\n            </li>\n            <li className='table-info lr-border'>\n              <div className='space-between'>\n                <span>\n                  Total: {runningTotal} / {total} {units}\n                </span>\n                <span className='right'>\n                  Goal Completion: {round(runningTotal / total * 100)}%\n                </span>\n              </div>\n            </li>\n          </ul>\n          { time !== duration && isOwner &&\n            <React.Fragment>\n              <button \n                className='btn btn-primary btn-block' \n                onClick={() => handleSave(record)}\n              >\n                Save Goal\n              </button>\n              <p className='lr-border'/>\n            </React.Fragment>\n          }\n        </React.Fragment>\n      ) : (\n        <ul>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Goal: {total} {units}\n              </span>\n              <span className='right'>\n                Begins {moment.utc(startDate).format('MMM Do')}\n              </span>\n            </div>\n          </li>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Duration: {duration} days\n              </span>\n            </div>\n          </li>\n        </ul>\n      )\n      }\n    </React.Fragment>\n  )\n}\n\nGoalTotal.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n}\n\nexport default GoalTotal;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\n\nconst GoalDifference = ({\n  handleSave,\n  goalsCurrent: {\n    duration,\n    startDate,\n    units,\n    total,\n    compId,\n    tracker\n  }\n}) => {\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1]; //calc time since goal started\n\n\n  let time = moment.utc().startOf('day').diff(startDate, 'days');\n  if (time > duration) time = duration;\n  console.log(moment.utc().startOf('day').diff(startDate, 'hours')); //state for controlled variables\n\n  const _useState3 = useState(record[time]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        today = _useState4[0],\n        setToday = _useState4[1];\n\n  if (today === null) setToday(''); //calc change to date\n\n  let temp = record.filter(value => value !== null);\n  let count = temp.pop() - record[0];\n  let progress = `Change: ${count > 0 ? '+' : ''}${count} ${units}`; //if value is less than zero, null, if value is empty ('') do not record, otherwise set value in array\n\n  const handleChange = e => {\n    if (e.target.value < 0) return null;else {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          if (e.target.value === '') return null;\n          value = parseFloat(e.target.value);\n        }\n\n        return value;\n      }));\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, time >= 0 ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(GoalChartDifference, {\n    duration: duration,\n    units: units,\n    total: total,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Record Your Progress\")), React.createElement(\"li\", {\n    className: \"table-info lr-border center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Today:\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"center\",\n    id: \"chart-input\",\n    type: \"number\",\n    value: today,\n    name: \"today\",\n    onChange: handleChange,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), units)), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, progress), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Day: \", time + 1, \" / \", duration))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Progress To Date: \", round(count / (total - record[0]) * 100), \"%\")), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Save Goal\")) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Start: \", record[0], \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units)));\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func.isRequired,\n  goalsCurrent: PropTypes.object.isRequired\n};\nexport default GoalDifference;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js"],"names":["React","useState","moment","GoalChartDifference","round","PropTypes","GoalDifference","handleSave","goalsCurrent","duration","startDate","units","total","compId","tracker","record","setRecord","time","utc","startOf","diff","console","log","today","setToday","temp","filter","value","count","pop","progress","handleChange","e","target","map","index","parseFloat","format","propTypes","func","isRequired","object"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,MAArC;AAA6CC,IAAAA;AAA7C;AAA3B,CAAD,KAAwF;AAAA,oBACjFb,QAAQ,CAACa,OAAD,CADyE;AAAA;AAAA,QACtGC,MADsG;AAAA,QAC9FC,SAD8F,kBAG7G;;;AACA,MAAIC,IAAI,GAAGf,MAAM,CAACgB,GAAP,GAAaC,OAAb,CAAqB,KAArB,EAA4BC,IAA5B,CAAiCV,SAAjC,EAA4C,MAA5C,CAAX;AACA,MAAIO,IAAI,GAAGR,QAAX,EACEQ,IAAI,GAAGR,QAAP;AAEFY,EAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAM,CAACgB,GAAP,GAAaC,OAAb,CAAqB,KAArB,EAA4BC,IAA5B,CAAiCV,SAAjC,EAA4C,OAA5C,CAAZ,EAR6G,CAU7G;;AAV6G,qBAWnFT,QAAQ,CAACc,MAAM,CAACE,IAAD,CAAP,CAX2E;AAAA;AAAA,QAWtGM,KAXsG;AAAA,QAW/FC,QAX+F;;AAY7G,MAAID,KAAK,KAAK,IAAd,EAAoBC,QAAQ,CAAC,EAAD,CAAR,CAZyF,CAc7G;;AACA,MAAIC,IAAI,GAAGV,MAAM,CAACW,MAAP,CAAcC,KAAK,IAAIA,KAAK,KAAK,IAAjC,CAAX;AACA,MAAIC,KAAK,GAAGH,IAAI,CAACI,GAAL,KAAad,MAAM,CAAC,CAAD,CAA/B;AACA,MAAIe,QAAQ,GAAI,WAAUF,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAAG,GAAEA,KAAM,IAAGjB,KAAM,EAAhE,CAjB6G,CAmB7G;;AACA,QAAMoB,YAAY,GAAGC,CAAC,IAAI;AACxB,QAAIA,CAAC,CAACC,MAAF,CAASN,KAAT,GAAiB,CAArB,EACE,OAAO,IAAP,CADF,KAEK;AACHH,MAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACAX,MAAAA,SAAS,CAACD,MAAM,CAACmB,GAAP,CAAW,CAACP,KAAD,EAAQQ,KAAR,KAAkB;AACrC,YAAIA,KAAK,KAAKlB,IAAd,EAAoB;AAClB,cAAIe,CAAC,CAACC,MAAF,CAASN,KAAT,KAAmB,EAAvB,EACE,OAAO,IAAP;AACFA,UAAAA,KAAK,GAAGS,UAAU,CAACJ,CAAC,CAACC,MAAF,CAASN,KAAV,CAAlB;AACD;;AACD,eAAOA,KAAP;AACD,OAPS,CAAD,CAAT;AAQD;AACF,GAdD;;AAgBA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,IAAI,CAAR,GACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAER,QAA/B;AAAyC,IAAA,KAAK,EAAEE,KAAhD;AAAuD,IAAA,KAAK,EAAEC,KAA9D;AAAqE,IAAA,MAAM,EAAEG,MAA7E;AAAqF,IAAA,IAAI,EAAEE,IAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAFF,EAKE;AAAI,IAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEM,KAJT;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,QAAQ,EAAEQ,YANZ;AAOE,IAAA,GAAG,EAAC,GAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUGpB,KAVH,CAJF,CALF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,EAuBE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,QADH,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQb,IAAI,GAAG,CADf,SACqBR,QADrB,CAJF,CADF,CAvBF,EAiCE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACqBL,KAAK,CAACwB,KAAK,IAAIhB,KAAK,GAAGG,MAAM,CAAC,CAAD,CAAlB,CAAL,GAA8B,GAA/B,CAD1B,MAjCF,CADF,EAsCE;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,MAAMR,UAAU,CAACQ,MAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtCF,CADD,GA4CC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUA,MAAM,CAAC,CAAD,CADhB,OACsBJ,KADtB,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUT,MAAM,CAACgB,GAAP,CAAWR,SAAX,EAAsB2B,MAAtB,CAA6B,QAA7B,CADV,CAJF,CADF,CADF,EAWE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSzB,KADT,OACiBD,KADjB,CAXF,CA7CJ,CADF;AAgED,CApGD;;AAsGAL,cAAc,CAACgC,SAAf,GAA2B;AACzB/B,EAAAA,UAAU,EAAEF,SAAS,CAACkC,IAAV,CAAeC,UADF;AAEzBhC,EAAAA,YAAY,EAAEH,SAAS,CAACoC,MAAV,CAAiBD;AAFN,CAA3B;AAKA,eAAelC,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\n\nconst GoalDifference = ({handleSave, goalsCurrent: { duration, startDate, units, total, compId, tracker }}) => {\n  const [record, setRecord] = useState(tracker);\n\n  //calc time since goal started\n  let time = moment.utc().startOf('day').diff(startDate, 'days');\n  if (time > duration)\n    time = duration;\n\n  console.log(moment.utc().startOf('day').diff(startDate, 'hours'));\n\n  //state for controlled variables\n  const [today, setToday] = useState(record[time]);\n  if (today === null) setToday('');\n\n  //calc change to date\n  let temp = record.filter(value => value !== null)\n  let count = temp.pop() - record[0];\n  let progress = `Change: ${count > 0 ? '+' : ''}${count} ${units}`\n\n  //if value is less than zero, null, if value is empty ('') do not record, otherwise set value in array\n  const handleChange = e => {\n    if (e.target.value < 0)\n      return null;\n    else {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          if (e.target.value === '')\n            return null;\n          value = parseFloat(e.target.value);\n        }\n        return value;\n      }));\n    } \n  }\n\n  return (\n    <React.Fragment>\n      {time >= 0 ? (\n        <React.Fragment>\n          <ul>\n            <GoalChartDifference duration={duration} units={units} total={total} record={record} time={time}/>\n            <li className='table-info lr-border center'>\n              <strong>Record Your Progress</strong>\n            </li>\n            <li className='table-info lr-border center'>\n              <span>\n                Today: \n              </span>\n              <span>\n                <input \n                  className='center'\n                  id='chart-input'\n                  type='number' \n                  value={today} \n                  name='today' \n                  onChange={handleChange}\n                  min='0'\n                />\n                {units}\n              </span>\n            </li>\n            <hr/>\n            <li className='table-info lr-border'>\n              <div className='space-between'>\n                <span>\n                  {progress}\n                </span>\n                <span className='right'>\n                  Day: {time + 1} / {duration}\n                </span>\n              </div>\n            </li>\n            <li className='table-info lr-border'>\n              Progress To Date: {round(count / (total - record[0]) * 100)}%\n            </li>\n          </ul>\n          <button className='btn btn-primary btn-block' onClick={() => handleSave(record)}>\n            Save Goal\n          </button>\n        </React.Fragment>\n      ) : (\n        <ul>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Start: {record[0]} {units}\n              </span>\n              <span className='right'>\n                Begins {moment.utc(startDate).format('MMM Do')}\n              </span>\n            </div>\n          </li>\n          <li className='table-info lr-border'>\n            Goal: {total} {units}\n          </li>\n        </ul>\n      )}\n    </React.Fragment>\n  )\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func.isRequired,\n  goalsCurrent: PropTypes.object.isRequired\n};\n\nexport default GoalDifference;"]},"metadata":{},"sourceType":"module"}
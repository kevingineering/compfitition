{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AuthContext from '../../contexts/auth/authContext';\nimport Leaderboard from './Leaderboard';\nimport Participants from './Participants';\nimport InviteTable from './InviteTable';\nimport moment from 'moment';\nimport CompetitionTable from './CompetitionTable';\n\nconst CompetitionPage = () => {\n  const _useContext = useContext(GoalContext),\n        _useContext$goalCurre = _useContext.goalCurrent,\n        startDate = _useContext$goalCurre.startDate,\n        duration = _useContext$goalCurre.duration;\n\n  const _useContext2 = useContext(CompetitionContext),\n        getCompetitionGoals = _useContext2.getCompetitionGoals,\n        getCompetitionParticipants = _useContext2.getCompetitionParticipants,\n        competition = _useContext2.competition,\n        competitionGoals = _useContext2.competitionGoals,\n        competitionParticipants = _useContext2.competitionParticipants;\n\n  const _useContext3 = useContext(AuthContext),\n        user = _useContext3.user;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAdmin = _useState2[0],\n        setIsAdmin = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAdminView = _useState4[0],\n        setIsAdminView = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isStarted = _useState6[0],\n        setIsStarted = _useState6[1]; //get competition goals and participants\n\n\n  useEffect(() => {\n    if (Object.entries(competition).length !== 0) {\n      getCompetitionGoals(competition._id);\n      getCompetitionParticipants(competition._id);\n      if (competition.adminIds.includes(user._id)) setIsAdmin(true);\n    } //eslint-disable-next-line\n\n  }, [competition]); //calc time to determine which day of competition we are on\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  if (time > duration) time = duration;\n  if (timeHours >= 0 && !isStarted) setIsStarted(true);\n  return React.createElement(\"div\", {\n    className: \"grid-1-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, isAdmin && React.createElement(\"div\", {\n    className: \"collection competition-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => setIsAdminView(!isAdminView),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, isAdminView ? 'View as User' : 'View as Admin')), isStarted && React.createElement(Leaderboard, {\n    goals: competitionGoals,\n    time: time,\n    participants: competitionParticipants,\n    type: goalCurrent.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), (isAdminView || !isStarted) && React.createElement(Participants, {\n    participants: competitionParticipants,\n    isAdmin: isAdmin,\n    compId: competition._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), isAdminView && !isStarted || true && React.createElement(InviteTable, {\n    participants: competitionParticipants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CompetitionTable, {\n    time: time,\n    isStarted: isStarted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n};\n\nexport default CompetitionPage;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js"],"names":["React","useContext","useState","useEffect","GoalContext","CompetitionContext","AuthContext","Leaderboard","Participants","InviteTable","moment","CompetitionTable","CompetitionPage","goalCurrent","startDate","duration","getCompetitionGoals","getCompetitionParticipants","competition","competitionGoals","competitionParticipants","user","isAdmin","setIsAdmin","isAdminView","setIsAdminView","isStarted","setIsStarted","Object","entries","length","_id","adminIds","includes","time","startOf","diff","timeHours","type"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AuthContext from '../../contexts/auth/authContext';\nimport Leaderboard from './Leaderboard';\nimport Participants from './Participants';\nimport InviteTable from './InviteTable';\nimport moment from 'moment';\nimport CompetitionTable from './CompetitionTable';\n\nconst CompetitionPage = () => {\n  const { goalCurrent: {startDate, duration} } = useContext(GoalContext);\n\n  const { \n    getCompetitionGoals, \n    getCompetitionParticipants, \n    competition, \n    competitionGoals, \n    competitionParticipants\n  } = useContext(CompetitionContext);\n\n  const { user } = useContext(AuthContext);\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isAdminView, setIsAdminView] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n\n  //get competition goals and participants\n  useEffect(() => {\n    if(Object.entries(competition).length !== 0) {\n      getCompetitionGoals(competition._id);\n      getCompetitionParticipants(competition._id);\n      if(competition.adminIds.includes(user._id))\n        setIsAdmin(true);\n    }\n    //eslint-disable-next-line\n  }, [competition])\n\n  //calc time to determine which day of competition we are on\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  if (time > duration)\n    time = duration;\n\n  if (timeHours >= 0 && !isStarted)\n    setIsStarted(true);\n\n  return (\n    <div className='grid-1-2'>\n      <div>\n        {isAdmin && \n          <div className='collection competition-container'>\n            <button className='btn btn-primary btn-block' onClick={() => setIsAdminView(!isAdminView)}>\n              {isAdminView ? 'View as User' : 'View as Admin'}\n            </button>\n          </div>\n        }\n        {isStarted &&\n          <Leaderboard \n            goals={competitionGoals} \n            time={time}\n            participants={competitionParticipants}  \n            type={goalCurrent.type}\n          />\n        }\n        {(isAdminView || !isStarted) && \n          <Participants \n            participants={competitionParticipants} \n            isAdmin={isAdmin}\n            compId={competition._id}\n          />\n        }\n        {isAdminView && !isStarted || true &&\n          <InviteTable \n            participants={competitionParticipants}\n          />\n        }\n      </div>\n      <div>\n        <CompetitionTable \n          time={time}\n          isStarted={isStarted}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CompetitionPage;"]},"metadata":{},"sourceType":"module"}
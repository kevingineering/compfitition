{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalDifference = ({\n  handleSave,\n  isOwner,\n  goal,\n  time,\n  isStarted\n}) => {\n  const duration = goal.duration,\n        startDate = goal.startDate,\n        units = goal.units,\n        total = goal.total,\n        tracker = goal.tracker,\n        type = goal.type;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1]; //calc change to date\n\n\n  let temp = record.filter(value => value !== null);\n  let value = temp.pop() - record[0];\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, isStarted ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(GoalChartDifference, {\n    duration: duration,\n    units: units,\n    total: total,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), time !== duration && isOwner && React.createElement(GoalProgress, {\n    type: type,\n    time: time,\n    record: record,\n    setRecord: setRecord,\n    units: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(GoalInfo, {\n    goal: goal,\n    record: record,\n    time: time,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Start: \", record[0], \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Duration: \", duration, \" days\")))));\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalDifference;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js"],"names":["React","useState","moment","GoalChartDifference","PropTypes","GoalProgress","GoalInfo","GoalDifference","handleSave","isOwner","goal","time","isStarted","duration","startDate","units","total","tracker","type","record","setRecord","temp","filter","value","pop","utc","format","propTypes","func","object","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA;AAAlC,CAAD,KAAkD;AAAA,QAE/DC,QAF+D,GAEVH,IAFU,CAE/DG,QAF+D;AAAA,QAErDC,SAFqD,GAEVJ,IAFU,CAErDI,SAFqD;AAAA,QAE1CC,KAF0C,GAEVL,IAFU,CAE1CK,KAF0C;AAAA,QAEnCC,KAFmC,GAEVN,IAFU,CAEnCM,KAFmC;AAAA,QAE5BC,OAF4B,GAEVP,IAFU,CAE5BO,OAF4B;AAAA,QAEnBC,IAFmB,GAEVR,IAFU,CAEnBQ,IAFmB;;AAAA,oBAI3CjB,QAAQ,CAACgB,OAAD,CAJmC;AAAA;AAAA,QAIhEE,MAJgE;AAAA,QAIxDC,SAJwD,kBAMvE;;;AACA,MAAIC,IAAI,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAK,IAAIA,KAAK,KAAK,IAAjC,CAAX;AACA,MAAIA,KAAK,GAAGF,IAAI,CAACG,GAAL,KAAaL,MAAM,CAAC,CAAD,CAA/B;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SAAS,GACR,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,MAAM,EAAEG,MAJV;AAKE,IAAA,IAAI,EAAER,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGA,IAAI,KAAKE,QAAT,IAAqBJ,OAArB,IACC,oBAAC,YAAD;AACE,IAAA,IAAI,EAAES,IADR;AAEE,IAAA,IAAI,EAAEP,IAFR;AAGE,IAAA,MAAM,EAAEQ,MAHV;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,KAAK,EAAEL,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,MAAM,EAAES,MAFV;AAGE,IAAA,IAAI,EAAER,IAHR;AAIE,IAAA,KAAK,EAAEY,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,EA0BIZ,IAAI,KAAKE,QAAT,IAAqBJ,OAArB,IACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAE,MAAMD,UAAU,CAACW,MAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAOE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CA3BJ,CADQ,GAwCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUA,MAAM,CAAC,CAAD,CADhB,OACsBJ,KADtB,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUb,MAAM,CAACuB,GAAP,CAAWX,SAAX,EAAsBY,MAAtB,CAA6B,QAA7B,CADV,CAJF,CADF,CAFF,EAYE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSV,KADT,OACiBD,KADjB,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaF,QADb,UAJF,CADF,CAZF,CAzCJ,CADF;AAoED,CA9ED;;AAgFAN,cAAc,CAACoB,SAAf,GAA2B;AACzBnB,EAAAA,UAAU,EAAEJ,SAAS,CAACwB,IADG;AAEzBlB,EAAAA,IAAI,EAAEN,SAAS,CAACyB,MAAV,CAAiBC,UAFE;AAGzBrB,EAAAA,OAAO,EAAEL,SAAS,CAAC2B,IAAV,CAAeD;AAHC,CAA3B;AAMA,eAAevB,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalDifference = ({handleSave, isOwner, goal, time, isStarted}) => {\n  \n  const { duration, startDate, units, total, tracker, type } = goal;\n  \n  const [record, setRecord] = useState(tracker);\n\n  //calc change to date\n  let temp = record.filter(value => value !== null)\n  let value = temp.pop() - record[0];\n\n  return (\n    <React.Fragment>\n      {isStarted ? (\n        <React.Fragment>\n          <ul>\n            <GoalChartDifference \n              duration={duration} \n              units={units} \n              total={total} \n              record={record} \n              time={time}\n            />\n            {time !== duration && isOwner && \n              <GoalProgress \n                type={type}\n                time={time}\n                record={record}\n                setRecord={setRecord}\n                units={units}\n              />\n            }\n            <GoalInfo \n              goal={goal}\n              record={record}\n              time={time}\n              value={value}\n            />\n          </ul>\n          {/* SaveButton */}\n          { time !== duration && isOwner &&\n            <React.Fragment>\n              <button \n                className='btn btn-primary btn-block' \n                onClick={() => handleSave(record)}\n              >\n                Save Goal\n              </button>\n              <p className='lr-border' />\n            </React.Fragment>\n          }\n        </React.Fragment>\n      ) : (\n        <ul>\n          {/* Info */}\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Start: {record[0]} {units}\n              </span>\n              <span className='right'>\n                Begins {moment.utc(startDate).format('MMM Do')}\n              </span>\n            </div>\n          </li>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Goal: {total} {units}\n              </span>\n              <span className='right'>\n                Duration: {duration} days\n              </span>\n            </div>\n          </li>\n        </ul>\n      )}\n    </React.Fragment>\n  )\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\n\nexport default GoalDifference;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalDifference = ({\n  isOwner,\n  goal,\n  time,\n  isStarted\n}) => {\n  const duration = goal.duration,\n        startDate = goal.startDate,\n        units = goal.units,\n        total = goal.total,\n        tracker = goal.tracker,\n        type = goal.type;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1]; //calc change to date\n\n\n  let temp = record.filter(value => value !== null);\n  let value = temp.pop() - record[0];\n\n  const handleSave = async record => {\n    await updateGoalTracker(record, _id);\n\n    if (goalsError) {\n      setAlert(goalsError);\n    } else {\n      setAlert('Goal saved!');\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, isStarted ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(GoalChartDifference, {\n    duration: duration,\n    units: units,\n    total: total,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), time !== duration && isOwner && React.createElement(GoalProgress, {\n    type: type,\n    time: time,\n    record: record,\n    setRecord: setRecord,\n    units: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(GoalInfo, {\n    goal: goal,\n    record: record,\n    time: time,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Start: \", record[0], \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Duration: \", duration, \" days\")))), React.createElement(GoalButtons, {\n    isActive: time <= duration,\n    handleSave: handleSave,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalDifference;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js"],"names":["React","useState","moment","GoalChartDifference","PropTypes","GoalProgress","GoalInfo","GoalDifference","isOwner","goal","time","isStarted","duration","startDate","units","total","tracker","type","record","setRecord","temp","filter","value","pop","handleSave","updateGoalTracker","_id","goalsError","setAlert","utc","format","propTypes","func","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalDifference = ({isOwner, goal, time, isStarted}) => {\n  \n  const { duration, startDate, units, total, tracker, type } = goal;\n  \n  const [record, setRecord] = useState(tracker);\n\n  //calc change to date\n  let temp = record.filter(value => value !== null)\n  let value = temp.pop() - record[0];\n\n  const handleSave = async (record) => {\n    await updateGoalTracker(record, _id);\n    if (goalsError) {\n      setAlert(goalsError);\n    }\n    else {\n      setAlert('Goal saved!');\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {isStarted ? (\n        <React.Fragment>\n          <ul>\n            <GoalChartDifference \n              duration={duration} \n              units={units} \n              total={total} \n              record={record} \n              time={time}\n            />\n            {time !== duration && isOwner && \n              <GoalProgress \n                type={type}\n                time={time}\n                record={record}\n                setRecord={setRecord}\n                units={units}\n              />\n            }\n            <GoalInfo \n              goal={goal}\n              record={record}\n              time={time}\n              value={value}\n            />\n          </ul>\n          {/* SaveButton */}\n          { time !== duration && isOwner &&\n            <React.Fragment>\n              <button \n                className='btn btn-primary btn-block' \n                onClick={() => handleSave(record)}\n              >\n                Save Goal\n              </button>\n              <p className='lr-border' />\n            </React.Fragment>\n          }\n        </React.Fragment>\n      ) : (\n        <ul>\n          {/* Info */}\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Start: {record[0]} {units}\n              </span>\n              <span className='right'>\n                Begins {moment.utc(startDate).format('MMM Do')}\n              </span>\n            </div>\n          </li>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Goal: {total} {units}\n              </span>\n              <span className='right'>\n                Duration: {duration} days\n              </span>\n            </div>\n          </li>\n        </ul>\n      )}\n      <GoalButtons \n        isActive={time <= duration} \n        handleSave={handleSave}\n        isOwner={isOwner}\n      />\n    </React.Fragment>\n  )\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\n\nexport default GoalDifference;"]},"metadata":{},"sourceType":"module"}
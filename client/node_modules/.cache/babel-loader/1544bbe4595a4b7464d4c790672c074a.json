{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/comptable/CompButtons.js\";\nimport React, { useState, useContext } from 'react';\nimport CompetitionContext from '../../../contexts/competitions/competitionContext';\nimport GoalContext from '../../../contexts/goals/goalContext';\nimport AlertContext from '../../../contexts/alerts/alertContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst CompButtons = ({\n  isAdmin,\n  isAdminView,\n  isOwner,\n  isStarted,\n  isActive,\n  handleSave,\n  record\n}) => {\n  const _useContext = useContext(CompetitionContext),\n        competition = _useContext.competition,\n        competitionError = _useContext.competitionError,\n        deleteCompetition = _useContext.deleteCompetition,\n        clearCompetition = _useContext.clearCompetition;\n\n  const _useContext2 = useContext(GoalContext),\n        clearCurrentGoal = _useContext2.clearCurrentGoal;\n\n  const _useContext3 = useContext(AlertContext),\n        setAlert = _useContext3.setAlert,\n        clearAlert = _useContext3.clearAlert;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        deleteToggle = _useState2[0],\n        setDeleteToggle = _useState2[1];\n\n  let history = useHistory(); //handleDelete\n\n  const handleDelete = async () => {\n    await deleteCompetition(competition._id);\n\n    if (competitionError) {\n      setAlert(competitionError);\n    } else {\n      setAlert('Competition deleted!', true);\n      history.push('/');\n      clearCurrentGoal();\n      clearCompetition();\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, isStarted && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Save Progress\")), isActive && isAdmin && isAdminView && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/competitionform\",\n    className: \"btn btn-primary btn-block center\",\n    onClick: clearAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Modify Competition\")), !deleteToggle && isAdmin && isAdminView && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => setDeleteToggle(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Delete Competition\")), deleteToggle && isAdmin && isAdminView && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"alert lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Are you sure you want to delete this competition? This will affect multiple users, and deletions cannot be undone.\"), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-split\",\n    onClick: () => setDeleteToggle(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"No\"), React.createElement(\"button\", {\n    className: \"btn btn-danger btn-split\",\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Yes\")), (!isStarted || !isActive) && !isAdminView && React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n};\n\nexport default CompButtons;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/comptable/CompButtons.js"],"names":["React","useState","useContext","CompetitionContext","GoalContext","AlertContext","Link","useHistory","CompButtons","isAdmin","isAdminView","isOwner","isStarted","isActive","handleSave","record","competition","competitionError","deleteCompetition","clearCompetition","clearCurrentGoal","setAlert","clearAlert","deleteToggle","setDeleteToggle","history","handleDelete","_id","push"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport CompetitionContext from '../../../contexts/competitions/competitionContext';\nimport GoalContext from '../../../contexts/goals/goalContext';\nimport AlertContext from '../../../contexts/alerts/alertContext';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst CompButtons = ({isAdmin, isAdminView, isOwner, isStarted, isActive, handleSave, record}) => {\n\n  const { \n    competition, \n    competitionError, \n    deleteCompetition,\n    clearCompetition\n  } = useContext(CompetitionContext);\n\n  const { clearCurrentGoal } = useContext(GoalContext);\n\n  const { setAlert, clearAlert } = useContext(AlertContext);\n\n  const [deleteToggle, setDeleteToggle] = useState(false);\n\n  let history = useHistory();\n\n  //handleDelete\n  const handleDelete = async () => {\n    await deleteCompetition(competition._id);\n    if (competitionError) {\n      setAlert(competitionError);\n    }\n    else {\n      setAlert('Competition deleted!', true);\n      history.push('/');\n      clearCurrentGoal();\n      clearCompetition();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {/* SaveButton */}\n      { isStarted && isOwner &&\n        <React.Fragment>\n          <button \n            className='btn btn-primary btn-block' \n            onClick={() => handleSave(record)}\n          >\n            Save Progress\n          </button>\n        </React.Fragment>\n      }\n      {/* Modify Button */}\n      { isActive && isAdmin && isAdminView && \n        <React.Fragment>\n          <p className='lr-border' />\n          <Link \n            to='/competitionform' \n            className='btn btn-primary btn-block center' \n            onClick={clearAlert}\n          >\n            Modify Competition\n          </Link>\n        </React.Fragment>\n      }\n      {/* Delete Button */}\n      {!deleteToggle && isAdmin && isAdminView && \n        <React.Fragment>\n          <p className='lr-border'/>\n          <button \n            className='btn btn-primary btn-block' \n            onClick={() => setDeleteToggle(true)}\n          >\n            Delete Competition\n          </button>\n        </React.Fragment>\n      }\n      {/*Delete module*/}\n      {deleteToggle && isAdmin && isAdminView && (\n        <React.Fragment>\n          <hr/>\n          <span className='alert lr-border'>\n            Are you sure you want to delete this competition? This will affect multiple users, and deletions cannot be undone.\n          </span>\n          <button\n            className='btn btn-primary btn-split'\n            onClick={() => setDeleteToggle(false)}\n          >No</button>\n          <button\n            className='btn btn-danger btn-split'\n            onClick={handleDelete}\n          >Yes</button>\n        </React.Fragment>\n      )}\n      {(!isStarted || !isActive) && !isAdminView && <hr/>}\n    </React.Fragment>\n  )\n}\n\nexport default CompButtons;"]},"metadata":{},"sourceType":"module"}
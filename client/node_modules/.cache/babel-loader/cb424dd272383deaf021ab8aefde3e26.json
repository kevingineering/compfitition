{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nconst GoalForm = () => {\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal,\n        updateGoal = goalContext.updateGoal,\n        goalCurrent = goalContext.goalCurrent;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlert = alertContext.clearAlert; //started determines if goal has begun, initialValue is used with difference goals \n\n  const _useState = useState({\n    name: '',\n    duration: 28,\n    startDate: moment().startOf('day').format('YYYY-MM-DD'),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    isPrivate: false,\n    compId: null,\n    initialValue: 0,\n    started: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1]; //tells when to redirect to new goal page\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isRedirect = _useState4[0],\n        setIsRedirect = _useState4[1]; //on start, control if adding or updating goal\n\n\n  useEffect(() => {\n    if (Object.entries(goalCurrent).length) {\n      setGoal(_objectSpread({}, goalCurrent, {\n        startDate: moment.utc(goalCurrent.startDate).startOf('day'),\n        initialValue: goalCurrent.tracker[0]\n      }));\n\n      if (moment(goalCurrent.startDate).startOf('day') < moment.utc().startOf('day')) {\n        setGoal(_objectSpread({}, goalCurrent, {\n          started: true,\n          initialValue: goalCurrent.tracker[0]\n        }));\n        setAlert('This goal has already begun, so some attributes cannot be changed.');\n      }\n    } //eslint-disable-next-line\n\n  }, []); //redirect\n\n  let history = useHistory();\n  useEffect(() => {\n    if (isRedirect) history.push('/goal'); //eslint-disable-next-line\n  }, [isRedirect]); //on unmount, clear nonpersistant alert\n\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }; //eslint-disable-next-line\n  }, []);\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        total = goal.total,\n        isPrivate = goal.isPrivate,\n        initialValue = goal.initialValue,\n        started = goal.started; //add or update goal\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //verify dates\n\n    let time = moment.utc().startOf('day').diff(startDate, 'days'); //verify start date not in past\n\n    if (time > 0 && !started) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    } //verify finish date is not in past (for goals that have started)\n\n\n    if (duration - time < 0) {\n      setAlert('Finish date cannot be in the past.');\n      return null;\n    } //try to submit goal\n\n\n    if (name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //add/update goal and tell user\n      if (message === 'Modify Goal') {\n        //await updateGoal(goal);\n        updateGoal(goal);\n        setAlert('Goal updated!', true);\n        setIsRedirect(true);\n      } else {\n        //await addGoal(goal);\n        addGoal(goal);\n        setAlert('Goal added!', true);\n        setIsRedirect(true);\n      }\n    } else setAlert('Please enter all fields.');\n  }; //update state with inputs\n\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') setGoal(_objectSpread({}, goal, {\n        [e.target.name]: ''\n      }));else setGoal(_objectSpread({}, goal, {\n        [e.target.name]: parseInt(e.target.value)\n      }));\n    } else if (e.target.name === 'type' && e.target.value === 'pass/fail') setGoal(_objectSpread({}, goal, {\n      total: 7,\n      type: 'pass/fail'\n    }));else setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  }; //update isPrivate state with input\n\n\n  const handleClick = e => {\n    setGoal(_objectSpread({}, goal, {\n      isPrivate: !isPrivate\n    }));\n  };\n\n  const message = Object.entries(goalCurrent).length ? 'Modify Goal' : 'Add Goal';\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, message), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Goal Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(\"input\", {\n    disabled: started,\n    type: \"date\",\n    name: \"startDate\",\n    onChange: handleChange,\n    value: started ? moment.utc(startDate).format('YYYY-MM-DD') : moment(startDate).format('YYYY-MM-DD'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Goal Duration (days)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), type === 'pass/fail' && !Number.isInteger(duration / 7) && duration !== '' && React.createElement(\"span\", {\n    className: \"block small-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"*Goal duration will be adjusted to \", duration - duration % 7 + 7, \" days to use full weeks.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"What type of goal would you like?\", React.createElement(\"select\", {\n    disabled: started,\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Pass/Fail  (e.g. Stretch every day)\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Total  (e.g. Run 100 miles)\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Difference  (e.g. Gain 10 lbs)\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, type === 'pass/fail' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"How many days a week do you want to hit your goal?\"), React.createElement(\"select\", {\n    disabled: started,\n    name: \"total\",\n    value: total,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Every day\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Six days a week\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Five days a week\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Four days a week\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Three days a week\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Twice a week\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"Once a week\"))), type === 'total' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"What total number do you want to hit?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  })), type === 'difference' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"What is your start number?\"), React.createElement(\"input\", {\n    disabled: started,\n    type: \"number\",\n    name: \"initialValue\",\n    onChange: handleChange,\n    value: initialValue,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"What number do you want to achieve?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }))), type !== 'pass/fail' && React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, \"Units (e.g lbs or miles)\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Who can see this goal?\"), React.createElement(\"label\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: !isPrivate,\n    onChange: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"slider round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"register-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, isPrivate ? 'Only I can see this goal.' : 'My friends can see this goal.')), React.createElement(\"input\", {\n    type: \"submit\",\n    value: message,\n    className: \"btn btn-block btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  })));\n};\n\nexport default GoalForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","useEffect","GoalContext","AlertContext","moment","useHistory","GoalForm","goalContext","addGoal","updateGoal","goalCurrent","alertContext","setAlert","clearAlert","name","duration","startDate","startOf","format","type","units","total","isPrivate","compId","initialValue","started","goal","setGoal","isRedirect","setIsRedirect","Object","entries","length","utc","tracker","history","push","handleSubmit","e","preventDefault","time","diff","message","handleChange","target","value","parseInt","handleClick","Number","isInteger"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nconst GoalForm = () => {\n  const goalContext = useContext(GoalContext);\n  const { addGoal, updateGoal, goalCurrent } = goalContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlert } = alertContext;\n\n  //started determines if goal has begun, initialValue is used with difference goals \n  const [goal, setGoal] = useState({\n    name: '',\n    duration: 28,\n    startDate: moment().startOf('day').format('YYYY-MM-DD'),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    isPrivate: false,\n    compId: null,\n    initialValue: 0,\n    started: false\n  });\n\n  //tells when to redirect to new goal page\n  const [isRedirect, setIsRedirect] = useState(false);\n\n  //on start, control if adding or updating goal\n  useEffect(() => {\n    if (Object.entries(goalCurrent).length) {\n      setGoal({ \n        ...goalCurrent, \n        startDate: moment.utc(goalCurrent.startDate).startOf('day'),\n        initialValue: goalCurrent.tracker[0]\n      });\n      if (moment(goalCurrent.startDate).startOf('day') < moment.utc().startOf('day')) {\n        setGoal({\n          ...goalCurrent, \n          started: true,\n          initialValue: goalCurrent.tracker[0] \n        })\n        setAlert('This goal has already begun, so some attributes cannot be changed.');\n      }\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  //redirect\n  let history = useHistory();\n  useEffect(() => {\n    if (isRedirect)\n      history.push('/goal');\n    //eslint-disable-next-line\n  }, [isRedirect])\n\n  //on unmount, clear nonpersistant alert\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }\n    //eslint-disable-next-line\n  }, [])\n  \n  const { name, duration, startDate, type, units, total, isPrivate, initialValue, started } = goal;\n  \n  //add or update goal\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    //verify dates\n    let time = moment.utc().startOf('day').diff(startDate, 'days');\n    //verify start date not in past\n    if(time > 0 && !started) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    }\n    //verify finish date is not in past (for goals that have started)\n    if(duration - time < 0){\n      setAlert('Finish date cannot be in the past.');\n      return null;\n    }\n\n    //try to submit goal\n    if(name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //add/update goal and tell user\n      if (message === 'Modify Goal') {\n        //await updateGoal(goal);\n        updateGoal(goal);\n        setAlert('Goal updated!', true);\n        setIsRedirect(true);\n      } else {\n        //await addGoal(goal);\n        addGoal(goal);\n        setAlert('Goal added!', true);\n        setIsRedirect(true);\n      }\n    }\n    else \n      setAlert('Please enter all fields.');\n  };\n\n  //update state with inputs\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') \n        setGoal({ ...goal, [e.target.name]: ''});\n      else \n        setGoal({ ...goal, [e.target.name]: parseInt(e.target.value)});\n    }\n    else if (e.target.name === 'type' && e.target.value === 'pass/fail')\n      setGoal({ ...goal, total: 7, type: 'pass/fail' });\n    else\n      setGoal({\n        ...goal, \n        [e.target.name]: e.target.value\n      });\n  };\n\n  //update isPrivate state with input\n  const handleClick = e => {\n    setGoal({ ...goal, isPrivate: !isPrivate });\n  };\n\n  const message = Object.entries(goalCurrent).length ? 'Modify Goal' : 'Add Goal';\n\n  return (\n    <div className='form-container'>\n      <h1>{message}</h1>\n      <form onSubmit={handleSubmit} autoComplete='off'>\n        {/* Name */}\n        <div className=\"form-group\">\n          <label>Goal Name</label>\n          <input \n            type='text' \n            name='name' \n            onChange={handleChange}\n            value={name}\n            autoFocus={true}\n          />\n        </div>\n        {/* Start Date */}\n        <div className=\"form-group\">\n          <label>Start Date</label>\n          <input \n            disabled={started}\n            type='date' \n            name='startDate' \n            onChange={handleChange}\n            value={started ? moment.utc(startDate).format('YYYY-MM-DD') : moment(startDate).format('YYYY-MM-DD')}\n          />\n        </div>\n        {/* Duration */}\n        <div className=\"form-group\">\n          <label>Goal Duration (days)</label>\n          <input \n            type='number' \n            name='duration' \n            onChange={handleChange}\n            value={duration}\n          />\n          {type === 'pass/fail' && !(Number.isInteger(duration / 7)) && (duration !== '') &&\n            <span className='block small-text'>*Goal duration will be adjusted to {duration - (duration % 7) + 7} days to use full weeks.</span>\n          }\n        </div>\n        {/* Type */}\n        <div className=\"form-group\">\n          <label>What type of goal would you like?\n            <select\n              disabled={started}\n              name='type'\n              value={type}\n              onChange={handleChange}\n            >\n              <option value='pass/fail'>Pass/Fail  (e.g. Stretch every day)</option>\n              <option value='total'>Total  (e.g. Run 100 miles)</option>\n              <option value='difference'>Difference  (e.g. Gain 10 lbs)</option>\n            </select>  \n          </label>\n        </div>\n        {/* Total */}\n        <div className=\"form-group\">\n          {type === 'pass/fail' && (\n            <React.Fragment>\n              <label>How many days a week do you want to hit your goal?</label>\n              <select\n                disabled={started}\n                name='total'\n                value={total}\n                onChange={handleChange}\n              >\n                <option value='7'>Every day</option>\n                <option value='6'>Six days a week</option>\n                <option value='5'>Five days a week</option>\n                <option value='4'>Four days a week</option>\n                <option value='3'>Three days a week</option>\n                <option value='2'>Twice a week</option>\n                <option value='1'>Once a week</option>\n              </select>  \n            </React.Fragment>\n          )}\n          {type === 'total' && (\n            <React.Fragment>\n              <label>What total number do you want to hit?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n          {type === 'difference' && (\n            <React.Fragment>\n              <label>What is your start number?</label>\n              <input \n                disabled={started}\n                type='number' \n                name='initialValue' \n                onChange={handleChange}\n                value={initialValue}\n                min='0'\n              />\n              <label>What number do you want to achieve?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n        </div>\n        {/* Units */}\n        {type !== 'pass/fail' && (\n          <div className=\"form-group\">\n            <label>Units (e.g lbs or miles)</label>\n            <input \n              type='text' \n              name='units' \n              onChange={handleChange}\n              value={units}\n            />\n          </div> \n        )}\n        {/* isPrivate */}\n        <div className=\"form-group\">\n          <label className='block'>\n            Who can see this goal?\n          </label>\n          <label className='switch'>\n            <input\n              type='checkbox'\n              checked={!isPrivate}\n              onChange={handleClick}\n            />\n            <span className='slider round'/>\n          </label>\n          <span className='register-span'>\n            {isPrivate ? 'Only I can see this goal.' : 'My friends can see this goal.'}\n          </span>\n        </div>\n        {/* Submit */}\n        <input \n          type='submit' \n          value={message} \n          className='btn btn-block btn-primary'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default GoalForm;"]},"metadata":{},"sourceType":"module"}
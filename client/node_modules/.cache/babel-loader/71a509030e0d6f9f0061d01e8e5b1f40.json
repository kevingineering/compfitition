{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/User/FriendList.js\";\nimport React from 'react';\nimport FriendItem from './FriendItem';\nimport PropTypes from 'prop-types';\n\nconst FriendList = ({\n  friends,\n  loading,\n  filtered,\n  isOwner\n}) => {\n  //populate list\n  let listItems = '';\n\n  if (loading) {\n    listItems = React.createElement(\"li\", {\n      className: \"collection-item center collection-item-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Loading...\");\n  } else if (friends.length === 0) {\n    listItems = React.createElement(\"li\", {\n      className: \"collection-item center collection-item-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, isOwner ? 'You have no friends ... awkward :/' : 'This user has no other friends, but they have you.', React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), isOwner ? \"It's okay, click below to find some!\" : null);\n  } else if (filtered !== null) {\n    filtered === [] ? listItems = React.createElement(\"li\", {\n      className: \"collection-item center collection-item-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"None of your friends match this search criteria.\") : listItems = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, filtered.map(friend => React.createElement(FriendItem, {\n      friend: friend,\n      key: friend._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })));\n  } else {\n    listItems = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, friends.map(friend => React.createElement(FriendItem, {\n      friend: friend,\n      key: friend._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, listItems);\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  filtered: PropTypes.array.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default FriendList;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/User/FriendList.js"],"names":["React","FriendItem","PropTypes","FriendList","friends","loading","filtered","isOwner","listItems","length","map","friend","_id","propTypes","array","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAA2C;AAC5D;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAIH,OAAJ,EAAa;AACXG,IAAAA,SAAS,GACP;AAAI,MAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,GAND,MAOK,IAAIJ,OAAO,CAACK,MAAR,KAAmB,CAAvB,EAA0B;AAC7BD,IAAAA,SAAS,GACP;AAAI,MAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,GACN,oCADM,GAEN,oDAHJ,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMGA,OAAO,GACN,sCADM,GAEN,IARJ,CADF;AAaD,GAdI,MAeA,IAAID,QAAQ,KAAK,IAAjB,EAAuB;AAC1BA,IAAAA,QAAQ,KAAK,EAAb,GACEE,SAAS,GACP;AAAI,MAAA,SAAS,EAAC,8CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFJ,GAOEA,SAAS,GACP,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,QAAQ,CAACI,GAAT,CAAaC,MAAM,IAAI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,MAApB;AAA4B,MAAA,GAAG,EAAEA,MAAM,CAACC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,CADH,CARJ;AAaD,GAdI,MAeA;AACHJ,IAAAA,SAAS,GACP,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,OAAO,CAACM,GAAR,CAAYC,MAAM,IAAI,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,MAApB;AAA4B,MAAA,GAAG,EAAEA,MAAM,CAACC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CADH,CADF;AAKD;;AAED,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SADH,CADF;AAKD,CAtDD;;AAwDAL,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,OAAO,EAAEF,SAAS,CAACY,KAAV,CAAgBC,UADJ;AAErBV,EAAAA,OAAO,EAAEH,SAAS,CAACc,IAAV,CAAeD,UAFH;AAGrBT,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,KAAV,CAAgBC,UAHL;AAIrBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,IAAV,CAAeD;AAJH,CAAvB;AAOA,eAAeZ,UAAf","sourcesContent":["import React from 'react';\nimport FriendItem from './FriendItem';\nimport PropTypes from 'prop-types';\n\nconst FriendList = ({friends, loading, filtered, isOwner}) => {\n  //populate list\n  let listItems = '';\n\n  if (loading) {\n    listItems = (\n      <li className='collection-item center collection-item-block'>\n        Loading...\n      </li>\n    );\n  }\n  else if (friends.length === 0) {\n    listItems = (\n      <li className='collection-item center collection-item-block'>\n        {isOwner ? \n          'You have no friends ... awkward :/' :\n          'This user has no other friends, but they have you.'\n        }\n        <br/>\n        {isOwner ? \n          \"It's okay, click below to find some!\" :\n          null\n        }\n      </li>\n    );\n  }\n  else if (filtered !== null) {\n    filtered === [] ? (\n      listItems = (\n        <li className='collection-item center collection-item-block'>\n          None of your friends match this search criteria.\n        </li>\n      )\n    ) : (\n      listItems = (\n        <React.Fragment>\n          {filtered.map(friend => <FriendItem friend={friend} key={friend._id} />)}\n        </React.Fragment>\n      )\n    )\n  }\n  else {\n    listItems = (\n      <React.Fragment>\n        {friends.map(friend => <FriendItem friend={friend} key={friend._id} />)}\n      </React.Fragment>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {listItems}\n    </React.Fragment>\n  )\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  filtered: PropTypes.array.isRequired,\n  isOwner: PropTypes.bool.isRequired\n}\n\nexport default FriendList;"]},"metadata":{},"sourceType":"module"}
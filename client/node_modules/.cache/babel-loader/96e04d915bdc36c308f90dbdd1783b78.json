{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/competitions/competitionState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport CompetitionContext from './competitionContext';\nimport CompetitionReducer from './competitionReducer';\nimport { GET_COMPETITION, GET_COMPETITION_GOALS, ADD_COMPETITION, DELETE_COMPETITION, UPDATE_COMPETITION, ADD_USER_TO_COMPETITION, REMOVE_USER_FROM_COMPETITION, KICK_USER_FROM_COMPETITION, ADD_ADMIN_TO_COMPETITION, REMOVE_ADMIN_FROM_COMPETITION, SET_COMPETITION_LOADING, CLEAR_COMPETITION, COMPETITION_ERROR } from '../types';\n\nconst CompetitionState = props => {\n  const initialState = {\n    competition: {},\n    competitionGoals: [],\n    competitionError: null,\n    competitionLoading: true\n  };\n\n  const _useReducer = useReducer(CompetitionReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //set headers for addGoal, updateGoal, and updateGoalTracker\n\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //get competition\n\n  const getCompetition = async _id => {\n    console.log('getCompetition');\n\n    try {\n      setLoading();\n      const res = await axios.get(`/api/competitions/${_id}`);\n      dispatch({\n        type: GET_COMPETITION,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //get competition goals for all participants\n\n\n  const getCompetitionGoals = async _id => {\n    console.log('getCompetitionGoals');\n\n    try {\n      setLoading();\n      const res = await axios.get(`/api/competitions/goals/${_id}`);\n      dispatch({\n        type: GET_COMPETITION_GOALS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //add competition\n\n\n  const addCompetition = async (_id, isMax) => {\n    try {\n      console.log('addCompetition');\n      setLoading();\n      const res = await axios.post(`/api/competitions/${_id}`, {\n        isMax\n      }, config);\n      dispatch({\n        type: ADD_COMPETITION,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //delete competition\n\n\n  const deleteCompetition = async _id => {\n    console.log('deleteCompetition');\n\n    try {\n      setLoading();\n      await axios.delete(`/api/competitions/${_id}`);\n      dispatch({\n        type: DELETE_COMPETITION\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //update competition\n\n\n  const updateCompetition = async comp => {\n    console.log('updateCompetition');\n\n    try {\n      setLoading();\n      const res = await axios.put(`/api/competitions/${comp._id}`, comp, config);\n      dispatch({\n        type: UPDATE_COMPETITION,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const addUserToCompetition = async _id => {\n    console.log('addUserToCompetition');\n\n    try {\n      setLoading();\n      const res = await axios.put(`/api/competitions/adduser/${_id}`);\n      dispatch({\n        type: ADD_USER_TO_COMPETITION,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const removeUserFromCompetition = async _id => {\n    console.log('removeUserFromCompetition');\n\n    try {\n      setLoading();\n      await axios.put(`/api/competitions/removeuser/${_id}`);\n      dispatch({\n        type: REMOVE_USER_FROM_COMPETITION\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const kickUserFromCompetition = async (_id, kickeeId) => {\n    console.log('kickFromCompetition');\n\n    try {\n      setLoading();\n      const res = await axios.put(`/api/competitions/kickuser/${_id}`, kickeeId, config);\n      dispatch({\n        type: KICK_USER_FROM_COMPETITION,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const addAdminToCompetition = async (_id, newAdminId) => {\n    console.log('addAdminToCompetition');\n\n    try {\n      setLoading();\n      const res = await axios.put(`/api/competitions/addadmin/${_id}`, newAdminId, config);\n      dispatch({\n        type: ADD_ADMIN_TO_COMPETITION,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const removeAdminFromCompetition = async _id => {\n    console.log('removeAdminFromCompetition');\n\n    try {\n      setLoading();\n      const res = await axios.put(`/api/competitions/removeadmin/${_id}`);\n      dispatch({\n        type: REMOVE_ADMIN_FROM_COMPETITION,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: COMPETITION_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //set loading\n\n\n  const setLoading = () => {\n    console.log('setLoading');\n    return {\n      type: SET_COMPETITION_LOADING\n    };\n  }; //clear requests\n\n\n  const clearCompetition = () => {\n    console.log('clearCompetition');\n    dispatch({\n      type: CLEAR_COMPETITION\n    });\n  };\n\n  return React.createElement(CompetitionContext.Provider, {\n    value: {\n      competition: state.competition,\n      competitionGoals: state.competitionGoals,\n      competitionError: state.competitionError,\n      competitionLoading: state.competitionLoading,\n      getCompetition,\n      getCompetitionGoals,\n      addCompetition,\n      deleteCompetition,\n      updateCompetition,\n      addUserToCompetition,\n      removeUserFromCompetition,\n      kickUserFromCompetition,\n      addAdminToCompetition,\n      removeAdminFromCompetition,\n      clearCompetition\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default CompetitionState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/competitions/competitionState.js"],"names":["React","useReducer","axios","CompetitionContext","CompetitionReducer","GET_COMPETITION","GET_COMPETITION_GOALS","ADD_COMPETITION","DELETE_COMPETITION","UPDATE_COMPETITION","ADD_USER_TO_COMPETITION","REMOVE_USER_FROM_COMPETITION","KICK_USER_FROM_COMPETITION","ADD_ADMIN_TO_COMPETITION","REMOVE_ADMIN_FROM_COMPETITION","SET_COMPETITION_LOADING","CLEAR_COMPETITION","COMPETITION_ERROR","CompetitionState","props","initialState","competition","competitionGoals","competitionError","competitionLoading","state","dispatch","config","headers","getCompetition","_id","console","log","setLoading","res","get","type","payload","data","err","response","msg","getCompetitionGoals","addCompetition","isMax","post","deleteCompetition","delete","updateCompetition","comp","put","addUserToCompetition","removeUserFromCompetition","kickUserFromCompetition","kickeeId","addAdminToCompetition","newAdminId","removeAdminFromCompetition","clearCompetition","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport CompetitionContext from './competitionContext';\nimport CompetitionReducer from './competitionReducer';\nimport {\n  GET_COMPETITION,\n  GET_COMPETITION_GOALS,\n  ADD_COMPETITION,\n  DELETE_COMPETITION,\n  UPDATE_COMPETITION,\n  ADD_USER_TO_COMPETITION,\n  REMOVE_USER_FROM_COMPETITION,\n  KICK_USER_FROM_COMPETITION,\n  ADD_ADMIN_TO_COMPETITION,\n  REMOVE_ADMIN_FROM_COMPETITION,\n  SET_COMPETITION_LOADING,\n  CLEAR_COMPETITION,\n  COMPETITION_ERROR\n} from '../types';\n\nconst CompetitionState = props => {\n  const initialState = {\n    competition: {},\n    competitionGoals: [],\n    competitionError: null,\n    competitionLoading: true\n  };\n\n  const [state, dispatch] = useReducer(CompetitionReducer, initialState);\n\n  //set headers for addGoal, updateGoal, and updateGoalTracker\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  //get competition\n  const getCompetition = async (_id) => {\n    console.log('getCompetition')\n    try {\n      setLoading();\n      const res = await axios.get(`/api/competitions/${_id}`);\n      dispatch({ type: GET_COMPETITION, payload: res.data });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //get competition goals for all participants\n  const getCompetitionGoals = async (_id) => {\n    console.log('getCompetitionGoals')\n    try {\n      setLoading();\n      const res = await axios.get(`/api/competitions/goals/${_id}`);\n      dispatch({ type: GET_COMPETITION_GOALS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //add competition\n  const addCompetition = async (_id, isMax) => {\n    try {\n      console.log('addCompetition')\n      setLoading();\n      const res = await axios.post(`/api/competitions/${_id}`, {isMax}, config);\n      dispatch({ type: ADD_COMPETITION, payload: res.data});\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //delete competition\n  const deleteCompetition = async (_id) => {\n    console.log('deleteCompetition')\n    try {\n      setLoading();\n      await axios.delete(`/api/competitions/${_id}`);\n      dispatch({ type: DELETE_COMPETITION });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //update competition\n  const updateCompetition = async (comp) => {\n    console.log('updateCompetition')\n    try{\n      setLoading();\n      const res = await axios.put(`/api/competitions/${comp._id}`, comp, config);\n      dispatch({ type: UPDATE_COMPETITION, payload: res.data });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  const addUserToCompetition = async (_id) => {\n    console.log('addUserToCompetition')\n    try{\n      setLoading();\n      const res = await axios.put(`/api/competitions/adduser/${_id}`);\n      dispatch({ type: ADD_USER_TO_COMPETITION, payload: res.data });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  const removeUserFromCompetition = async (_id) => {\n    console.log('removeUserFromCompetition')\n    try{\n      setLoading();\n      await axios.put(`/api/competitions/removeuser/${_id}`);\n      dispatch({ type: REMOVE_USER_FROM_COMPETITION });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  const kickUserFromCompetition = async (_id, kickeeId) => {\n    console.log('kickFromCompetition')\n    try{\n      setLoading();\n      const res = await axios.put(`/api/competitions/kickuser/${_id}`, kickeeId, config);\n      dispatch({ type: KICK_USER_FROM_COMPETITION, payload: res.data });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  const addAdminToCompetition = async (_id, newAdminId) => {\n    console.log('addAdminToCompetition')\n    try{\n      setLoading();\n      const res = await axios.put(`/api/competitions/addadmin/${_id}`, newAdminId, config);\n      dispatch({ type: ADD_ADMIN_TO_COMPETITION, payload: res.data });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  const removeAdminFromCompetition = async (_id) => {\n    console.log('removeAdminFromCompetition')\n    try{\n      setLoading();\n      const res = await axios.put(`/api/competitions/removeadmin/${_id}`);\n      dispatch({ type: REMOVE_ADMIN_FROM_COMPETITION, payload: res.data });\n    } catch (err) {\n      dispatch({ type: COMPETITION_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //set loading\n  const setLoading = () => {\n    console.log('setLoading')\n    return { type: SET_COMPETITION_LOADING }\n  };\n\n  //clear requests\n  const clearCompetition = () => {\n    console.log('clearCompetition')\n    dispatch({ type: CLEAR_COMPETITION });\n  };\n\n  return (\n    <CompetitionContext.Provider\n    value={{\n      competition: state.competition,\n      competitionGoals: state.competitionGoals,\n      competitionError: state.competitionError,\n      competitionLoading: state.competitionLoading,\n      getCompetition,\n      getCompetitionGoals,\n      addCompetition,\n      deleteCompetition,\n      updateCompetition,\n      addUserToCompetition,\n      removeUserFromCompetition,\n      kickUserFromCompetition,\n      addAdminToCompetition,\n      removeAdminFromCompetition,\n      clearCompetition\n    }}>\n      {props.children}\n    </CompetitionContext.Provider>\n  )\n};\n\nexport default CompetitionState;"]},"metadata":{},"sourceType":"module"}
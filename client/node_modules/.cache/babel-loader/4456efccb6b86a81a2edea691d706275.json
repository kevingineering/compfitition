{"ast":null,"code":"const CreateArray = (competitionParticipants, competitionGoals, type, time, duration, isMax) => {\n  //create array used for leaderboard and chart - Array = [name, total, [runningTotals]]\n  let competitionArray = [];\n  competitionArray = competitionGoals.map(goal => {\n    //calc total to date\n    const tracker = goal.tracker;\n    let count = 0;\n\n    if (type === 'pass/fail') {\n      for (let i = 0; i < tracker.length; i++) {\n        if (tracker[i]) count++;\n      }\n    } else if (type === 'total') {\n      for (let i = 0; i < tracker.length; i++) {\n        count += tracker[i];\n      }\n    } else {\n      let temp = tracker.filter(value => value !== null);\n      count = temp.pop() - tracker[0];\n    } //pair user name with goal\n\n\n    let temp = competitionParticipants.find(user => user._id === goal.user);\n    let name = temp.alias ? temp.alias : temp.firstName; //get tracker values to date (for chart)\n\n    let trackerValues = [];\n    count = 0;\n    const length = time < duration ? time + 1 : duration;\n\n    if (type === 'pass/fail') {\n      for (let i = 0; i < length; i++) {\n        if (tracker[i]) count++;\n        trackerValues.push(count);\n      }\n    } else if (type === 'total') {\n      for (let i = 0; i < length; i++) {\n        count += tracker[i];\n        trackerValues.push(count);\n      }\n    } else {\n      for (let i = 0; i < length; i++) {\n        if (tracker[i]) trackerValues.push(tracker[i]);\n      }\n    } //package in array\n\n\n    return [name, count, trackerValues];\n  }); //sort competitionArray\n\n  if (isMax) competitionArray.sort((a, b) => b[1] - a[1]);else competitionArray.sort((a, b) => a[1] - b[1]);\n  return competitionArray;\n};\n\nexport default CreateArray;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/comptable/CreateArray.js"],"names":["CreateArray","competitionParticipants","competitionGoals","type","time","duration","isMax","competitionArray","map","goal","tracker","count","i","length","temp","filter","value","pop","find","user","_id","name","alias","firstName","trackerValues","push","sort","a","b"],"mappings":"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","sourcesContent":["const CreateArray = (competitionParticipants, competitionGoals, type, time, duration, isMax) => {\n\n  //create array used for leaderboard and chart - Array = [name, total, [runningTotals]]\n  let competitionArray = [];\n  \n  competitionArray = competitionGoals.map(goal => {\n    //calc total to date\n    const {tracker} = goal;\n    let count = 0;\n    if (type === 'pass/fail'){\n      for (let i = 0; i < tracker.length; i++) {\n        if (tracker[i]) count++;\n      }\n    }\n    else if (type === 'total') {\n      for (let i = 0; i < tracker.length; i++) {\n        count += tracker[i];\n      }\n    }\n    else {\n      let temp = tracker.filter(value => value !== null)\n      count = temp.pop() - tracker[0];\n    }\n\n    //pair user name with goal\n    let temp = competitionParticipants.find(user => user._id === goal.user);\n    let name = temp.alias ? temp.alias : temp.firstName;\n\n    //get tracker values to date (for chart)\n    let trackerValues = [];\n    count = 0;\n    const length = time < duration ? time + 1 : duration;\n    if (type === 'pass/fail'){\n      for (let i = 0; i < length; i++) {\n        if (tracker[i]) count++;\n        trackerValues.push(count);\n      }\n    }\n    else if (type === 'total') {\n      for (let i = 0; i < length; i++) {\n        count += tracker[i];\n        trackerValues.push(count);\n      }\n    }\n    else {\n      for (let i = 0; i < length; i++) {\n        if (tracker[i])          \n          trackerValues.push(tracker[i]);\n      }\n    }\n    //package in array\n    return [name, count, trackerValues]\n  })\n\n  //sort competitionArray\n  if (isMax)\n    competitionArray.sort((a, b) => b[1] - a[1]);\n  else \n    competitionArray.sort((a, b) => a[1] - b[1]);\n\n  return competitionArray;\n};\n\nexport default CreateArray;"]},"metadata":{},"sourceType":"module"}
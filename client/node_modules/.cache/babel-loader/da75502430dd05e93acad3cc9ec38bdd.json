{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_SEARCHABLE_USERS, FILTER_SEARCHABLE_USERS, CLEAR_SEARCHABLE_USERS_FILTER, SEARCHABLE_USERS_ERROR, CLEAR_SEARCHABLE_USERS, CLEAR_SEARCHABLE_USERS_ERRORS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_SEARCHABLE_USERS:\n      return _objectSpread({}, state, {\n        searchableUsers: action.payload,\n        loading: false\n      });\n\n    case CLEAR_SEARCHABLE_USERS:\n      return _objectSpread({}, state, {\n        searchableUsers: [],\n        loading: true\n      });\n\n    case FILTER_SEARCHABLE_USERS:\n      return _objectSpread({}, state, {\n        filteredUsers: state.searchableUsers.filter(user => {\n          //Regular expression (regex) is used for searching text, 'gi' makes it not case sensitive\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return user.firstName.match(regex) || user.lastName.match(regex) || user.email.match(regex) || user.alias.match(regex);\n        })\n      });\n\n    case CLEAR_SEARCHABLE_USERS_FILTER:\n      return _objectSpread({}, state, {\n        filteredUsers: []\n      });\n\n    case SEARCHABLE_USERS_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    case CLEAR_SEARCHABLE_USERS_ERRORS:\n      return _objectSpread({}, state, {\n        error: null,\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/searchableUsers/searchableUsersReducer.js"],"names":["GET_SEARCHABLE_USERS","FILTER_SEARCHABLE_USERS","CLEAR_SEARCHABLE_USERS_FILTER","SEARCHABLE_USERS_ERROR","CLEAR_SEARCHABLE_USERS","CLEAR_SEARCHABLE_USERS_ERRORS","state","action","type","searchableUsers","payload","loading","filteredUsers","filter","user","regex","RegExp","firstName","match","lastName","email","alias","error"],"mappings":";AAAA,SACEA,oBADF,EAEEC,uBAFF,EAGEC,6BAHF,EAIEC,sBAJF,EAKEC,sBALF,EAMEC,6BANF,QAOO,UAPP;AASA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,oBAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,eAAe,EAAEF,MAAM,CAACG,OAF1B;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,sBAAL;AACE,+BACKE,KADL;AAEEG,QAAAA,eAAe,EAAE,EAFnB;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKV,uBAAL;AACE,+BACKK,KADL;AAEEM,QAAAA,aAAa,EAAEN,KAAK,CAACG,eAAN,CAAsBI,MAAtB,CAA6BC,IAAI,IAAI;AAClD;AACA,gBAAMC,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAET,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBACEI,IAAI,CAACG,SAAL,CAAeC,KAAf,CAAqBH,KAArB,KACAD,IAAI,CAACK,QAAL,CAAcD,KAAd,CAAoBH,KAApB,CADA,IAEAD,IAAI,CAACM,KAAL,CAAWF,KAAX,CAAiBH,KAAjB,CAFA,IAGAD,IAAI,CAACO,KAAL,CAAWH,KAAX,CAAiBH,KAAjB,CAJF;AAMD,SATc;AAFjB;;AAaF,SAAKb,6BAAL;AACE,+BACKI,KADL;AAEEM,QAAAA,aAAa,EAAE;AAFjB;;AAIF,SAAKT,sBAAL;AACE,+BACKG,KADL;AAEEgB,QAAAA,KAAK,EAAEf,MAAM,CAACG,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,6BAAL;AACE,+BACKC,KADL;AAEEgB,QAAAA,KAAK,EAAE,IAFT;AAGEX,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOL,KAAP;AA7CJ;;AA8CC;AACF,CAhDD","sourcesContent":["import {\n  GET_SEARCHABLE_USERS,\n  FILTER_SEARCHABLE_USERS,\n  CLEAR_SEARCHABLE_USERS_FILTER,\n  SEARCHABLE_USERS_ERROR,\n  CLEAR_SEARCHABLE_USERS,\n  CLEAR_SEARCHABLE_USERS_ERRORS\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_SEARCHABLE_USERS:\n      return {\n        ...state, \n        searchableUsers: action.payload,\n        loading: false\n      }\n    case CLEAR_SEARCHABLE_USERS:\n      return {\n        ...state, \n        searchableUsers: [],\n        loading: true\n      }\n    case FILTER_SEARCHABLE_USERS:\n      return {\n        ...state, \n        filteredUsers: state.searchableUsers.filter(user => {\n          //Regular expression (regex) is used for searching text, 'gi' makes it not case sensitive\n          const regex = new RegExp(`${action.payload}`, 'gi')\n          return (\n            user.firstName.match(regex) ||\n            user.lastName.match(regex) ||\n            user.email.match(regex) ||\n            user.alias.match(regex)\n          );\n        })\n      }\n    case CLEAR_SEARCHABLE_USERS_FILTER:\n      return {\n        ...state, \n        filteredUsers: []\n      }\n    case SEARCHABLE_USERS_ERROR:\n      return {\n        ...state, \n        error: action.payload,\n        loading: false\n      }\n    case CLEAR_SEARCHABLE_USERS_ERRORS:\n      return {\n        ...state, \n        error: null, \n        loading: true\n      }\n    default: \n      return state;\n  };\n};"]},"metadata":{},"sourceType":"module"}
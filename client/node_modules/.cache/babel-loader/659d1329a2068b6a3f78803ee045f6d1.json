{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalChart.js\";\nimport React from 'react';\nimport Chart from 'react-google-charts';\n\nconst GoalChart = ({\n  duration,\n  units,\n  total,\n  record,\n  time\n}) => {\n  const dataPoints = [['x', 'miles', 'total'], ['0', 0, 0]];\n  let runningTotal = 0;\n\n  for (let i = 1; i <= time; i++) {\n    runningTotal += record[i];\n    dataPoints.push([i.toString(), record[i], runningTotal]);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    chartType: \"LineChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: dataPoints,\n    options: {\n      chartArea: {\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%'\n      },\n      axisTitlesPosition: 'none',\n      hAxis: {\n        title: 'none',\n        textPosition: 'none',\n        maxValue: {\n          time\n        },\n        minValue: 0\n      },\n      legend: {\n        position: 'top'\n      },\n      vAxis: {\n        title: 'Miles',\n        textPosition: 'none'\n      },\n      titlePosition: 'none'\n    },\n    rootProps: {\n      'data-testid': '1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\n\nexport default GoalChart;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalChart.js"],"names":["React","Chart","GoalChart","duration","units","total","record","time","dataPoints","runningTotal","i","push","toString","chartArea","left","top","width","height","axisTitlesPosition","hAxis","title","textPosition","maxValue","minValue","legend","position","vAxis","titlePosition"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,MAA1B;AAAkCC,EAAAA;AAAlC,CAAD,KAA8C;AAC9D,QAAMC,UAAU,GAAG,CAAC,CAAC,GAAD,EAAM,OAAN,EAAe,OAAf,CAAD,EAA0B,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CAA1B,CAAnB;AACA,MAAIC,YAAY,GAAG,CAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,IAArB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9BD,IAAAA,YAAY,IAAIH,MAAM,CAACI,CAAD,CAAtB;AACAF,IAAAA,UAAU,CAACG,IAAX,CACE,CAACD,CAAC,CAACE,QAAF,EAAD,EAAeN,MAAM,CAACI,CAAD,CAArB,EAA0BD,YAA1B,CADF;AAGD;;AAED,SACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFV;AAGE,IAAA,IAAI,EAAED,UAHR;AAIE,IAAA,OAAO,EAAE;AACPK,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAE,CADG;AAETC,QAAAA,GAAG,EAAE,CAFI;AAGTC,QAAAA,KAAK,EAAE,MAHE;AAITC,QAAAA,MAAM,EAAE;AAJC,OADJ;AAOPC,MAAAA,kBAAkB,EAAE,MAPb;AAQPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,YAAY,EAAE,MAFT;AAGLC,QAAAA,QAAQ,EAAE;AAACf,UAAAA;AAAD,SAHL;AAILgB,QAAAA,QAAQ,EAAE;AAJL,OARA;AAcPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ,OAdD;AAiBPC,MAAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,YAAY,EAAE;AAFT,OAjBA;AAqBPM,MAAAA,aAAa,EAAE;AArBR,KAJX;AA2BE,IAAA,SAAS,EAAE;AAAE,qBAAe;AAAjB,KA3Bb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA;AAiCD,CA3CD;;AA6CA,eAAezB,SAAf","sourcesContent":["import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst GoalChart = ({ duration, units, total, record, time }) => {\n  const dataPoints = [['x', 'miles', 'total'], ['0', 0, 0]];\n  let runningTotal = 0;\n  for (let i = 1; i <= time; i++) {\n    runningTotal += record[i]\n    dataPoints.push(\n      [i.toString(), record[i], runningTotal]\n    );\n  }\n\n  return (\n  <div className='border'>\n    <Chart\n      chartType=\"LineChart\"\n      loader={<div>Loading Chart</div>}\n      data={dataPoints}\n      options={{\n        chartArea: {\n          left: 0,\n          top: 0,\n          width: '100%',\n          height: '100%'\n        },\n        axisTitlesPosition: 'none',\n        hAxis: {\n          title: 'none',\n          textPosition: 'none',\n          maxValue: {time},\n          minValue: 0\n        },\n        legend: {\n          position: 'top'\n        },\n        vAxis: {\n          title: 'Miles',\n          textPosition: 'none'\n        },\n        titlePosition: 'none'\n      }}\n      rootProps={{ 'data-testid': '1' }}\n    />\n  </div>\n  );\n}\n  \nexport default GoalChart;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport { GET_GOALS, ADD_GOAL, DELETE_GOAL, UPDATE_GOAL, SET_CURRENT_GOAL, CLEAR_CURRENT_GOAL, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOAL_ERRORS, CLEAR_GOALS } from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goals: [],\n    current: null,\n    error: null,\n    loading: true\n  };\n\n  const _useReducer = useReducer(GoalReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //used for addGoal and updateGoal\n\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //get goals\n\n  const getGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/goals');\n      dispatch({\n        type: GET_GOALS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //add goal\n\n\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/goals', goal, config);\n      dispatch({\n        type: ADD_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(err);\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //delete goal\n\n\n  const deleteGoal = async id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/goals/${id}`);\n      dispatch({\n        type: DELETE_GOAL,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //update goal\n\n\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/${goal.id}`, goal, config);\n      dispatch({\n        type: UPDATE_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //set loading\n\n\n  const setLoading = () => {\n    return {\n      type: SET_GOAL_LOADING\n    };\n  }; //clear errors\n\n\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_GOAL_ERRORS\n    });\n  }; //set current\n\n\n  const setCurrent = goal => {\n    dispatch({\n      type: SET_CURRENT_GOAL\n    });\n  }; //clear current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT_GOAL\n    });\n  }; //clear goals\n\n\n  const clearGoals = () => {\n    dispatch({\n      type: CLEAR_GOALS\n    });\n  };\n\n  return React.createElement(GoalContext.Provider, {\n    value: {\n      goals: state.goals,\n      current: state.current,\n      error: state.error,\n      loading: state.loading,\n      getGoals,\n      addGoal,\n      deleteGoal,\n      setCurrent,\n      clearCurrent,\n      updateGoal,\n      clearGoals,\n      clearErrors\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GoalState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js"],"names":["React","useReducer","axios","GoalContext","GoalReducer","GET_GOALS","ADD_GOAL","DELETE_GOAL","UPDATE_GOAL","SET_CURRENT_GOAL","CLEAR_CURRENT_GOAL","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOAL_ERRORS","CLEAR_GOALS","GoalState","props","initialState","goals","current","error","loading","state","dispatch","config","headers","getGoals","setLoading","res","get","type","payload","data","err","response","msg","addGoal","goal","post","console","log","deleteGoal","id","delete","updateGoal","put","clearErrors","setCurrent","clearCurrent","clearGoals","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport {\n  GET_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  UPDATE_GOAL,\n  SET_CURRENT_GOAL,\n  CLEAR_CURRENT_GOAL,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOAL_ERRORS,\n  CLEAR_GOALS\n} from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goals: [],\n    current: null,\n    error: null,\n    loading: true\n  };\n\n  const [state, dispatch] = useReducer(GoalReducer, initialState);\n\n  //used for addGoal and updateGoal\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  //get goals\n  const getGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/goals');\n      dispatch({ type: GET_GOALS, payload: res.data});\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //add goal\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/goals', goal, config);\n      dispatch({ type: ADD_GOAL, payload: res.data});\n    } catch (err) {\n      console.log(err);\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //delete goal\n  const deleteGoal = async id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/goals/${id}`);\n      dispatch({ type: DELETE_GOAL, payload: id });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //update goal\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/${goal.id}`, goal, config);\n      dispatch({ type: UPDATE_GOAL, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //set loading\n  const setLoading = () => {\n    return { type: SET_GOAL_LOADING }\n  };\n\n  //clear errors\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_GOAL_ERRORS });\n  };\n\n  //set current\n  const setCurrent = goal => {\n    dispatch({ type: SET_CURRENT_GOAL });\n  };\n\n  //clear current\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT_GOAL });\n  };\n\n  //clear goals\n  const clearGoals = () => {\n    dispatch({ type: CLEAR_GOALS });\n  };\n\n  return (\n    <GoalContext.Provider\n    value={{\n      goals: state.goals,\n      current: state.current,\n      error: state.error,\n      loading: state.loading,\n      getGoals,\n      addGoal,\n      deleteGoal,\n      setCurrent,\n      clearCurrent,\n      updateGoal,\n      clearGoals,\n      clearErrors\n    }}>\n      {props.children}\n    </GoalContext.Provider>\n  )\n};\n\nexport default GoalState;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchResults.js\";\nimport React, { useContext, useEffect } from 'react';\nimport SearchItem from './SearchItem';\nimport SearchableUsersContext from '../../contexts/searchableUsers/searchableUsersContext';\nimport FriendContext from '../../contexts/friends/friendContext';\nimport RequestContext from '../../contexts/requests/requestContext';\n\nconst SearchResults = () => {\n  const searchableUsersContext = useContext(SearchableUsersContext);\n  const searchableUsers = searchableUsersContext.searchableUsers,\n        searchableUsersFiltered = searchableUsersContext.searchableUsersFiltered;\n  const friendContext = useContext(FriendContext);\n  const friendIds = friendContext.friendIds;\n  const requestContext = useContext(RequestContext);\n  const requestsSent = requestContext.requestsSent,\n        requestsReceived = requestContext.requestsReceived,\n        getRequests = requestContext.getRequests;\n  const sentArray = requestsSent.map(request => {\n    return request.requestee;\n  });\n  const receivedArray = requestsReceived.map(request => {\n    return request.requester;\n  }); //configure results and send friend status down to child\n\n  /*status can be\n    friend          you are friends with this user\n    stranger        you are not friends with this user\n    received        they requested to be friends with you\n    sent            you requestedd to be friends with them  \n  */\n\n  useEffect(() => {\n    getRequests();\n    console.log('search requests'); //eslint-disable-next-line\n  }, []);\n  let searchList = 'Loading...';\n  let requestId = '';\n  if (searchableUsers.length === 0) searchList = React.createElement(\"li\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Loading...\");\n\n  if (searchableUsersFiltered !== null) {\n    searchList = searchableUsersFiltered.map(user => {\n      let status = 'stranger';\n\n      if (friendIds.includes(user._id)) {\n        status = 'friend';\n      } else if (receivedArray.includes(user._id)) {\n        status = 'received';\n        requestId = requestsReceived.filter(request => request.requestee === user.id);\n        console.log(requestId);\n      } else if (sentArray.includes(user._id)) {\n        status = 'sent';\n      }\n\n      return React.createElement(SearchItem, {\n        key: user._id,\n        user: user,\n        status: status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    });\n  } else {\n    searchList = searchableUsers.map(user => {\n      let status = 'stranger';\n\n      if (friendIds.includes(user._id)) {\n        status = 'friend';\n      } else if (receivedArray.includes(user._id)) {\n        status = 'received';\n      } else if (sentArray.includes(user._id)) {\n        status = 'sent';\n      }\n\n      return React.createElement(SearchItem, {\n        key: user._id,\n        user: user,\n        status: status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, searchList);\n};\n\nexport default SearchResults;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchResults.js"],"names":["React","useContext","useEffect","SearchItem","SearchableUsersContext","FriendContext","RequestContext","SearchResults","searchableUsersContext","searchableUsers","searchableUsersFiltered","friendContext","friendIds","requestContext","requestsSent","requestsReceived","getRequests","sentArray","map","request","requestee","receivedArray","requester","console","log","searchList","requestId","length","user","status","includes","_id","filter","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,sBAAP,MAAmC,uDAAnC;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,sBAAsB,GAAGP,UAAU,CAACG,sBAAD,CAAzC;AAD0B,QAElBK,eAFkB,GAE2BD,sBAF3B,CAElBC,eAFkB;AAAA,QAEDC,uBAFC,GAE2BF,sBAF3B,CAEDE,uBAFC;AAI1B,QAAMC,aAAa,GAAGV,UAAU,CAACI,aAAD,CAAhC;AAJ0B,QAKlBO,SALkB,GAKJD,aALI,CAKlBC,SALkB;AAO1B,QAAMC,cAAc,GAAGZ,UAAU,CAACK,cAAD,CAAjC;AAP0B,QAQlBQ,YARkB,GAQ8BD,cAR9B,CAQlBC,YARkB;AAAA,QAQJC,gBARI,GAQ8BF,cAR9B,CAQJE,gBARI;AAAA,QAQcC,WARd,GAQ8BH,cAR9B,CAQcG,WARd;AAU1B,QAAMC,SAAS,GAAGH,YAAY,CAACI,GAAb,CAAiBC,OAAO,IAAI;AAC5C,WAAOA,OAAO,CAACC,SAAf;AACD,GAFiB,CAAlB;AAGA,QAAMC,aAAa,GAAGN,gBAAgB,CAACG,GAAjB,CAAqBC,OAAO,IAAI;AACpD,WAAOA,OAAO,CAACG,SAAf;AACD,GAFqB,CAAtB,CAb0B,CAiB1B;;AACA;;;;;;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW;AACXO,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAFc,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,MAAIC,UAAU,GAAG,YAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEA,MAAIjB,eAAe,CAACkB,MAAhB,KAA2B,CAA/B,EACEF,UAAU,GAAG;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAb;;AACF,MAAIf,uBAAuB,KAAK,IAAhC,EAAsC;AACpCe,IAAAA,UAAU,GAAGf,uBAAuB,CAACQ,GAAxB,CAA4BU,IAAI,IAAI;AAC/C,UAAIC,MAAM,GAAG,UAAb;;AACA,UAAIjB,SAAS,CAACkB,QAAV,CAAmBF,IAAI,CAACG,GAAxB,CAAJ,EAAkC;AAChCF,QAAAA,MAAM,GAAG,QAAT;AACD,OAFD,MAEO,IAAIR,aAAa,CAACS,QAAd,CAAuBF,IAAI,CAACG,GAA5B,CAAJ,EAAsC;AAC3CF,QAAAA,MAAM,GAAG,UAAT;AACAH,QAAAA,SAAS,GAAGX,gBAAgB,CAACiB,MAAjB,CAAwBb,OAAO,IAAIA,OAAO,CAACC,SAAR,KAAsBQ,IAAI,CAACK,EAA9D,CAAZ;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACD,OAJM,MAIA,IAAIT,SAAS,CAACa,QAAV,CAAmBF,IAAI,CAACG,GAAxB,CAAJ,EAAkC;AACvCF,QAAAA,MAAM,GAAG,MAAT;AACD;;AACD,aAAO,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAED,IAAI,CAACG,GAAtB;AAA2B,QAAA,IAAI,EAAEH,IAAjC;AAAuC,QAAA,MAAM,EAAEC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAZY,CAAb;AAaD,GAdD,MAeK;AACHJ,IAAAA,UAAU,GAAGhB,eAAe,CAACS,GAAhB,CAAoBU,IAAI,IAAI;AACvC,UAAIC,MAAM,GAAG,UAAb;;AACA,UAAIjB,SAAS,CAACkB,QAAV,CAAmBF,IAAI,CAACG,GAAxB,CAAJ,EAAkC;AAChCF,QAAAA,MAAM,GAAG,QAAT;AACD,OAFD,MAEO,IAAIR,aAAa,CAACS,QAAd,CAAuBF,IAAI,CAACG,GAA5B,CAAJ,EAAsC;AAC3CF,QAAAA,MAAM,GAAG,UAAT;AACD,OAFM,MAEA,IAAIZ,SAAS,CAACa,QAAV,CAAmBF,IAAI,CAACG,GAAxB,CAAJ,EAAkC;AACvCF,QAAAA,MAAM,GAAG,MAAT;AACD;;AACD,aAAO,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAED,IAAI,CAACG,GAAtB;AAA2B,QAAA,IAAI,EAAEH,IAAjC;AAAuC,QAAA,MAAM,EAAEC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAVY,CAAb;AAWD;;AACD,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UADH,CADF;AAKD,CArED;;AAuEA,eAAelB,aAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport SearchItem from './SearchItem';\nimport SearchableUsersContext from '../../contexts/searchableUsers/searchableUsersContext';\nimport FriendContext from '../../contexts/friends/friendContext';\nimport RequestContext from '../../contexts/requests/requestContext';\n\nconst SearchResults = () => {\n  const searchableUsersContext = useContext(SearchableUsersContext);\n  const { searchableUsers, searchableUsersFiltered } = searchableUsersContext;\n\n  const friendContext = useContext(FriendContext);\n  const { friendIds } = friendContext;\n\n  const requestContext = useContext(RequestContext);\n  const { requestsSent, requestsReceived, getRequests } = requestContext;\n\n  const sentArray = requestsSent.map(request => {\n    return request.requestee;\n  })\n  const receivedArray = requestsReceived.map(request => {\n    return request.requester;\n  })\n\n  //configure results and send friend status down to child\n  /*status can be\n    friend          you are friends with this user\n    stranger        you are not friends with this user\n    received        they requested to be friends with you\n    sent            you requestedd to be friends with them  \n  */\n \n  useEffect(() => {\n    getRequests();\n    console.log('search requests')\n    //eslint-disable-next-line\n  }, []);\n\n  let searchList = 'Loading...';\n  let requestId = '';\n\n  if (searchableUsers.length === 0)\n    searchList = <li className='collection-item'>Loading...</li>;\n  if (searchableUsersFiltered !== null) {\n    searchList = searchableUsersFiltered.map(user => {\n      let status = 'stranger';\n      if (friendIds.includes(user._id)) {\n        status = 'friend';\n      } else if (receivedArray.includes(user._id)) {\n        status = 'received';\n        requestId = requestsReceived.filter(request => request.requestee === user.id);\n        console.log(requestId);\n      } else if (sentArray.includes(user._id)) {\n        status = 'sent';\n      }\n      return <SearchItem key={user._id} user={user} status={status} />\n    })\n  }\n  else {\n    searchList = searchableUsers.map(user => {\n      let status = 'stranger';\n      if (friendIds.includes(user._id)) {\n        status = 'friend';\n      } else if (receivedArray.includes(user._id)) {\n        status = 'received';\n      } else if (sentArray.includes(user._id)) {\n        status = 'sent';\n      }\n      return <SearchItem key={user._id} user={user} status={status} />\n    })\n  }\n  return (\n    <React.Fragment>\n      {searchList}\n    </React.Fragment>\n  );\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}
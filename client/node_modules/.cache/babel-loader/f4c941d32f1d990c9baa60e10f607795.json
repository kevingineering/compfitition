{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/Friend/FriendGoals.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport FriendContext from '../../../contexts/friends/friendContext';\nimport moment from 'moment';\nimport GoalTable from '../../goals/GoalTable';\n\nconst FriendGoals = () => {\n  const friendContext = useContext(FriendContext);\n  const friendCurrent = friendContext.friendCurrent,\n        getCurrentFriendGoals = friendContext.getCurrentFriendGoals,\n        friendCurrentGoals = friendContext.friendCurrentGoals,\n        friendsLoading = friendContext.friendsLoading; //get friend 'friends' and 'public' goals \n\n  useEffect(() => {\n    getCurrentFriendGoals(friendCurrent._id); //eslint-disable-next-line\n  }, [friendCurrent]);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeGoals = _useState2[0],\n        setActiveGoals = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pastGoals = _useState4[0],\n        setPastGoals = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        activeCompetitions = _useState6[0],\n        setActiveCompetitions = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        pastCompetitions = _useState8[0],\n        setPastCompetitions = _useState8[1]; //create arrays for past and active goals and competitions\n\n\n  useEffect(() => {\n    //if(friendCurrentGoals.)\n    let active = friendCurrentGoals.filter(goal => moment().startOf('day').diff(goal.startDate, 'days') + 1 <= goal.duration);\n    setActiveGoals(active.filter(goal => goal.compId === null));\n    setActiveCompetitions(active.filter(goal => goal.compId !== null));\n    let past = friendCurrentGoals.filter(goal => moment().startOf('day').diff(goal.startDate, 'days') + 1 > goal.duration);\n    setPastGoals(past.filter(goal => goal.compId === null));\n    setPastCompetitions(past.filter(goal => goal.compId !== null));\n  }, [friendCurrentGoals]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(GoalTable, {\n    goals: activeGoals,\n    isPast: false,\n    isGoal: true,\n    isOwner: false,\n    name: friendCurrent.firstName,\n    loading: friendsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(GoalTable, {\n    goals: activeCompetitions,\n    isPast: false,\n    isGoal: false,\n    isOwner: false,\n    name: friendCurrent.firstName,\n    loading: friendsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(GoalTable, {\n    goals: pastGoals,\n    isPast: true,\n    isGoal: true,\n    isOwner: false,\n    name: friendCurrent.firstName,\n    loading: friendsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(GoalTable, {\n    goals: pastCompetitions,\n    isPast: true,\n    isGoal: false,\n    isOwner: false,\n    name: friendCurrent.firstName,\n    loading: friendsLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n};\n\nexport default FriendGoals;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/Friend/FriendGoals.js"],"names":["React","useContext","useState","useEffect","FriendContext","moment","GoalTable","FriendGoals","friendContext","friendCurrent","getCurrentFriendGoals","friendCurrentGoals","friendsLoading","_id","activeGoals","setActiveGoals","pastGoals","setPastGoals","activeCompetitions","setActiveCompetitions","pastCompetitions","setPastCompetitions","active","filter","goal","startOf","diff","startDate","duration","compId","past","firstName"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport FriendContext from '../../../contexts/friends/friendContext';\nimport moment from 'moment';\nimport GoalTable from '../../goals/GoalTable';\n\nconst FriendGoals = () => {\n  const friendContext = useContext(FriendContext);\n  const { friendCurrent, getCurrentFriendGoals, friendCurrentGoals, friendsLoading } = friendContext;\n\n  //get friend 'friends' and 'public' goals \n  useEffect(() => {\n    getCurrentFriendGoals(friendCurrent._id);\n    //eslint-disable-next-line\n  }, [friendCurrent])\n\n  const [activeGoals, setActiveGoals] = useState([]);\n  const [pastGoals, setPastGoals] = useState([]);\n  const [activeCompetitions, setActiveCompetitions] = useState([]);\n  const [pastCompetitions, setPastCompetitions] = useState([]);\n\n  //create arrays for past and active goals and competitions\n  useEffect(() => {\n    //if(friendCurrentGoals.)\n    let active = friendCurrentGoals.filter(goal => \n      (moment().startOf('day').diff(goal.startDate, 'days') + 1) <= goal.duration);\n    \n    setActiveGoals(active.filter(goal => goal.compId === null));\n    setActiveCompetitions(active.filter(goal => goal.compId !== null));\n\n    let past = friendCurrentGoals.filter(goal => \n      (moment().startOf('day').diff(goal.startDate, 'days') + 1) > goal.duration);\n\n    setPastGoals(past.filter(goal => goal.compId === null));\n    setPastCompetitions(past.filter(goal => goal.compId !== null));\n\n  }, [friendCurrentGoals]);\n\n  return (\n    <div>\n      <GoalTable\n        goals={activeGoals} \n        isPast={false} \n        isGoal={true}\n        isOwner={false}\n        name={friendCurrent.firstName}\n        loading={friendsLoading}\n      />\n      <GoalTable\n        goals={activeCompetitions}\n        isPast={false} \n        isGoal={false}\n        isOwner={false}\n        name={friendCurrent.firstName}\n        loading={friendsLoading}\n      />\n      <GoalTable\n        goals={pastGoals}\n        isPast={true} \n        isGoal={true}\n        isOwner={false}\n        name={friendCurrent.firstName}\n        loading={friendsLoading}\n      />\n      <GoalTable\n        goals={pastCompetitions}\n        isPast={true} \n        isGoal={false}\n        isOwner={false}\n        name={friendCurrent.firstName}\n        loading={friendsLoading}\n      />\n    </div>\n  )\n}\n\nexport default FriendGoals;"]},"metadata":{},"sourceType":"module"}
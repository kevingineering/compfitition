{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\n\nconst GoalPassFail = ({\n  handleSave,\n  isOwner,\n  goal: {\n    duration,\n    startDate,\n    total,\n    compId,\n    tracker\n  }\n}) => {\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlert = alertContext.clearAlert;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  let isComplete = false;\n\n  if (time > duration) {\n    time = duration;\n    isComplete = true;\n  }\n\n  useEffect(() => {\n    console.log('goalpassfail - 1');\n    setRecord(record.map((value, index) => {\n      if (index < time && value === null) {\n        value = false;\n      }\n\n      return value;\n    })); //eslint-disable-next-line\n  }, []); //clear alert before redirect\n\n  useEffect(() => {\n    console.log('goalpassfail - 2');\n    return () => {\n      clearAlert();\n    }; //eslint-disable-next-line\n  }, []);\n  let success = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    if (record[i] === true) success++;\n  }\n\n  let toDatePercentage = round(success / (time + 1) * 100);\n  let totalPercentage = round(success / record.length * 100); //event.target will get the icon and fail, but event.currentTarget will get the button every time\n\n  const handleClick = e => {\n    if (isComplete || !isOwner) {\n      return null;\n    }\n\n    let clickLoc = parseInt(e.currentTarget.name);\n\n    if (timeHours < 0 || time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n    } else if (time === clickLoc || time === clickLoc + 1) {\n      setRecord(record.map((value, index) => {\n        if (index === clickLoc) {\n          if (value === null || value === false) {\n            value = true;\n          } else value = false;\n        }\n\n        return value;\n      }));\n    } else {\n      setAlert(\"You can only record data for today and yesterday.\");\n    }\n  };\n\n  const table = () => {\n    let list = [];\n\n    for (let i = 0; i < duration / 7; i++) {\n      list.push(React.createElement(\"span\", {\n        className: \"table-row\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"table-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Week \", i + 1, React.createElement(\"span\", {\n        className: \"hide-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, '', \" - \", moment.utc(startDate).add(7 * i, 'day').format('MMM Do'))), React.createElement(\"span\", {\n        className: \"table-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, buttons(i))));\n    }\n\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n\n    for (let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(React.createElement(\"button\", {\n        className: `table-btn ${time === loc && 'table-btn-today'}`,\n        onClick: handleClick,\n        key: loc,\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, record[loc] && React.createElement(\"i\", {\n        className: \"fas fa-check success-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), !record[loc] && record[loc] !== null && React.createElement(\"i\", {\n        className: \"fas fa-times danger-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), record[loc] === null && ' '));\n    }\n\n    return list;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, table()), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Start Date: \", moment.utc(startDate).format('MMMM Do, YYYY')), !isComplete && timeHours >= 0 && isOwner && React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Success To Date: \", success, \" / \", time > duration ? record.length : time + 1, \" (\", toDatePercentage, \"%)\"), timeHours >= 0 && React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Success Total: \", success, \" / \", record.length, \" (\", totalPercentage, \"%)\")), !isComplete && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })));\n};\n\nGoalPassFail.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalPassFail;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js"],"names":["React","useState","useContext","useEffect","moment","AlertContext","round","PropTypes","GoalPassFail","handleSave","isOwner","goal","duration","startDate","total","compId","tracker","alertContext","setAlert","clearAlert","record","setRecord","time","startOf","diff","timeHours","isComplete","console","log","map","value","index","success","i","length","toDatePercentage","totalPercentage","handleClick","e","clickLoc","parseInt","currentTarget","name","table","list","push","utc","add","format","buttons","week","loc","propTypes","func","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport { round } from 'mathjs';\nimport PropTypes from 'prop-types';\n\nconst GoalPassFail = ({handleSave, isOwner, goal: { duration, startDate, total, compId, tracker }}) => {\n  const alertContext = useContext(AlertContext);\n  const {setAlert, clearAlert} = alertContext;\n\n  const [record, setRecord] = useState(tracker);\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  \n  let isComplete = false;\n  if (time > duration) {\n    time = duration;\n    isComplete = true;\n  }\n\n  useEffect(() => {\n    console.log('goalpassfail - 1')\n    setRecord(record.map((value, index) => {\n      if (index < time && value === null) {\n        value = false;\n      }\n      return value;\n    }));\n    //eslint-disable-next-line\n  }, []);\n\n  //clear alert before redirect\n  useEffect(() => {\n    console.log('goalpassfail - 2')\n    return () => {\n      clearAlert();\n    }\n    //eslint-disable-next-line\n  }, []);\n\n  let success = 0;\n\n  for (let i = 0; i < record.length; i++ ) {\n    if (record[i] === true) \n      success++;\n  }\n\n  let toDatePercentage = round(success / (time + 1) * 100);\n  let totalPercentage = round(success / record.length * 100);\n\n  //event.target will get the icon and fail, but event.currentTarget will get the button every time\n  const handleClick = e => {\n    if (isComplete || !isOwner) {\n      return null;\n    }\n    let clickLoc = parseInt(e.currentTarget.name);\n    if (timeHours < 0 || time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n    }\n    else if (time === clickLoc || time === clickLoc + 1) {\n      setRecord(record.map((value, index) => {\n        if (index === clickLoc) {\n          if (value === null || value === false) {\n            value = true;\n          }\n          else value = false;\n        }\n        return value;\n      }))\n    }\n    else {\n      setAlert(\"You can only record data for today and yesterday.\");\n    }\n  };\n\n  const table = () => {\n    let list = [];\n    for(let i = 0; i < duration / 7; i++) {\n      list.push(\n        <span className='table-row' key={i}>\n          <h3 className='table-label'>Week {i + 1}\n            <span className='hide-sm'>\n              {''} - {moment.utc(startDate).add(7 * i, 'day').format('MMM Do')}\n            </span>\n          </h3>\n          <span className='table-buttons'>\n            {buttons(i)}\n          </span>\n        </span>);\n    }\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n    for(let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(\n        <button \n          className={`table-btn ${time === loc && 'table-btn-today'}`}\n          onClick={handleClick} \n          key={loc} \n          name={loc} \n        >\n          {record[loc] && <i className='fas fa-check success-color' name={loc}/>}\n          {!record[loc] && record[loc] !== null && <i className='fas fa-times danger-color' name={loc}/>}\n          {record[loc] === null && ' '}\n        </button>\n      )\n    }\n    return list;\n  };\n\n  return (\n    <React.Fragment>\n      <ul>\n        <li>\n          {table()}\n        </li>\n        <li className='table-info lr-border'>\n          Start Date: {moment.utc(startDate).format('MMMM Do, YYYY')}\n        </li>\n        {!isComplete && timeHours >= 0 && isOwner &&\n          <li className='table-info lr-border'>\n            Success To Date: {success} / {time > duration ? record.length : time + 1} ({toDatePercentage}%)\n          </li>\n        }\n        {timeHours >= 0 &&\n          <li className='table-info lr-border'>\n            Success Total: {success} / {record.length} ({totalPercentage}%)\n          </li>\n        }\n      </ul>\n      {!isComplete && isOwner && \n        <React.Fragment>\n          <button className='btn btn-primary btn-block' onClick={() => handleSave(record)}>\n            Save Goal\n          </button>\n          <p className='lr-border'/>\n        </React.Fragment>\n      }\n    </React.Fragment>\n  );\n};\n\nGoalPassFail.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n}\n\nexport default GoalPassFail;"]},"metadata":{},"sourceType":"module"}
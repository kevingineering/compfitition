{"ast":null,"code":"import _objectWithoutProperties from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/routing/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../contexts/auth/authContext'; //taking component and anything else as rest, creates a route that is only reachable if you have been authenticated\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  const authContext = useContext(AuthContext);\n  const isAuthenticated = authContext.isAuthenticated,\n        loading = authContext.loading;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/routing/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","Component","component","rest","authContext","isAuthenticated","loading","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAC1D,QAAMC,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B;AAD0D,QAElDM,eAFkD,GAErBD,WAFqB,CAElDC,eAFkD;AAAA,QAEjCC,OAFiC,GAErBF,WAFqB,CAEjCE,OAFiC;AAI1D,SACE,oBAAC,KAAD,oBAAYH,IAAZ;AAAmB,IAAA,MAAM,EAAGI,KAAK,IAAI,CAACF,eAAD,IAAoB,CAACC,OAArB,GACjC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiC,GAGjC,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAXD;;AAaA,eAAeP,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../contexts/auth/authContext';\n\n//taking component and anything else as rest, creates a route that is only reachable if you have been authenticated\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n\n  return (\n    <Route { ...rest } render={ props => !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component{ ...props } />\n      )} />\n  );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}
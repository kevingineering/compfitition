{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_COMPETITION, GET_COMPETITION_GOALS, ADD_COMPETITION, DELETE_COMPETITION, UPDATE_COMPETITION, ADD_USER_TO_COMPETITION, REMOVE_USER_FROM_COMPETITION, ADD_ADMIN_TO_COMPETITION, REMOVE_ADMIN_FROM_COMPETITION, SET_COMPETITION_LOADING, CLEAR_COMPETITION, COMPETITION_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_COMPETITION:\n    case ADD_COMPETITION:\n    case UPDATE_COMPETITION:\n    case ADD_USER_TO_COMPETITION:\n    case REMOVE_USER_FROM_COMPETITION:\n    case ADD_ADMIN_TO_COMPETITION:\n    case REMOVE_ADMIN_FROM_COMPETITION:\n      return _objectSpread({}, state, {\n        competition: action.payload,\n        competitionLoading: false\n      });\n\n    case GET_COMPETITION_GOALS:\n      return _objectSpread({}, state, {\n        competitionGoals: action.payload,\n        competitionLoading: false\n      });\n\n    case DELETE_COMPETITION:\n      return _objectSpread({}, state, {\n        competition: {},\n        competitionLoading: false\n      });\n\n    case COMPETITION_ERROR:\n      return _objectSpread({}, state, {\n        competitionError: action.payload,\n        competitionLoading: false\n      });\n\n    case CLEAR_COMPETITION:\n      return _objectSpread({}, state, {\n        competition: {},\n        competitionError: null,\n        competitionLoading: true\n      });\n\n    case SET_COMPETITION_LOADING:\n      return _objectSpread({}, state, {\n        competitionLoading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/competitions/competitionReducer.js"],"names":["GET_COMPETITION","GET_COMPETITION_GOALS","ADD_COMPETITION","DELETE_COMPETITION","UPDATE_COMPETITION","ADD_USER_TO_COMPETITION","REMOVE_USER_FROM_COMPETITION","ADD_ADMIN_TO_COMPETITION","REMOVE_ADMIN_FROM_COMPETITION","SET_COMPETITION_LOADING","CLEAR_COMPETITION","COMPETITION_ERROR","state","action","type","competition","payload","competitionLoading","competitionGoals","competitionError"],"mappings":";AAAA,SACEA,eADF,EAEEC,qBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,uBANF,EAOEC,4BAPF,EAQEC,wBARF,EASEC,6BATF,EAUEC,uBAVF,EAWEC,iBAXF,EAYEC,iBAZF,QAaO,UAbP;AAeA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKd,eAAL;AACA,SAAKE,eAAL;AACA,SAAKE,kBAAL;AACA,SAAKC,uBAAL;AACA,SAAKC,4BAAL;AACA,SAAKC,wBAAL;AACA,SAAKC,6BAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,WAAW,EAAEF,MAAM,CAACG,OAFtB;AAGEC,QAAAA,kBAAkB,EAAE;AAHtB;;AAKF,SAAKhB,qBAAL;AACE,+BACKW,KADL;AAEEM,QAAAA,gBAAgB,EAAEL,MAAM,CAACG,OAF3B;AAGEC,QAAAA,kBAAkB,EAAE;AAHtB;;AAKF,SAAKd,kBAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,WAAW,EAAE,EAFf;AAGEE,QAAAA,kBAAkB,EAAE;AAHtB;;AAKF,SAAKN,iBAAL;AACE,+BACKC,KADL;AAEEO,QAAAA,gBAAgB,EAAEN,MAAM,CAACG,OAF3B;AAGEC,QAAAA,kBAAkB,EAAE;AAHtB;;AAKF,SAAKP,iBAAL;AACE,+BACKE,KADL;AAEEG,QAAAA,WAAW,EAAE,EAFf;AAGEI,QAAAA,gBAAgB,EAAE,IAHpB;AAIEF,QAAAA,kBAAkB,EAAE;AAJtB;;AAMF,SAAKR,uBAAL;AACE,+BACKG,KADL;AAEEK,QAAAA,kBAAkB,EAAE;AAFtB;;AAIF;AACE,aAAOL,KAAP;AA5CJ;AA8CD,CA/CD","sourcesContent":["import {\n  GET_COMPETITION,\n  GET_COMPETITION_GOALS,\n  ADD_COMPETITION,\n  DELETE_COMPETITION,\n  UPDATE_COMPETITION,\n  ADD_USER_TO_COMPETITION,\n  REMOVE_USER_FROM_COMPETITION,\n  ADD_ADMIN_TO_COMPETITION,\n  REMOVE_ADMIN_FROM_COMPETITION,\n  SET_COMPETITION_LOADING,\n  CLEAR_COMPETITION,\n  COMPETITION_ERROR\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_COMPETITION:\n    case ADD_COMPETITION:\n    case UPDATE_COMPETITION:\n    case ADD_USER_TO_COMPETITION:\n    case REMOVE_USER_FROM_COMPETITION:\n    case ADD_ADMIN_TO_COMPETITION:\n    case REMOVE_ADMIN_FROM_COMPETITION:\n      return {\n        ...state,\n        competition: action.payload,\n        competitionLoading: false\n      }\n    case GET_COMPETITION_GOALS:\n      return {\n        ...state,\n        competitionGoals: action.payload,\n        competitionLoading: false\n      }\n    case DELETE_COMPETITION:\n      return {\n        ...state,\n        competition: {},\n        competitionLoading: false\n      }\n    case COMPETITION_ERROR:\n      return {\n        ...state,\n        competitionError: action.payload,\n        competitionLoading: false\n      }\n    case CLEAR_COMPETITION:\n      return {\n        ...state, \n        competition: {},\n        competitionError: null,\n        competitionLoading: true\n      }\n    case SET_COMPETITION_LOADING:\n      return {\n        ...state,\n        competitionLoading: true\n      }\n    default: \n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_USER_GOALS //GET_PUBLIC_GOALS,\n//GET_FRIEND_GOALS,\n, ADD_GOAL, DELETE_GOAL, UPDATE_GOAL, UPDATE_GOAL_TRACKER, SET_CURRENT_GOAL, CLEAR_CURRENT_GOAL, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOAL_ERRORS, CLEAR_GOALS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_USER_GOALS:\n      return _objectSpread({}, state, {\n        goals: action.payload,\n        goalsLoading: false\n      });\n\n    case ADD_GOAL:\n      return _objectSpread({}, state, {\n        goals: [...state.goals, action.payload],\n        goalsLoading: false\n      });\n\n    case DELETE_GOAL:\n      return _objectSpread({}, state, {\n        goals: state.goals.filter(goal => goal._id !== action.payload),\n        goalsLoading: false\n      });\n\n    case UPDATE_GOAL:\n    case UPDATE_GOAL_TRACKER:\n      return _objectSpread({}, state, {\n        goals: state.goals.map(goal => goal._id === action.payload._id ? action.payload : goal),\n        goalsLoading: false\n      });\n\n    case SET_GOAL_LOADING:\n      return _objectSpread({}, state, {\n        goalsLoading: true\n      });\n\n    case GOAL_ERROR:\n      return _objectSpread({}, state, {\n        goalsError: action.payload,\n        goalsLoading: false\n      });\n\n    case CLEAR_GOAL_ERRORS:\n      return _objectSpread({}, state, {\n        goalsError: null\n      });\n\n    case SET_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        goalCurrent: state.goals.find(goal => goal._id === action.payload)\n      });\n\n    case CLEAR_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        goalCurrent: {}\n      });\n\n    case CLEAR_GOALS:\n      return _objectSpread({}, state, {\n        goals: [],\n        goalCurrent: {},\n        goalsError: null,\n        goalsLoading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalReducer.js"],"names":["GET_USER_GOALS","ADD_GOAL","DELETE_GOAL","UPDATE_GOAL","UPDATE_GOAL_TRACKER","SET_CURRENT_GOAL","CLEAR_CURRENT_GOAL","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOAL_ERRORS","CLEAR_GOALS","state","action","type","goals","payload","goalsLoading","filter","goal","_id","map","goalsError","goalCurrent","find"],"mappings":";AAAA,SACEA,cADF,CAEE;AACA;AAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,mBAPF,EAQEC,gBARF,EASEC,kBATF,EAUEC,gBAVF,EAWEC,UAXF,EAYEC,iBAZF,EAaEC,WAbF,QAcO,UAdP;AAgBA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKb,cAAL;AACE,+BACKW,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFhB;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKf,QAAL;AACE,+BACKU,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,OAAxB,CAFT;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKd,WAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYG,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAA/C,CAFT;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKb,WAAL;AACA,SAAKC,mBAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYM,GAAZ,CAAgBF,IAAI,IACzBA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAP,CAAeI,GAA5B,GAAkCP,MAAM,CAACG,OAAzC,GAAmDG,IAD9C,CAFT;AAIIF,QAAAA,YAAY,EAAE;AAJlB;;AAMF,SAAKT,gBAAL;AACE,+BACKI,KADL;AAEEK,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAKR,UAAL;AACE,+BACKG,KADL;AAEEU,QAAAA,UAAU,EAAET,MAAM,CAACG,OAFrB;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKP,iBAAL;AACE,+BACKE,KADL;AAEEU,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKhB,gBAAL;AACE,+BACKM,KADL;AAEEW,QAAAA,WAAW,EAAEX,KAAK,CAACG,KAAN,CAAYS,IAAZ,CAAiBL,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAA7C;AAFf;;AAIF,SAAKT,kBAAL;AACE,+BACKK,KADL;AAEEW,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKZ,WAAL;AACE,+BACKC,KADL;AAEEG,QAAAA,KAAK,EAAE,EAFT;AAGEQ,QAAAA,WAAW,EAAE,EAHf;AAIED,QAAAA,UAAU,EAAE,IAJd;AAKEL,QAAAA,YAAY,EAAE;AALhB;;AAOF;AACE,aAAOL,KAAP;AA9DJ;AAgED,CAjED","sourcesContent":["import {\n  GET_USER_GOALS,\n  //GET_PUBLIC_GOALS,\n  //GET_FRIEND_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  UPDATE_GOAL,\n  UPDATE_GOAL_TRACKER,\n  SET_CURRENT_GOAL,\n  CLEAR_CURRENT_GOAL,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOAL_ERRORS,\n  CLEAR_GOALS\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_USER_GOALS:\n      return {\n        ...state, \n        goals: action.payload,\n        goalsLoading: false\n      }\n    case ADD_GOAL:\n      return {\n        ...state,\n        goals: [...state.goals, action.payload],\n        goalsLoading: false\n      }\n    case DELETE_GOAL:\n      return {\n        ...state,\n        goals: state.goals.filter(goal => goal._id !== action.payload),\n        goalsLoading: false\n      }\n    case UPDATE_GOAL:\n    case UPDATE_GOAL_TRACKER:\n      return {\n        ...state,\n        goals: state.goals.map(goal => \n          goal._id === action.payload._id ? action.payload : goal),\n          goalsLoading: false\n      }\n    case SET_GOAL_LOADING:\n      return {\n        ...state,\n        goalsLoading: true\n      }\n    case GOAL_ERROR:\n      return {\n        ...state,\n        goalsError: action.payload,\n        goalsLoading: false\n      }\n    case CLEAR_GOAL_ERRORS:\n      return {\n        ...state,\n        goalsError: null\n      }\n    case SET_CURRENT_GOAL:\n      return {\n        ...state,\n        goalCurrent: state.goals.find(goal => goal._id === action.payload)\n      }\n    case CLEAR_CURRENT_GOAL:\n      return {\n        ...state,\n        goalCurrent: {}\n      }\n    case CLEAR_GOALS:\n      return { \n        ...state,\n        goals: [],\n        goalCurrent: {},\n        goalsError: null,\n        goalsLoading: true\n      }\n    default: \n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
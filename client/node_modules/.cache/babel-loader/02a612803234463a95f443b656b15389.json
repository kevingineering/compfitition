{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AuthContext from '../../contexts/auth/authContext';\nimport Leaderboard from './Leaderboard';\nimport Participants from './Participants'; // import GoalPassFail from '../goals/GoalPassFail';\n// import GoalTotal from '../goals/GoalTotal';\n// import GoalDifference from '../goals/GoalDifference';\n\nimport moment from 'moment';\n\nconst CompetitionPage = props => {\n  const _useContext = useContext(GoalContext),\n        goalCurrent = _useContext.goalCurrent,\n        clearCurrentGoal = _useContext.clearCurrentGoal,\n        goalsError = _useContext.goalsError,\n        updateGoalTracker = _useContext.updateGoalTracker;\n\n  const _useContext2 = useContext(AlertContext),\n        setAlert = _useContext2.setAlert,\n        clearAlert = _useContext2.clearAlert;\n\n  const _useContext3 = useContext(CompetitionContext),\n        getCompetitionGoals = _useContext3.getCompetitionGoals,\n        getCompetitionParticipants = _useContext3.getCompetitionParticipants,\n        competition = _useContext3.competition,\n        competitionGoals = _useContext3.competitionGoals,\n        competitionParticipants = _useContext3.competitionParticipants,\n        competitionError = _useContext3.competitionError,\n        deleteCompetition = _useContext3.deleteCompetition,\n        clearCompetition = _useContext3.clearCompetition;\n\n  const _useContext4 = useContext(AuthContext),\n        user = _useContext4.user;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        deleteToggle = _useState2[0],\n        setDeleteToggle = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAdmin = _useState4[0],\n        setIsAdmin = _useState4[1];\n\n  const name = goalCurrent.name,\n        type = goalCurrent.type,\n        startDate = goalCurrent.startDate,\n        duration = goalCurrent.duration,\n        compId = goalCurrent.compId;\n  const _id = competition._id,\n        goalId = competition.goalId,\n        adminIds = competition.adminIds,\n        isMax = competition.isMax; //get competition goals and participants\n\n  useEffect(() => {\n    if (Object.entries(competition).length !== 0) {\n      getCompetitionGoals(competition._id);\n      getCompetitionParticipants(competition._id);\n      if (adminIds.includes(user._id)) setIsAdmin(true);\n    } //eslint-disable-next-line\n\n  }, [competition]); //calc time to determine which day of competition we are on\n\n  let time = moment().startOf('day').diff(startDate, 'days'); //handleDelete\n\n  const handleDelete = async () => {\n    await deleteCompetition(_id);\n\n    if (competitionError) {\n      setAlert(competitionError);\n    } else {\n      setAlert('Competition deleted!', true);\n      props.history.push('/');\n      clearCurrentGoal();\n      clearCompetition();\n    }\n  }; // //handleSave - passed down to goal containers\n  // const handleSave = async (record) => {\n  //   await updateGoalTracker(record, _id);\n  //   if (goalsError) {\n  //     setAlert(goalsError);\n  //   }\n  //   else {\n  //     setAlert('Goal saved!');\n  //   }\n  // }\n\n\n  return React.createElement(\"div\", {\n    className: \"grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Participants, {\n    participants: competitionParticipants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Leaderboard, {\n    goals: competitionGoals,\n    time: time,\n    participants: competitionParticipants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, !Object.entries(competition).length ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, name), time <= duration && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/competitionform\",\n    className: \"btn btn-primary btn-block center\",\n    onClick: clearAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Modify Competition\")), !deleteToggle && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => setDeleteToggle(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Delete Competition\")), deleteToggle && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"alert lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Are you sure you want to delete this competition? This will affect multiple users, and deletions cannot be undone.\"), React.createElement(\"button\", {\n    className: \"btn btn-danger btn-split\",\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Yes\"), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-split\",\n    onClick: () => setDeleteToggle(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"No\")))));\n};\n\nexport default CompetitionPage;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js"],"names":["React","useContext","useState","useEffect","Link","GoalContext","AlertContext","CompetitionContext","AuthContext","Leaderboard","Participants","moment","CompetitionPage","props","goalCurrent","clearCurrentGoal","goalsError","updateGoalTracker","setAlert","clearAlert","getCompetitionGoals","getCompetitionParticipants","competition","competitionGoals","competitionParticipants","competitionError","deleteCompetition","clearCompetition","user","deleteToggle","setDeleteToggle","isAdmin","setIsAdmin","name","type","startDate","duration","compId","_id","goalId","adminIds","isMax","Object","entries","length","includes","time","startOf","diff","handleDelete","history","push"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AuthContext from '../../contexts/auth/authContext';\nimport Leaderboard from './Leaderboard';\nimport Participants from './Participants';\n// import GoalPassFail from '../goals/GoalPassFail';\n// import GoalTotal from '../goals/GoalTotal';\n// import GoalDifference from '../goals/GoalDifference';\nimport moment from 'moment';\n\nconst CompetitionPage = props => {\n  const { \n    goalCurrent, \n    clearCurrentGoal, \n    goalsError, \n    updateGoalTracker \n  } = useContext(GoalContext);\n\n  const { \n    setAlert, \n    clearAlert \n  } = useContext(AlertContext);\n\n  const { \n    getCompetitionGoals, \n    getCompetitionParticipants, \n    competition, \n    competitionGoals, \n    competitionParticipants, \n    competitionError, \n    deleteCompetition, \n    clearCompetition \n  } = useContext(CompetitionContext);\n\n  const { user } = useContext(AuthContext);\n\n  const [deleteToggle, setDeleteToggle] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const { name, type, startDate, duration, compId } = goalCurrent;\n  const { _id, goalId, adminIds, isMax } = competition;\n\n  //get competition goals and participants\n  useEffect(() => {\n    if(Object.entries(competition).length !== 0) {\n      getCompetitionGoals(competition._id);\n      getCompetitionParticipants(competition._id);\n      if(adminIds.includes(user._id))\n        setIsAdmin(true);\n    }\n    //eslint-disable-next-line\n  }, [competition])\n\n  //calc time to determine which day of competition we are on\n  let time = moment().startOf('day').diff(startDate, 'days');\n\n\n  //handleDelete\n  const handleDelete = async () => {\n    await deleteCompetition(_id);\n    if (competitionError) {\n      setAlert(competitionError);\n    }\n    else {\n      setAlert('Competition deleted!', true);\n      props.history.push('/');\n      clearCurrentGoal();\n      clearCompetition();\n    }\n  };\n\n  // //handleSave - passed down to goal containers\n  // const handleSave = async (record) => {\n  //   await updateGoalTracker(record, _id);\n  //   if (goalsError) {\n  //     setAlert(goalsError);\n  //   }\n  //   else {\n  //     setAlert('Goal saved!');\n  //   }\n  // }\n\n  return (\n    <div className='grid-2'>\n      <Participants \n        participants={competitionParticipants} \n      />\n      <Leaderboard \n        goals={competitionGoals} \n        time={time}\n        participants={competitionParticipants}  \n      />\n      <div className='form-container'>\n      {!Object.entries(competition).length ? (\n        <h2>Loading...</h2>\n      ) : (\n        <React.Fragment>\n          <h2 className='collection-header'>{name}</h2>\n          {/* Goal Container */}\n          {/* Modify Button */}\n          {time <= duration &&\n            <React.Fragment>\n              <Link \n                to='/competitionform' \n                className='btn btn-primary btn-block center' \n                onClick={clearAlert}\n              >\n                Modify Competition\n              </Link>\n            </React.Fragment>\n          }\n          {/* Delete Button */}\n          {!deleteToggle &&\n          <React.Fragment>\n            <p className='lr-border'/>\n            <button \n              className='btn btn-primary btn-block' \n              onClick={() => setDeleteToggle(true)}\n            >\n              Delete Competition\n            </button>\n          </React.Fragment>\n        }        \n        {/*Delete module*/}\n        {deleteToggle && (\n          <React.Fragment>\n            <hr/>\n            <span className='alert lr-border'>\n              Are you sure you want to delete this competition? This will affect multiple users, and deletions cannot be undone.\n            </span>\n            <button\n              className='btn btn-danger btn-split'\n              onClick={handleDelete}\n            >Yes</button>\n            <button\n              className='btn btn-primary btn-split'\n              onClick={() => setDeleteToggle(false)}\n            >No</button>\n          </React.Fragment>\n        )}\n        </React.Fragment>\n      )}\n    </div>\n    </div>\n  )\n}\n\nexport default CompetitionPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport { GET_USER_GOALS //GET_PUBLIC_GOALS,\n//GET_FRIEND_GOALS,\n, ADD_GOAL, DELETE_GOAL, UPDATE_GOAL, UPDATE_GOAL_TRACKER, SET_CURRENT_GOAL, CLEAR_CURRENT_GOAL, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOAL_ERRORS, CLEAR_GOALS } from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goalsOfUser: [],\n    goalsOfPublic: [],\n    goalsOfFriends: [],\n    goalCurrent: {},\n    goalsError: null,\n    goalsLoading: true\n  };\n\n  const _useReducer = useReducer(GoalReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //set headers for addGoal, updateGoal, and updateGoalTracker\n\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //get user goals\n\n  const getUserGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/goals');\n      dispatch({\n        type: GET_USER_GOALS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //TODO get public goals\n\n\n  const getPublicGoals = async () => {}; //TODO get friend goals\n\n\n  const getFriendGoals = async () => {}; //add goal\n\n\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/goals', goal, config);\n      dispatch({\n        type: ADD_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //delete goal\n\n\n  const deleteGoal = async _id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/goals/${_id}`);\n      dispatch({\n        type: DELETE_GOAL,\n        payload: _id\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //update goal\n\n\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/${goal._id}`, goal, config);\n      dispatch({\n        type: UPDATE_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //update goal tracker\n\n\n  const updateGoalTracker = async (tracker, _id) => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/tracker/${_id}`, {\n        tracker\n      }, config);\n      dispatch({\n        type: UPDATE_GOAL_TRACKER,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //set loading\n\n\n  const setLoading = () => {\n    return {\n      type: SET_GOAL_LOADING\n    };\n  }; //clear errors\n\n\n  const clearGoalErrors = () => {\n    dispatch({\n      type: CLEAR_GOAL_ERRORS\n    });\n  }; //set current\n\n\n  const setCurrentGoal = _id => {\n    dispatch({\n      type: SET_CURRENT_GOAL,\n      payload: _id\n    });\n  }; //clear current\n\n\n  const clearCurrentGoal = () => {\n    dispatch({\n      type: CLEAR_CURRENT_GOAL\n    });\n  }; //clear goals\n\n\n  const clearGoals = () => {\n    dispatch({\n      type: CLEAR_GOALS\n    });\n  };\n\n  return React.createElement(GoalContext.Provider, {\n    value: {\n      goalsOfUser: state.goalsOfUser,\n      goalsOfPublic: state.goalsOfPublic,\n      goalsOfFriends: state.goalsOfFriends,\n      goalCurrent: state.goalCurrent,\n      goalsError: state.goalsError,\n      goalsLoading: state.goalsLoading,\n      getUserGoals,\n      getPublicGoals,\n      getFriendGoals,\n      addGoal,\n      deleteGoal,\n      updateGoal,\n      updateGoalTracker,\n      clearGoalErrors,\n      setCurrentGoal,\n      clearCurrentGoal,\n      clearGoals\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GoalState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js"],"names":["React","useReducer","axios","GoalContext","GoalReducer","GET_USER_GOALS","ADD_GOAL","DELETE_GOAL","UPDATE_GOAL","UPDATE_GOAL_TRACKER","SET_CURRENT_GOAL","CLEAR_CURRENT_GOAL","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOAL_ERRORS","CLEAR_GOALS","GoalState","props","initialState","goalsOfUser","goalsOfPublic","goalsOfFriends","goalCurrent","goalsError","goalsLoading","state","dispatch","config","headers","getUserGoals","setLoading","res","get","type","payload","data","err","response","msg","getPublicGoals","getFriendGoals","addGoal","goal","post","deleteGoal","_id","delete","updateGoal","put","updateGoalTracker","tracker","clearGoalErrors","setCurrentGoal","clearCurrentGoal","clearGoals","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport {\n  GET_USER_GOALS,\n  //GET_PUBLIC_GOALS,\n  //GET_FRIEND_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  UPDATE_GOAL,\n  UPDATE_GOAL_TRACKER,\n  SET_CURRENT_GOAL,\n  CLEAR_CURRENT_GOAL,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOAL_ERRORS,\n  CLEAR_GOALS\n} from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goalsOfUser: [],\n    goalsOfPublic: [],\n    goalsOfFriends: [],\n    goalCurrent: {},\n    goalsError: null,\n    goalsLoading: true\n  };\n\n  const [state, dispatch] = useReducer(GoalReducer, initialState);\n\n  //set headers for addGoal, updateGoal, and updateGoalTracker\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  //get user goals\n  const getUserGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/goals');\n      dispatch({ type: GET_USER_GOALS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //TODO get public goals\n  const getPublicGoals = async () => {\n    \n  };\n\n  //TODO get friend goals\n  const getFriendGoals = async () => {\n\n  };\n\n  //add goal\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/goals', goal, config);\n      dispatch({ type: ADD_GOAL, payload: res.data});\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //delete goal\n  const deleteGoal = async _id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/goals/${_id}`);\n      dispatch({ type: DELETE_GOAL, payload: _id });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //update goal\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/${goal._id}`, goal, config);\n      dispatch({ type: UPDATE_GOAL, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //update goal tracker\n  const updateGoalTracker = async (tracker, _id) => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/tracker/${_id}`, {tracker}, config);\n      dispatch({ type: UPDATE_GOAL_TRACKER, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  }\n  //set loading\n  const setLoading = () => {\n    return { type: SET_GOAL_LOADING }\n  };\n\n  //clear errors\n  const clearGoalErrors = () => {\n    dispatch({ type: CLEAR_GOAL_ERRORS });\n  };\n\n  //set current\n  const setCurrentGoal = _id => {\n    dispatch({ type: SET_CURRENT_GOAL, payload: _id });\n  };\n\n  //clear current\n  const clearCurrentGoal = () => {\n    dispatch({ type: CLEAR_CURRENT_GOAL });\n  };\n\n  //clear goals\n  const clearGoals = () => {\n    dispatch({ type: CLEAR_GOALS });\n  };\n\n  return (\n    <GoalContext.Provider\n    value={{\n      goalsOfUser: state.goalsOfUser,\n      goalsOfPublic: state.goalsOfPublic,\n      goalsOfFriends: state.goalsOfFriends,\n      goalCurrent: state.goalCurrent,\n      goalsError: state.goalsError,\n      goalsLoading: state.goalsLoading,\n      getUserGoals,\n      getPublicGoals,\n      getFriendGoals,\n      addGoal,\n      deleteGoal,\n      updateGoal,\n      updateGoalTracker,\n      clearGoalErrors,\n      setCurrentGoal,\n      clearCurrentGoal,\n      clearGoals\n    }}>\n      {props.children}\n    </GoalContext.Provider>\n  )\n};\n\nexport default GoalState;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchItem.js\";\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport userimg from '../../resources/userimg.png';\nimport PropTypes from 'prop-types';\nimport RequestContext from '../../contexts/requests/requestContext';\nimport FriendContext from '../../contexts/friends/friendContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst SearchItem = ({\n  status,\n  user: {\n    firstName,\n    lastName,\n    email,\n    _id\n  }\n}) => {\n  const requestContext = useContext(RequestContext);\n  const addRequest = requestContext.addRequest,\n        deleteRequest = requestContext.deleteRequest;\n  const friendContext = useContext(FriendContext);\n  const addFriend = friendContext.addFriend,\n        setCurrentFriend = friendContext.setCurrentFriend;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert; //configure button(s) based on status\n\n  let buttonMsg = 'Send Friend Request';\n  let buttonClass = 'btn-caution';\n\n  if (status === 'friend') {\n    buttonMsg = 'Your Friend';\n    buttonClass = 'btn-success';\n  } else if (status === 'received') {\n    buttonMsg = 'Accept Request';\n    buttonClass = 'btn-success';\n  } else if (status === 'sent') {\n    buttonMsg = 'Request Pending...';\n    buttonClass = 'btn-blue';\n  }\n\n  const handleClick = e => {\n    if (status === 'stranger') {\n      addRequest(_id);\n    } else if (status === 'friend') {//go to page\n    } else if (status === 'received' && e.target.name === 'btn1') {//accept request\n    } else if (status === 'received' && e.target.name === 'btn2') {//reject request\n    } else if (status === 'sent') {//delete request\n    }\n  };\n\n  const avatar = null;\n  return React.createElement(\"li\", {\n    className: \"search-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"search-link\",\n    onClick: handleClick,\n    to: `/friend/${_id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar !== null ? avatar : userimg,\n    alt: firstName.charAt(0),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"search-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, firstName, \" \", lastName), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"search-email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, email)), React.createElement(\"button\", {\n    className: `search-btn ${buttonClass}`,\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, buttonMsg)));\n};\n\nSearchItem.propTypes = {\n  user: PropTypes.object.isRequired,\n  friendIds: PropTypes.array.isRequired\n};\nexport default SearchItem;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchItem.js"],"names":["React","useState","useContext","Link","userimg","PropTypes","RequestContext","FriendContext","AlertContext","SearchItem","status","user","firstName","lastName","email","_id","requestContext","addRequest","deleteRequest","friendContext","addFriend","setCurrentFriend","alertContext","setAlert","buttonMsg","buttonClass","handleClick","e","target","name","avatar","charAt","propTypes","object","isRequired","friendIds","array"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport userimg from '../../resources/userimg.png';\nimport PropTypes from 'prop-types';\nimport RequestContext from '../../contexts/requests/requestContext';\nimport FriendContext from '../../contexts/friends/friendContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst SearchItem = ({status, user: {firstName, lastName, email, _id}}) => {\n\n  const requestContext = useContext(RequestContext);\n  const { addRequest, deleteRequest } = requestContext;\n\n  const friendContext = useContext(FriendContext);\n  const { addFriend, setCurrentFriend } = friendContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  //configure button(s) based on status\n  let buttonMsg = 'Send Friend Request';\n  let buttonClass = 'btn-caution';\n  \n  if (status === 'friend') {\n    buttonMsg = 'Your Friend';\n    buttonClass = 'btn-success';\n  } else if (status === 'received') {\n    buttonMsg = 'Accept Request';\n    buttonClass = 'btn-success';\n  } else if (status === 'sent') {\n    buttonMsg = 'Request Pending...';\n    buttonClass = 'btn-blue';\n  }\n\n\n  const handleClick = e => {\n    if (status === 'stranger') {\n      addRequest(_id);\n    } else if (status === 'friend') {\n      //go to page\n    } else if (status === 'received' && e.target.name === 'btn1') {\n      //accept request\n    } else if (status === 'received' && e.target.name === 'btn2') {\n      //reject request\n    } else if (status === 'sent') {\n      //delete request\n    }\n  }\n  \n  const avatar = null;\n\n  return (\n    <li className='search-item'>\n      <Link className='search-link' onClick={handleClick} to={`/friend/${_id}`}>\n        <div className=\"flex\">\n          <img\n            src={avatar !== null ? avatar : userimg}\n            alt={firstName.charAt(0)}\n          />\n        </div>\n        <div className='search-container'>\n          <span className='search-name'>{firstName} {lastName}</span>\n          <br/>\n          <span className='search-email'>{email}</span>\n        </div>\n        <button\n          className={`search-btn ${buttonClass}`}\n          onClick={handleClick}\n        >\n          {buttonMsg}\n        </button>\n      </Link>\n    </li>\n  );\n};\n\nSearchItem.propTypes = {\n  user: PropTypes.object.isRequired,\n  friendIds: PropTypes.array.isRequired\n};\n\nexport default SearchItem;"]},"metadata":{},"sourceType":"module"}
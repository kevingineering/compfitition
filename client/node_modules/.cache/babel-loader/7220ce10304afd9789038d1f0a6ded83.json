{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment'; //import AlertContext from '../../contexts/alerts/alertContext';\n\nimport GoalChart from './GoalChart';\nimport { round } from 'mathjs';\n\nconst GoalTotal = ({\n  handleSave,\n  current: {\n    duration,\n    startDate,\n    units,\n    total,\n    compId,\n    tracker\n  }\n}) => {\n  //const alertContext = useContext(AlertContext);\n  //const {setAlert, clearAlerts} = alertContext;\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  let runningTotal = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    runningTotal += record[i];\n  }\n\n  useEffect(() => {\n    setRecord(record.map(value => {\n      if (value === null) {\n        value = 0;\n      }\n\n      return value;\n    })); //eslint-disable-next-line\n  }, []);\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration) time = duration;\n\n  const _useState3 = useState(record[time]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        today = _useState4[0],\n        setToday = _useState4[1];\n\n  const _useState5 = useState(record[time]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        yesterday = _useState6[0],\n        setYesterday = _useState6[1];\n\n  const handleChange = e => {\n    if (e.target.name === 'today') {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          value = e.target.value;\n        } else return value;\n      }));\n    } else {\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          value = e.target.name;\n        } else return value;\n      }));\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(GoalChart, {\n    duration: duration,\n    units: units,\n    total: total,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Today:\", React.createElement(\"input\", {\n    type: \"number\",\n    value: today,\n    name: \"today\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), units), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Total: \", runningTotal, \" \", units), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Day: \", time, \" / \", duration))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"You are \", round(runningTotal / total * 100), \"% finished with your goal.\")), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Save Goal\"));\n};\n\nexport default GoalTotal;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js"],"names":["React","useState","useContext","useEffect","moment","GoalChart","round","GoalTotal","handleSave","current","duration","startDate","units","total","compId","tracker","record","setRecord","runningTotal","i","length","map","value","time","startOf","diff","today","setToday","yesterday","setYesterday","handleChange","e","target","name","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\n//import AlertContext from '../../contexts/alerts/alertContext';\nimport GoalChart from './GoalChart';\nimport { round } from 'mathjs';\n\nconst GoalTotal = ({handleSave, current: { duration, startDate, units, total, compId, tracker }}) => {\n  //const alertContext = useContext(AlertContext);\n  //const {setAlert, clearAlerts} = alertContext;\n\n  const [record, setRecord] = useState(tracker);\n\n  let runningTotal = 0;\n\n  for (let i = 0; i < record.length; i++ ) {\n    runningTotal += record[i];\n  }\n\n  useEffect(() => {\n    setRecord(record.map(value => {\n      if (value === null) {\n        value = 0;\n      }\n      return value;\n    }));\n    //eslint-disable-next-line\n  }, []);\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration)\n    time = duration;\n\n  const [today, setToday] = useState(record[time]);\n  const [yesterday, setYesterday] = useState(record[time]);\n\n  const handleChange = e => {\n    if(e.target.name === 'today') {\n      setToday(e.target.value);\n      setRecord(record.map((value, index) => {\n        if (index === time) {\n          value = e.target.value;\n        }\n        else return value;\n      }));\n    } else {\n      setRecord(record.map((value, index) => {\n        if (index === time - 1) {\n          value = e.target.name;\n        }\n        else return value;\n      }))\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <ul>\n        <GoalChart duration={duration} units={units} total={total} record={record} time={time}/>\n        <li className='table-info lr-border'>Today: \n          <input type='number' value={today} name='today' onChange={handleChange}/>\n          {units}\n        </li>\n        <li className='table-info lr-border'>\n          <div className='space-between'>\n            <span>\n              Total: {runningTotal} {units}\n            </span>\n            <span>\n              Day: {time} / {duration}\n            </span>\n          </div>\n        </li>        \n        <li className='table-info lr-border'>Goal: {total} {units}</li>\n        <li className='table-info lr-border'>You are {round(runningTotal / total * 100)}% finished with your goal.</li>\n      </ul>\n      <button className='btn btn-primary btn-block' onClick={() => handleSave(record)}>\n        Save Goal\n      </button>\n    </React.Fragment>\n  )\n}\n\nexport default GoalTotal;"]},"metadata":{},"sourceType":"module"}
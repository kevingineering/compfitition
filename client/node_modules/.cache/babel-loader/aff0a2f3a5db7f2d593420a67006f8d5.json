{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js\";\nimport React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\nimport GoalButtons from './goalPieces/GoalButtons';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport GoalContext from '../../contexts/goals/goalContext';\n\nconst GoalDifference = ({\n  isOwner,\n  time,\n  isStarted\n}) => {\n  const _useContext = useContext(GoalContext),\n        goalCurrent = _useContext.goalCurrent,\n        goalsError = _useContext.goalsError,\n        updateGoalTracker = _useContext.updateGoalTracker;\n\n  const _useContext2 = useContext(AlertContext),\n        setAlert = _useContext2.setAlert;\n\n  const duration = goalCurrent.duration,\n        startDate = goalCurrent.startDate,\n        units = goalCurrent.units,\n        total = goalCurrent.total,\n        tracker = goalCurrent.tracker,\n        type = goalCurrent.type,\n        _id = goalCurrent._id;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1]; //calc change to date\n\n\n  let temp = record.filter(value => value !== null);\n  let value = temp.pop() - record[0];\n\n  const handleSave = async record => {\n    await updateGoalTracker(record, _id);\n\n    if (goalsError) {\n      setAlert(goalsError);\n    } else {\n      setAlert('Goal saved!');\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, isStarted ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(GoalChartDifference, {\n    duration: duration,\n    units: units,\n    total: total,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), time !== duration && isOwner && React.createElement(GoalProgress, {\n    type: type,\n    time: time,\n    record: record,\n    setRecord: setRecord,\n    units: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(GoalInfo, {\n    goal: goalCurrent,\n    record: record,\n    time: time,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Start: \", record[0], \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Duration: \", duration, \" days\")))), React.createElement(GoalButtons, {\n    isActive: time <= duration,\n    handleSave: handleSave,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalDifference;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalDifference.js"],"names":["React","useState","useContext","moment","GoalChartDifference","PropTypes","GoalProgress","GoalInfo","GoalButtons","AlertContext","GoalContext","GoalDifference","isOwner","time","isStarted","goalCurrent","goalsError","updateGoalTracker","setAlert","duration","startDate","units","total","tracker","type","_id","record","setRecord","temp","filter","value","pop","handleSave","utc","format","propTypes","func","goal","object","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AAAA,sBAEEZ,UAAU,CAACQ,WAAD,CAFZ;AAAA,QAE7CK,WAF6C,eAE7CA,WAF6C;AAAA,QAEhCC,UAFgC,eAEhCA,UAFgC;AAAA,QAEpBC,iBAFoB,eAEpBA,iBAFoB;;AAAA,uBAIhCf,UAAU,CAACO,YAAD,CAJsB;AAAA,QAI7CS,QAJ6C,gBAI7CA,QAJ6C;;AAAA,QAM7CC,QAN6C,GAMaJ,WANb,CAM7CI,QAN6C;AAAA,QAMnCC,SANmC,GAMaL,WANb,CAMnCK,SANmC;AAAA,QAMxBC,KANwB,GAMaN,WANb,CAMxBM,KANwB;AAAA,QAMjBC,KANiB,GAMaP,WANb,CAMjBO,KANiB;AAAA,QAMVC,OANU,GAMaR,WANb,CAMVQ,OANU;AAAA,QAMDC,IANC,GAMaT,WANb,CAMDS,IANC;AAAA,QAMKC,GANL,GAMaV,WANb,CAMKU,GANL;;AAAA,oBAQzBxB,QAAQ,CAACsB,OAAD,CARiB;AAAA;AAAA,QAQ9CG,MAR8C;AAAA,QAQtCC,SARsC,kBAUrD;;;AACA,MAAIC,IAAI,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAK,IAAIA,KAAK,KAAK,IAAjC,CAAX;AACA,MAAIA,KAAK,GAAGF,IAAI,CAACG,GAAL,KAAaL,MAAM,CAAC,CAAD,CAA/B;;AAEA,QAAMM,UAAU,GAAG,MAAON,MAAP,IAAkB;AACnC,UAAMT,iBAAiB,CAACS,MAAD,EAASD,GAAT,CAAvB;;AACA,QAAIT,UAAJ,EAAgB;AACdE,MAAAA,QAAQ,CAACF,UAAD,CAAR;AACD,KAFD,MAGK;AACHE,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACD;AACF,GARD;;AAUA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,SAAS,GACR,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AACE,IAAA,QAAQ,EAAEK,QADZ;AAEE,IAAA,KAAK,EAAEE,KAFT;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,MAAM,EAAEI,MAJV;AAKE,IAAA,IAAI,EAAEb,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGA,IAAI,KAAKM,QAAT,IAAqBP,OAArB,IACC,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEY,IADR;AAEE,IAAA,IAAI,EAAEX,IAFR;AAGE,IAAA,MAAM,EAAEa,MAHV;AAIE,IAAA,SAAS,EAAEC,SAJb;AAKE,IAAA,KAAK,EAAEN,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAiBE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEN,WADR;AAEE,IAAA,MAAM,EAAEW,MAFV;AAGE,IAAA,IAAI,EAAEb,IAHR;AAIE,IAAA,KAAK,EAAEiB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,EA0BIjB,IAAI,KAAKM,QAAT,IAAqBP,OAArB,IACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2BADZ;AAEE,IAAA,OAAO,EAAE,MAAMoB,UAAU,CAACN,MAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAOE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CA3BJ,CADQ,GAwCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUA,MAAM,CAAC,CAAD,CADhB,OACsBL,KADtB,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUlB,MAAM,CAAC8B,GAAP,CAAWb,SAAX,EAAsBc,MAAtB,CAA6B,QAA7B,CADV,CAJF,CADF,CAFF,EAYE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSZ,KADT,OACiBD,KADjB,CADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaF,QADb,UAJF,CADF,CAZF,CAzCJ,EAiEE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEN,IAAI,IAAIM,QADpB;AAEE,IAAA,UAAU,EAAEa,UAFd;AAGE,IAAA,OAAO,EAAEpB,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjEF,CADF;AAyED,CAjGD;;AAmGAD,cAAc,CAACwB,SAAf,GAA2B;AACzBH,EAAAA,UAAU,EAAE3B,SAAS,CAAC+B,IADG;AAEzBC,EAAAA,IAAI,EAAEhC,SAAS,CAACiC,MAAV,CAAiBC,UAFE;AAGzB3B,EAAAA,OAAO,EAAEP,SAAS,CAACmC,IAAV,CAAeD;AAHC,CAA3B;AAMA,eAAe5B,cAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport GoalChartDifference from './GoalChartDifference';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\nimport GoalButtons from './goalPieces/GoalButtons';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport GoalContext from '../../contexts/goals/goalContext';\n\nconst GoalDifference = ({isOwner, time, isStarted}) => {\n  \n  const { goalCurrent, goalsError, updateGoalTracker } = useContext(GoalContext);\n\n  const { setAlert } = useContext(AlertContext);\n\n  const { duration, startDate, units, total, tracker, type, _id } = goalCurrent;\n  \n  const [record, setRecord] = useState(tracker);\n\n  //calc change to date\n  let temp = record.filter(value => value !== null)\n  let value = temp.pop() - record[0];\n\n  const handleSave = async (record) => {\n    await updateGoalTracker(record, _id);\n    if (goalsError) {\n      setAlert(goalsError);\n    }\n    else {\n      setAlert('Goal saved!');\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {isStarted ? (\n        <React.Fragment>\n          <ul>\n            <GoalChartDifference \n              duration={duration} \n              units={units} \n              total={total} \n              record={record} \n              time={time}\n            />\n            {time !== duration && isOwner && \n              <GoalProgress \n                type={type}\n                time={time}\n                record={record}\n                setRecord={setRecord}\n                units={units}\n              />\n            }\n            <GoalInfo \n              goal={goalCurrent}\n              record={record}\n              time={time}\n              value={value}\n            />\n          </ul>\n          {/* SaveButton */}\n          { time !== duration && isOwner &&\n            <React.Fragment>\n              <button \n                className='btn btn-primary btn-block' \n                onClick={() => handleSave(record)}\n              >\n                Save Goal\n              </button>\n              <p className='lr-border' />\n            </React.Fragment>\n          }\n        </React.Fragment>\n      ) : (\n        <ul>\n          {/* Info */}\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Start: {record[0]} {units}\n              </span>\n              <span className='right'>\n                Begins {moment.utc(startDate).format('MMM Do')}\n              </span>\n            </div>\n          </li>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Goal: {total} {units}\n              </span>\n              <span className='right'>\n                Duration: {duration} days\n              </span>\n            </div>\n          </li>\n        </ul>\n      )}\n      <GoalButtons \n        isActive={time <= duration} \n        handleSave={handleSave}\n        isOwner={isOwner}\n      />\n    </React.Fragment>\n  )\n};\n\nGoalDifference.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\n\nexport default GoalDifference;"]},"metadata":{},"sourceType":"module"}
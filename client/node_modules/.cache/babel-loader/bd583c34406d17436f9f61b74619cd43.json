{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/comptable/CompChartTotal.js\";\nimport React, { useContext } from 'react';\nimport Chart from 'react-google-charts';\nimport CompetitionContext from '../../../contexts/competitions/competitionContext';\n\nconst CompChartTotal = ({\n  time,\n  units\n}) => {\n  const _useContext = useContext(CompetitionContext),\n        competitionGoals = _useContext.competitionGoals,\n        competitionParticipants = _useContext.competitionParticipants;\n\n  let userGoals = [];\n\n  if (competitionGoals.length !== 0 && competitionParticipants.length !== 0) {\n    userGoals = competitionGoals.map(goal => {\n      let user = competitionParticipants.find(user => user._id === goal.user);\n      let name = user.alias ? user.alias : user.firstName;\n      return {\n        name,\n        tracker: goal.tracker\n      };\n    });\n  }\n\n  console.log('UserGoals: ', userGoals); //format data array and configure tooltip\n\n  let dataPointsZero = ['x'];\n  let dataPointsOne = [0];\n\n  for (let i = 0; i < userGoals.length; i++) {\n    dataPointsZero.push(userGoals[i].name, {\n      role: 'tooltip',\n      type: 'string',\n      p: {\n        html: true\n      }\n    });\n    dataPointsOne.push(0, 'Start');\n  }\n\n  console.log('Zero: ', dataPointsZero);\n  console.log('One: ', dataPointsOne); //for (let i = 0, i <= competitionParticipants; )\n\n  const dataPoints = [['x', 'Daily', {\n    role: 'tooltip',\n    type: 'string',\n    p: {\n      html: true\n    }\n  }, 'Total', {\n    role: 'tooltip',\n    type: 'string',\n    p: {\n      html: true\n    }\n  }], [0, 0, 'Start', 0, 'Start']]; // //populate data array\n  // let runningTotal = 0;\n  // for (let i = 0; i <= time; i++) {\n  //   runningTotal += record[i]\n  //   dataPoints.push([\n  //     i + 1, \n  //     record[i], \n  //     `Day ${i + 1} \\n Daily: ${record[i]} ${units}`,\n  //     runningTotal, \n  //     `Day ${i + 1} \\n Total: ${runningTotal} ${units}`\n  //   ]);\n  // }\n\n  return React.createElement(\"div\", {\n    className: \"border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    chartType: \"LineChart\",\n    loader: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Loading Chart\"),\n    data: dataPoints,\n    options: {\n      chartArea: {\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%'\n      },\n      axisTitlesPosition: 'none',\n      hAxis: {\n        textPosition: 'none',\n        baselineColor: 'none',\n        gridlines: {\n          color: 'transparent'\n        },\n        viewWindow: {\n          min: 0\n        }\n      },\n      legend: {\n        position: 'in'\n      },\n      vAxis: {\n        textPosition: 'none',\n        baselineColor: 'none'\n      },\n      titlePosition: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default CompChartTotal;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/comptable/CompChartTotal.js"],"names":["React","useContext","Chart","CompetitionContext","CompChartTotal","time","units","competitionGoals","competitionParticipants","userGoals","length","map","goal","user","find","_id","name","alias","firstName","tracker","console","log","dataPointsZero","dataPointsOne","i","push","role","type","p","html","dataPoints","chartArea","left","top","width","height","axisTitlesPosition","hAxis","textPosition","baselineColor","gridlines","color","viewWindow","min","legend","position","vAxis","titlePosition"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Chart from 'react-google-charts';\nimport CompetitionContext from '../../../contexts/competitions/competitionContext';\n\nconst CompChartTotal = ({time, units}) => {\n\n  const { \n    competitionGoals, \n    competitionParticipants,\n  } = useContext(CompetitionContext);\n\n  let userGoals = [];\n  \n  if (competitionGoals.length !== 0 && competitionParticipants.length !== 0) {\n    userGoals = competitionGoals.map(goal => {\n      let user = competitionParticipants.find(user => user._id === goal.user);\n      let name = user.alias ? user.alias : user.firstName;\n      return {name, tracker: goal.tracker}\n    })\n  }\n\n  console.log('UserGoals: ', userGoals);\n  //format data array and configure tooltip\n  \n  let dataPointsZero = ['x'];\n  let dataPointsOne = [0];\n\n  for (let i = 0; i < userGoals.length; i++) {\n    dataPointsZero.push(\n      userGoals[i].name, \n      { role: 'tooltip', type: 'string', p: { html: true }}\n    )\n    dataPointsOne.push(\n      0, 'Start'\n    )\n  }\n\n  console.log('Zero: ', dataPointsZero);\n  console.log('One: ', dataPointsOne);\n\n  //for (let i = 0, i <= competitionParticipants; )\n\n\n  const dataPoints = [[\n    'x', \n    'Daily', \n    { role: 'tooltip', type: 'string', p: { html: true }},\n    'Total', \n    { role: 'tooltip', type: 'string', p: { html: true }}\n  ], [\n    0, 0, 'Start', 0, 'Start'\n  ]];\n\n\n  // //populate data array\n  // let runningTotal = 0;\n  // for (let i = 0; i <= time; i++) {\n  //   runningTotal += record[i]\n  //   dataPoints.push([\n  //     i + 1, \n  //     record[i], \n  //     `Day ${i + 1} \\n Daily: ${record[i]} ${units}`,\n  //     runningTotal, \n  //     `Day ${i + 1} \\n Total: ${runningTotal} ${units}`\n  //   ]);\n  // }\n  \n  return (\n    <div className='border'>\n      <Chart\n        chartType=\"LineChart\"\n        loader={<div>Loading Chart</div>}\n        data={dataPoints}\n        options={{\n          chartArea: {\n            left: 0,\n            top: 0,\n            width: '100%',\n            height: '100%',\n          },\n          axisTitlesPosition: 'none',\n          hAxis: {\n            textPosition: 'none',\n            baselineColor: 'none',\n            gridlines: {\n              color: 'transparent'\n            },\n            viewWindow: {\n              min: 0\n            }\n          },\n          legend: {\n            position: 'in'\n          },\n          vAxis: {\n            textPosition: 'none',\n            baselineColor: 'none',\n          },\n          titlePosition: 'none',\n        }}\n      />\n    </div>\n  )\n}\n\nexport default CompChartTotal\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/Leaderboard.js\";\nimport React from 'react';\nimport LeaderboardItem from './LeaderboardItem';\n\nconst Leaderboard = ({\n  goals,\n  time,\n  participants,\n  type\n}) => {\n  let leaderboardList = '';\n\n  if (participants.length === 0 || goals.length === 0) {\n    leaderboardList = React.createElement(\"li\", {\n      className: \"collection-item center collection-item-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Loading...\");\n  } else {\n    let scoredGoals = goals.map(goal => {\n      //calc progress\n      const tracker = goal.tracker;\n      let count = 0;\n\n      if (type === 'pass/fail') {\n        for (let i = 0; i < tracker.length; i++) {\n          if (tracker[i]) count++;\n        }\n      } else if (type === 'total') {\n        for (let i = 0; i < tracker.length; i++) {\n          count += tracker[i];\n        }\n      } else {\n        let temp = tracker.filter(value => value !== null);\n        count = temp.pop() - tracker[0];\n      }\n\n      let temp = participants.find(user => user._id === goal.user);\n      let name = temp.alias ? temp.alias : temp.firstName;\n      return [{\n        name: name\n      }, {\n        count: count\n      }, {\n        _id: goal._id\n      }];\n    });\n    console.log(scoredGoals);\n    leaderboardList = scoredGoals.map(goal => {\n      return React.createElement(LeaderboardItem, {\n        name: goal.name,\n        count: goal.count,\n        type: type,\n        key: goal._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"competition-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Leaderboard\")), leaderboardList, React.createElement(\"p\", {\n    className: \"lrb-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n};\n\nexport default Leaderboard;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/Leaderboard.js"],"names":["React","LeaderboardItem","Leaderboard","goals","time","participants","type","leaderboardList","length","scoredGoals","map","goal","tracker","count","i","temp","filter","value","pop","find","user","_id","name","alias","firstName","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport LeaderboardItem from './LeaderboardItem'\n\nconst Leaderboard = ({goals, time, participants, type}) => {\n\n  let leaderboardList = '';\n  \n  if(participants.length === 0 || goals.length === 0) {\n    leaderboardList = (\n      <li className='collection-item center collection-item-block'>\n        Loading...\n      </li>\n    )\n  }\n  else {\n    let scoredGoals = goals.map(goal => {\n      //calc progress\n      const {tracker} = goal;\n      let count = 0;\n      if (type === 'pass/fail'){\n        for (let i = 0; i < tracker.length; i++) {\n          if (tracker[i]) count++;\n        }\n      }\n      else if (type === 'total') {\n        for (let i = 0; i < tracker.length; i++) {\n          count += tracker[i];\n        }\n      }\n      else {\n        let temp = tracker.filter(value => value !== null)\n        count = temp.pop() - tracker[0];\n      }\n      let temp = participants.find(user => user._id === goal.user);\n      let name = temp.alias ? temp.alias : temp.firstName;\n      return [{name: name}, {count: count}, {_id: goal._id}]\n    })\n    console.log(scoredGoals)\n\n    leaderboardList = (\n      scoredGoals.map(goal => {\n        return <LeaderboardItem name={goal.name} count={goal.count} type={type} key={goal._id} />\n      })\n    );\n  }\n\n  return (\n    <div className='competition-container'>\n      <ul className='collection'>\n        <li className='collection-header'>\n          <h3>Leaderboard</h3>\n        </li>\n        {leaderboardList}\n        <p className='lrb-border'/>\n      </ul>\n    </div>\n  );\n};\n\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}
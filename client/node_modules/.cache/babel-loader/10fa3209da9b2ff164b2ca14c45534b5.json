{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport AuthContext from '../../contexts/auth/authContext';\nimport Leaderboard from './Leaderboard';\nimport Participants from './Participants';\nimport InviteTable from './InviteTable';\nimport moment from 'moment';\nimport CompetitionTable from './CompetitionTable';\n\nconst CompetitionPage = () => {\n  const _useContext = useContext(GoalContext),\n        _useContext$goalCurre = _useContext.goalCurrent,\n        startDate = _useContext$goalCurre.startDate,\n        duration = _useContext$goalCurre.duration,\n        type = _useContext$goalCurre.type;\n\n  const _useContext2 = useContext(AlertContext),\n        setAlert = _useContext2.setAlert;\n\n  const _useContext3 = useContext(CompetitionContext),\n        getCompetitionGoals = _useContext3.getCompetitionGoals,\n        getCompetitionParticipants = _useContext3.getCompetitionParticipants,\n        competition = _useContext3.competition,\n        competitionGoals = _useContext3.competitionGoals,\n        competitionParticipants = _useContext3.competitionParticipants,\n        competitionError = _useContext3.competitionError;\n\n  const _useContext4 = useContext(AuthContext),\n        user = _useContext4.user;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAdmin = _useState2[0],\n        setIsAdmin = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAdminView = _useState4[0],\n        setIsAdminView = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isStarted = _useState6[0],\n        setIsStarted = _useState6[1];\n\n  useEffect(() => {\n    setAlert(competitionError); //eslint-disable-next-line\n  }, [competitionError]); //get competition goals and participants\n\n  useEffect(() => {\n    if (Object.entries(competition).length !== 0) {\n      getCompetitionGoals(competition._id);\n      getCompetitionParticipants(competition._id);\n      if (competition.adminIds.includes(user._id)) setIsAdmin(true);\n    } //eslint-disable-next-line\n\n  }, [competition]); //calc time to determine which day of competition we are on\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  if (time > duration) time = duration;\n  if (timeHours >= 0 && !isStarted) setIsStarted(true);\n  return React.createElement(\"div\", {\n    className: \"grid-1-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, isAdmin && React.createElement(\"div\", {\n    className: \"collection competition-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => setIsAdminView(!isAdminView),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, isAdminView ? 'View as User' : 'View as Admin'))), isStarted && React.createElement(Leaderboard, {\n    goals: competitionGoals,\n    participants: competitionParticipants,\n    type: type,\n    isMax: competition.isMax,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), (isAdminView || !isStarted) && React.createElement(Participants, {\n    participants: competitionParticipants,\n    isAdmin: isAdmin,\n    compId: competition._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), isAdminView && !isStarted || true && React.createElement(InviteTable, {\n    participants: competitionParticipants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(CompetitionTable, {\n    time: time,\n    isStarted: isStarted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n};\n\nexport default CompetitionPage;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js"],"names":["React","useContext","useState","useEffect","GoalContext","CompetitionContext","AlertContext","AuthContext","Leaderboard","Participants","InviteTable","moment","CompetitionTable","CompetitionPage","goalCurrent","startDate","duration","type","setAlert","getCompetitionGoals","getCompetitionParticipants","competition","competitionGoals","competitionParticipants","competitionError","user","isAdmin","setIsAdmin","isAdminView","setIsAdminView","isStarted","setIsStarted","Object","entries","length","_id","adminIds","includes","time","startOf","diff","timeHours","isMax"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport AuthContext from '../../contexts/auth/authContext';\nimport Leaderboard from './Leaderboard';\nimport Participants from './Participants';\nimport InviteTable from './InviteTable';\nimport moment from 'moment';\nimport CompetitionTable from './CompetitionTable';\n\nconst CompetitionPage = () => {\n  const { goalCurrent: {startDate, duration, type} } = useContext(GoalContext);\n  \n  const { setAlert } = useContext(AlertContext);\n\n  const { \n    getCompetitionGoals, \n    getCompetitionParticipants, \n    competition, \n    competitionGoals, \n    competitionParticipants,\n    competitionError\n  } = useContext(CompetitionContext);\n\n  const { user } = useContext(AuthContext);\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isAdminView, setIsAdminView] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n\n  useEffect(() => {\n    setAlert(competitionError);\n    //eslint-disable-next-line\n  }, [competitionError])\n\n  //get competition goals and participants\n  useEffect(() => {\n    if(Object.entries(competition).length !== 0) {\n      getCompetitionGoals(competition._id);\n      getCompetitionParticipants(competition._id);\n      if(competition.adminIds.includes(user._id))\n        setIsAdmin(true);\n    }\n    //eslint-disable-next-line\n  }, [competition])\n\n  //calc time to determine which day of competition we are on\n  let time = moment().startOf('day').diff(startDate, 'days');\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  if (time > duration)\n    time = duration;\n\n  if (timeHours >= 0 && !isStarted)\n    setIsStarted(true);\n\n  return (\n    <div className='grid-1-2'>\n      <div>\n        {isAdmin && \n          <div className='collection competition-container'>\n            <button className='btn btn-primary btn-block' onClick={() => setIsAdminView(!isAdminView)}>\n              <h3>{isAdminView ? 'View as User' : 'View as Admin'}</h3>\n            </button>\n          </div>\n        }\n        {isStarted &&\n          <Leaderboard \n            goals={competitionGoals} \n            participants={competitionParticipants}  \n            type={type}\n            isMax={competition.isMax}\n          />\n        }\n        {(isAdminView || !isStarted) && \n          <Participants \n            participants={competitionParticipants} \n            isAdmin={isAdmin}\n            compId={competition._id}\n          />\n        }\n        {isAdminView && !isStarted || true &&\n          <InviteTable \n            participants={competitionParticipants}\n          />\n        }\n      </div>\n      <div>\n        <CompetitionTable \n          time={time}\n          isStarted={isStarted}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CompetitionPage;"]},"metadata":{},"sourceType":"module"}
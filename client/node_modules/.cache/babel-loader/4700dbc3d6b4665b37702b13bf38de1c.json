{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext'; //alert context\n\nconst GoalForm = props => {\n  const _useState = useState({\n    name: '',\n    duration: 90,\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: 7,\n    total: 90,\n    privacy: 'only me'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1];\n\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        frequency = goal.frequency,\n        total = goal.total,\n        privacy = goal.privacy;\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlerts = alertContext.clearAlerts;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    clearAlerts();\n    if (type === 'pass/fail') setGoal(_objectSpread({}, goal, {\n      total: 0\n    }));else setGoal(_objectSpread({}, goal, {\n      frequency: 7\n    }));\n\n    if (name && duration && startDate && type && frequency && total) {\n      //add goal, tell user goal is added, clear state, and \n      await addGoal(goal);\n      setAlert('Goal added!');\n      setGoal({\n        name: '',\n        duration: 90,\n        startDate: Date.now(),\n        type: 'pass/fail',\n        units: '',\n        frequency: 7,\n        total: 90,\n        privacy: 'only me'\n      });\n      setTimeout(() => {\n        clearAlerts();\n        props.history.push('/');\n      }, 2000);\n    } else setAlert('Please enter all fields.');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'frequency' || e.target.name === 'duration' || e.target.name === 'total') setGoal(_objectSpread({}, goal, {\n      [e.target.name]: parseInt(e.target.value)\n    }));else setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Add Goal\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Goal Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Goal Duration (days)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"What type of goal would you like?\", React.createElement(\"select\", {\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Pass/Fail  (e.g. I went to the gym today)\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Total  (e.g. I ran three miles today)\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Difference  (e.g. I lost three pounds this month)\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, type === 'pass/fail' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"How often do you want to hit your goal?\"), React.createElement(\"select\", {\n    name: \"frequency\",\n    value: frequency,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Daily\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Six days a week\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Five days a week\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Four days a week\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Three days a week\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Twice a week\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Once a week\"), React.createElement(\"option\", {\n    value: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Once a month\"))), type === 'total' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"What total number do you want to hit?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), type === 'difference' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"What difference do you want to achieve?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Who can see your goal?\", React.createElement(\"select\", {\n    name: \"privacy\",\n    value: privacy,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"only me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Only Me\"), React.createElement(\"option\", {\n    value: \"friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"My Friends\"), React.createElement(\"option\", {\n    value: \"public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Everyone\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    onChange: handleChange,\n    value: startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), type !== 'pass/fail' && React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Units (e.g lbs or miles)\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add Goal\",\n    className: \"btn btn-block btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })));\n};\n\nexport default GoalForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","GoalContext","AlertContext","GoalForm","props","name","duration","startDate","Date","now","type","units","frequency","total","privacy","goal","setGoal","goalContext","addGoal","alertContext","setAlert","clearAlerts","handleSubmit","e","preventDefault","setTimeout","history","push","handleChange","target","parseInt","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\n//alert context\n\nconst GoalForm = props => {\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: 90,\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: 7,\n    total: 90,\n    privacy: 'only me'\n  });\n\n  const {name, duration, startDate, type, units, frequency, total, privacy } = goal;\n\n  const goalContext = useContext(GoalContext);\n  const { addGoal } = goalContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlerts } = alertContext;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    clearAlerts();\n    if(type === 'pass/fail')\n      setGoal({ ...goal, total: 0 });\n    else\n      setGoal({ ...goal, frequency: 7});\n    if(name && duration && startDate && type && frequency && total) {\n      //add goal, tell user goal is added, clear state, and \n      await addGoal(goal);\n      setAlert('Goal added!');\n      setGoal({\n        name: '',\n        duration: 90,\n        startDate: Date.now(),\n        type: 'pass/fail',\n        units: '',\n        frequency: 7,\n        total: 90,\n        privacy: 'only me'\n      });\n      setTimeout(() => {\n        clearAlerts();\n        props.history.push('/');\n      }, 2000);\n    }\n    else \n      setAlert('Please enter all fields.');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'frequency' || e.target.name === 'duration' || e.target.name === 'total')\n      setGoal({\n        ...goal,\n        [e.target.name]: parseInt(e.target.value)\n      })\n    else\n      setGoal({\n        ...goal, \n        [e.target.name]: e.target.value\n      });\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>Add Goal</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Goal Name</label>\n          <input \n            type='text' \n            name='name' \n            onChange={handleChange}\n            value={name}\n            autoFocus={true}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Goal Duration (days)</label>\n          <input \n            type='number' \n            name='duration' \n            onChange={handleChange}\n            value={duration}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>What type of goal would you like?\n            <select\n              name='type'\n              value={type}\n              onChange={handleChange}>\n              <option value='pass/fail'>Pass/Fail  (e.g. I went to the gym today)</option>\n              <option value='total'>Total  (e.g. I ran three miles today)</option>\n              <option value='difference'>Difference  (e.g. I lost three pounds this month)</option>\n            </select>  \n          </label>\n        </div>\n        <div className=\"form-group\">\n          {type === 'pass/fail' && (\n            <React.Fragment>\n              <label>How often do you want to hit your goal?</label>\n              <select\n                name='frequency'\n                value={frequency}\n                onChange={handleChange}>\n                <option value='7'>Daily</option>\n                <option value='6'>Six days a week</option>\n                <option value='5'>Five days a week</option>\n                <option value='4'>Four days a week</option>\n                <option value='3'>Three days a week</option>\n                <option value='2'>Twice a week</option>\n                <option value='1'>Once a week</option>\n                <option value='30'>Once a month</option>\n              </select>  \n            </React.Fragment>\n          )}\n          {type === 'total' && (\n            <React.Fragment>\n              <label>What total number do you want to hit?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n          {type === 'difference' && (\n            <React.Fragment>\n              <label>What difference do you want to achieve?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n              />\n            </React.Fragment>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Who can see your goal?\n            <select\n              name='privacy'\n              value={privacy}\n              onChange={handleChange}>\n              <option value='only me'>Only Me</option>\n              <option value='friends'>My Friends</option>\n              <option value='public'>Everyone</option>\n            </select>  \n          </label>\n        </div>\n        <div className=\"form-group\">\n          <label>Start Date</label>\n          <input \n            type='date' \n            name='startDate' \n            onChange={handleChange}\n            value={startDate}\n          />\n        </div>\n        {type !== 'pass/fail' && (\n          <div className=\"form-group\">\n            <label>Units (e.g lbs or miles)</label>\n            <input \n              type='text' \n              name='units' \n              placeholder='Units (Example: miles)' \n              onChange={handleChange}\n              value={units}\n            />\n          </div> \n        )}\n        <input \n          type='submit' \n          value='Add Goal' \n          className='btn btn-block btn-primary'\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default GoalForm;\n\n\n\n    \n\n"]},"metadata":{},"sourceType":"module"}
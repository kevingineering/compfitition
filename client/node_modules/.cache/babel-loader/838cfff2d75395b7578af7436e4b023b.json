{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst GoalTotal = ({\n  handleSave,\n  current: {\n    duration,\n    startDate,\n    units,\n    total,\n    compId,\n    tracker,\n    completed\n  }\n}) => {\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlerts = alertContext.clearAlerts;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  let runningTotal = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    runningTotal += record[i];\n  }\n\n  useEffect(() => {\n    setRecord(record.map(value => {\n      if (value === null) {\n        value = 0;\n      }\n\n      return value;\n    })); //eslint-disable-next-line\n  }, []);\n  let time = moment().startOf('day').diff(startDate, 'days') + 1;\n  if (time > duration) time = duration; //https://canvasjs.com/react-charts/line-chart/\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Total: XX \", units), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Day: \", time, \" / \", duration), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"You are XX% finished with your goal.\")), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Save Goal\"));\n};\n\nexport default GoalTotal;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js"],"names":["React","useState","useContext","useEffect","moment","AlertContext","GoalTotal","handleSave","current","duration","startDate","units","total","compId","tracker","completed","alertContext","setAlert","clearAlerts","record","setRecord","runningTotal","i","length","map","value","time","startOf","diff"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,MAArC;AAA6CC,IAAAA,OAA7C;AAAsDC,IAAAA;AAAtD;AAAtB,CAAD,KAA8F;AAC9G,QAAMC,YAAY,GAAGd,UAAU,CAACG,YAAD,CAA/B;AAD8G,QAEvGY,QAFuG,GAE9ED,YAF8E,CAEvGC,QAFuG;AAAA,QAE7FC,WAF6F,GAE9EF,YAF8E,CAE7FE,WAF6F;;AAAA,oBAIlFjB,QAAQ,CAACa,OAAD,CAJ0E;AAAA;AAAA,QAIvGK,MAJuG;AAAA,QAI/FC,SAJ+F;;AAM9G,MAAIC,YAAY,GAAG,CAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACI,MAA3B,EAAmCD,CAAC,EAApC,EAAyC;AACvCD,IAAAA,YAAY,IAAIF,MAAM,CAACG,CAAD,CAAtB;AACD;;AAEDnB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,SAAS,CAACD,MAAM,CAACK,GAAP,CAAWC,KAAK,IAAI;AAC5B,UAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBA,QAAAA,KAAK,GAAG,CAAR;AACD;;AACD,aAAOA,KAAP;AACD,KALS,CAAD,CAAT,CADc,CAOd;AACD,GARQ,EAQN,EARM,CAAT;AAUA,MAAIC,IAAI,GAAGtB,MAAM,GAAGuB,OAAT,CAAiB,KAAjB,EAAwBC,IAAxB,CAA6BlB,SAA7B,EAAwC,MAAxC,IAAkD,CAA7D;AACA,MAAIgB,IAAI,GAAGjB,QAAX,EACEiB,IAAI,GAAGjB,QAAP,CAxB4G,CA0B5G;;AAEF,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgDE,KAAhD,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA2Ce,IAA3C,SAAoDjB,QAApD,CAFF,EAGE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAHF,CADF,EAME;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,MAAMF,UAAU,CAACY,MAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CADF;AAYD,CAxCD;;AA0CA,eAAeb,SAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst GoalTotal = ({handleSave, current: { duration, startDate, units, total, compId, tracker, completed }}) => {\n  const alertContext = useContext(AlertContext);\n  const {setAlert, clearAlerts} = alertContext;\n\n  const [record, setRecord] = useState(tracker);\n\n  let runningTotal = 0;\n\n  for (let i = 0; i < record.length; i++ ) {\n    runningTotal += record[i];\n  }\n\n  useEffect(() => {\n    setRecord(record.map(value => {\n      if (value === null) {\n        value = 0;\n      }\n      return value;\n    }));\n    //eslint-disable-next-line\n  }, []);\n\n  let time = moment().startOf('day').diff(startDate, 'days') + 1;\n  if (time > duration)\n    time = duration;\n\n    //https://canvasjs.com/react-charts/line-chart/\n    \n  return (\n    <React.Fragment>\n      <ul>\n        <li className='table-info lr-border'>Total: XX {units}</li>\n        <li className='table-info lr-border'>Day: {time} / {duration}</li>\n        <li className='table-info lr-border'>You are XX% finished with your goal.</li>\n      </ul>\n      <button className='btn btn-primary btn-block' onClick={() => handleSave(record)}>\n        Save Goal\n      </button>\n    </React.Fragment>\n  )\n}\n\nexport default GoalTotal;"]},"metadata":{},"sourceType":"module"}
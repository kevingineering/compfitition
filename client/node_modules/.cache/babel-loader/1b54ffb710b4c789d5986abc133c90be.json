{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartTotal from './GoalChartTotal';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalTotal = ({\n  isOwner,\n  goal,\n  time,\n  isStarted\n}) => {\n  const duration = goal.duration,\n        startDate = goal.startDate,\n        units = goal.units,\n        total = goal.total,\n        tracker = goal.tracker,\n        type = goal.type;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1]; //calc progress so far\n\n\n  let value = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    value += record[i];\n  }\n\n  const handleSave = async record => {\n    await updateGoalTracker(record, _id);\n\n    if (goalsError) {\n      setAlert(goalsError);\n    } else {\n      setAlert('Goal saved!');\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, isStarted ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(GoalChartTotal, {\n    units: units,\n    record: record,\n    time: time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), time !== duration && isOwner && React.createElement(GoalProgress, {\n    type: type,\n    time: time,\n    record: record,\n    setRecord: setRecord,\n    units: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(GoalInfo, {\n    goal: goal,\n    record: record,\n    time: time,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), time !== duration && isOwner && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Save Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))) : React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Goal: \", total, \" \", units), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Begins \", moment.utc(startDate).format('MMM Do')))), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Duration: \", duration, \" days\")))), React.createElement(GoalButtons, {\n    isActive: time <= duration,\n    handleSave: handleSave,\n    isOwner: isOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n};\n\nGoalTotal.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n};\nexport default GoalTotal;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalTotal.js"],"names":["React","useState","moment","GoalChartTotal","PropTypes","GoalProgress","GoalInfo","GoalTotal","isOwner","goal","time","isStarted","duration","startDate","units","total","tracker","type","record","setRecord","value","i","length","handleSave","updateGoalTracker","_id","goalsError","setAlert","utc","format","propTypes","func","object","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\nimport GoalChartTotal from './GoalChartTotal';\nimport PropTypes from 'prop-types';\nimport GoalProgress from './goalPieces/GoalProgress';\nimport GoalInfo from './goalPieces/GoalInfo';\n\nconst GoalTotal = ({isOwner, goal, time, isStarted}) => {\n  \n  const { duration, startDate, units, total, tracker, type } = goal;\n\n  const [record, setRecord] = useState(tracker);\n\n  //calc progress so far\n  let value = 0;\n  for (let i = 0; i < record.length; i++ ) {\n    value += record[i];\n  }\n\n  const handleSave = async (record) => {\n    await updateGoalTracker(record, _id);\n    if (goalsError) {\n      setAlert(goalsError);\n    }\n    else {\n      setAlert('Goal saved!');\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {isStarted ? (\n        <React.Fragment>\n          <ul>\n            <GoalChartTotal \n              units={units} \n              record={record} \n              time={time}\n            />\n            {time !== duration && isOwner &&\n              <GoalProgress \n                type={type}\n                time={time}\n                record={record}\n                setRecord={setRecord}\n                units={units}\n              />\n            }\n            <GoalInfo \n              goal={goal}\n              record={record}\n              time={time}\n              value={value}\n            />\n          </ul>\n          {/* SaveButton */}\n          { time !== duration && isOwner &&\n            <React.Fragment>\n              <button \n                className='btn btn-primary btn-block' \n                onClick={() => handleSave(record)}\n              >\n                Save Goal\n              </button>\n              <p className='lr-border'/>\n            </React.Fragment>\n          }\n        </React.Fragment>\n      ) : (\n        <ul>\n          {/* Info */}\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Goal: {total} {units}\n              </span>\n              <span className='right'>\n                Begins {moment.utc(startDate).format('MMM Do')}\n              </span>\n            </div>\n          </li>\n          <li className='table-info lr-border'>\n            <div className='space-between'>\n              <span>\n                Duration: {duration} days\n              </span>\n            </div>\n          </li>\n        </ul>\n      )}\n      <GoalButtons \n        isActive={time <= duration} \n        handleSave={handleSave}\n        isOwner={isOwner}\n      />\n    </React.Fragment>\n  )\n}\n\nGoalTotal.propTypes = {\n  handleSave: PropTypes.func,\n  goal: PropTypes.object.isRequired,\n  isOwner: PropTypes.bool.isRequired\n}\n\nexport default GoalTotal;"]},"metadata":{},"sourceType":"module"}
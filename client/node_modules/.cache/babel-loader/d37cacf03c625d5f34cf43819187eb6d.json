{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/friend/FriendGoalPage.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport GoalInfo from '../../goals/page/GoalInfo';\nimport FriendContext from '../../../contexts/friends/friendContext';\nimport GoalChart from '../../goals/page/GoalChart';\nimport { useHistory } from 'react-router-dom';\n\nconst FriendGoalPage = () => {\n  const _useContext = useContext(FriendContext),\n        friendCurrentGoal = _useContext.friendCurrentGoal;\n\n  const name = friendCurrentGoal.name,\n        duration = friendCurrentGoal.duration,\n        startDate = friendCurrentGoal.startDate,\n        tracker = friendCurrentGoal.tracker,\n        type = friendCurrentGoal.type;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  let history = useHistory();\n  !Object.entries(friendCurrentGoal).length && history.goBack(); //fill missed past values in tracker array - will not be saved\n\n  useEffect(() => {\n    if (type === 'pass/fail') {\n      setRecord(record.map((value, index) => {\n        if (index < time && value === null) {\n          value = false;\n        }\n\n        return value;\n      }));\n    } //eslint-disable-next-line\n\n  }, []); //decide if competition has started, is over, or what day we are on\n\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  const isStarted = timeHours >= 0 ? true : false;\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration) time = duration;\n  const isComplete = time === duration ? true : false; //calc goal value\n\n  let value = 0;\n\n  if (type === 'difference') {\n    let temp = record.filter(value => value !== null);\n    value = temp.pop() - record[0];\n  } else if (type === 'total') {\n    for (let i = 0; i < record.length; i++) {\n      value += record[i];\n    }\n  } else if (type === 'pass/fail') {\n    for (let i = 0; i < record.length; i++) {\n      if (record[i] === true) value++;\n    }\n  }\n\n  let isOwner = false;\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, !Object.entries(friendCurrentGoal).length ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, name), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, isStarted && React.createElement(GoalChart, {\n    goal: friendCurrentGoal,\n    record: record,\n    setRecord: setRecord,\n    time: time,\n    isComplete: isComplete,\n    isOwner: isOwner,\n    isStarted: isStarted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(GoalInfo, {\n    goal: friendCurrentGoal,\n    record: record,\n    time: time,\n    value: value,\n    isStarted: isStarted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n};\n\nexport default FriendGoalPage;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/friend/FriendGoalPage.js"],"names":["React","useState","useContext","useEffect","moment","GoalInfo","FriendContext","GoalChart","useHistory","FriendGoalPage","friendCurrentGoal","name","duration","startDate","tracker","type","record","setRecord","history","Object","entries","length","goBack","map","value","index","time","timeHours","startOf","diff","isStarted","isComplete","temp","filter","pop","i","isOwner"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,sBAEGP,UAAU,CAACI,aAAD,CAFb;AAAA,QAEnBI,iBAFmB,eAEnBA,iBAFmB;;AAAA,QAInBC,IAJmB,GAI0BD,iBAJ1B,CAInBC,IAJmB;AAAA,QAIbC,QAJa,GAI0BF,iBAJ1B,CAIbE,QAJa;AAAA,QAIHC,SAJG,GAI0BH,iBAJ1B,CAIHG,SAJG;AAAA,QAIQC,OAJR,GAI0BJ,iBAJ1B,CAIQI,OAJR;AAAA,QAIiBC,IAJjB,GAI0BL,iBAJ1B,CAIiBK,IAJjB;;AAAA,oBAMCd,QAAQ,CAACa,OAAD,CANT;AAAA;AAAA,QAMpBE,MANoB;AAAA,QAMZC,SANY;;AAQ3B,MAAIC,OAAO,GAAGV,UAAU,EAAxB;AACA,GAACW,MAAM,CAACC,OAAP,CAAeV,iBAAf,EAAkCW,MAAnC,IAA6CH,OAAO,CAACI,MAAR,EAA7C,CAT2B,CAW3B;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAI,KAAK,WAAb,EAA0B;AACxBE,MAAAA,SAAS,CAACD,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrC,YAAIA,KAAK,GAAGC,IAAR,IAAgBF,KAAK,KAAK,IAA9B,EAAoC;AAClCA,UAAAA,KAAK,GAAG,KAAR;AACD;;AACD,eAAOA,KAAP;AACD,OALS,CAAD,CAAT;AAMD,KARa,CASd;;AACD,GAVQ,EAUN,EAVM,CAAT,CAZ2B,CAwB3B;;AACA,MAAIG,SAAS,GAAGvB,MAAM,GAAGwB,OAAT,CAAiB,KAAjB,EAAwBC,IAAxB,CAA6BhB,SAA7B,EAAwC,OAAxC,CAAhB;AACA,QAAMiB,SAAS,GAAGH,SAAS,IAAI,CAAb,GAAiB,IAAjB,GAAwB,KAA1C;AACA,MAAID,IAAI,GAAGtB,MAAM,GAAGwB,OAAT,CAAiB,KAAjB,EAAwBC,IAAxB,CAA6BhB,SAA7B,EAAwC,MAAxC,CAAX;AACA,MAAIa,IAAI,GAAGd,QAAX,EACEc,IAAI,GAAGd,QAAP;AACF,QAAMmB,UAAU,GAAGL,IAAI,KAAKd,QAAT,GAAoB,IAApB,GAA2B,KAA9C,CA9B2B,CAgC3B;;AACA,MAAIY,KAAK,GAAG,CAAZ;;AACA,MAAIT,IAAI,KAAK,YAAb,EAA2B;AACzB,QAAIiB,IAAI,GAAGhB,MAAM,CAACiB,MAAP,CAAcT,KAAK,IAAIA,KAAK,KAAK,IAAjC,CAAX;AACAA,IAAAA,KAAK,GAAGQ,IAAI,CAACE,GAAL,KAAalB,MAAM,CAAC,CAAD,CAA3B;AACD,GAHD,MAGO,IAAID,IAAI,KAAK,OAAb,EAAsB;AAC3B,SAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,MAAM,CAACK,MAA3B,EAAmCc,CAAC,EAApC,EAAyC;AACvCX,MAAAA,KAAK,IAAIR,MAAM,CAACmB,CAAD,CAAf;AACD;AACF,GAJM,MAIA,IAAIpB,IAAI,KAAK,WAAb,EAA0B;AAC/B,SAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,MAAM,CAACK,MAA3B,EAAmCc,CAAC,EAApC,EAAyC;AACvC,UAAInB,MAAM,CAACmB,CAAD,CAAN,KAAc,IAAlB,EACEX,KAAK;AACR;AACF;;AAED,MAAIY,OAAO,GAAG,KAAd;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACjB,MAAM,CAACC,OAAP,CAAeV,iBAAf,EAAkCW,MAAnC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCV,IAAnC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmB,SAAS,IACR,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEpB,iBADR;AAEE,IAAA,MAAM,EAAEM,MAFV;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,IAAI,EAAES,IAJR;AAKE,IAAA,UAAU,EAAEK,UALd;AAME,IAAA,OAAO,EAAEK,OANX;AAOE,IAAA,SAAS,EAAEN,SAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAYE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEpB,iBADR;AAEE,IAAA,MAAM,EAAEM,MAFV;AAGE,IAAA,IAAI,EAAEU,IAHR;AAIE,IAAA,KAAK,EAAEF,KAJT;AAKE,IAAA,SAAS,EAAEM,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAFF,CAJF,CADF;AA+BD,CAjFD;;AAmFA,eAAerB,cAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport GoalInfo from '../../goals/page/GoalInfo';\nimport FriendContext from '../../../contexts/friends/friendContext';\nimport GoalChart from '../../goals/page/GoalChart';\nimport { useHistory } from 'react-router-dom';\n\nconst FriendGoalPage = () => {\n\n  const { friendCurrentGoal } = useContext(FriendContext);\n\n  const { name, duration, startDate, tracker, type } = friendCurrentGoal;\n \n  const [record, setRecord] = useState(tracker);\n\n  let history = useHistory();\n  !Object.entries(friendCurrentGoal).length && history.goBack();\n\n  //fill missed past values in tracker array - will not be saved\n  useEffect(() => {\n    if (type === 'pass/fail') {\n      setRecord(record.map((value, index) => {\n        if (index < time && value === null) {\n          value = false;\n        }\n        return value;\n      }));\n    }\n    //eslint-disable-next-line\n  }, []);\n\n  //decide if competition has started, is over, or what day we are on\n  let timeHours = moment().startOf('day').diff(startDate, 'hours');\n  const isStarted = timeHours >= 0 ? true : false;\n  let time = moment().startOf('day').diff(startDate, 'days');\n  if (time > duration)\n    time = duration;\n  const isComplete = time === duration ? true : false;\n\n  //calc goal value\n  let value = 0;\n  if (type === 'difference') {\n    let temp = record.filter(value => value !== null)\n    value = temp.pop() - record[0];\n  } else if (type === 'total') {\n    for (let i = 0; i < record.length; i++ ) {\n      value += record[i];\n    }\n  } else if (type === 'pass/fail') {\n    for (let i = 0; i < record.length; i++ ) {\n      if (record[i] === true) \n        value++;\n    }\n  }\n  \n  let isOwner = false;\n\n  return (\n    <div className='form-container'>\n    {!Object.entries(friendCurrentGoal).length ? (\n      <h2>Loading...</h2>\n    ) : (\n      <React.Fragment>\n        <h2 className='collection-header'>{name}</h2>\n        <ul>\n          {isStarted && \n            <GoalChart \n              goal={friendCurrentGoal}\n              record={record}\n              setRecord={setRecord} \n              time={time}\n              isComplete={isComplete}\n              isOwner={isOwner}\n              isStarted={isStarted}\n            />\n          }\n          <GoalInfo \n            goal={friendCurrentGoal}\n            record={record}\n            time={time}\n            value={value}\n            isStarted={isStarted}\n          />\n        </ul>\n      </React.Fragment>\n    )}\n    </div>\n  )\n};\n\nexport default FriendGoalPage;"]},"metadata":{},"sourceType":"module"}
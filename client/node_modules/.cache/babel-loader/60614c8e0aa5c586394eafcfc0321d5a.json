{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchResults.js\";\nimport React, { useContext } from 'react';\nimport SearchItem from './SearchItem';\nimport SearchableUsersContext from '../../contexts/searchableUsers/searchableUsersContext';\nimport FriendContext from '../../contexts/friends/friendContext';\n\nconst SearchResults = () => {\n  const searchableUsersContext = useContext(SearchableUsersContext);\n  const searchableUsers = searchableUsersContext.searchableUsers,\n        filteredUsers = searchableUsersContext.filteredUsers;\n  const friendContext = useContext(FriendContext);\n  const friends = friendContext.friends;\n  const friendIds = friends.map(friend => friend._id);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, searchableUsers.length === 0 ? React.createElement(\"li\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, filteredUsers !== null ? filteredUsers.map(user => React.createElement(SearchItem, {\n    key: user._id,\n    user: user,\n    friendIds: friendIds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })) : searchableUsers.map(user => React.createElement(SearchItem, {\n    key: user._id,\n    user: user,\n    friendIds: friendIds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nexport default SearchResults;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/searchableUsers/SearchResults.js"],"names":["React","useContext","SearchItem","SearchableUsersContext","FriendContext","SearchResults","searchableUsersContext","searchableUsers","filteredUsers","friendContext","friends","friendIds","map","friend","_id","length","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,sBAAP,MAAmC,uDAAnC;AACA,OAAOC,aAAP,MAA0B,sCAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,sBAAsB,GAAGL,UAAU,CAACE,sBAAD,CAAzC;AAD0B,QAElBI,eAFkB,GAEiBD,sBAFjB,CAElBC,eAFkB;AAAA,QAEDC,aAFC,GAEiBF,sBAFjB,CAEDE,aAFC;AAI1B,QAAMC,aAAa,GAAGR,UAAU,CAACG,aAAD,CAAhC;AAJ0B,QAKlBM,OALkB,GAKND,aALM,CAKlBC,OALkB;AAO1B,QAAMC,SAAS,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAIA,MAAM,CAACC,GAA7B,CAAlB;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,eAAe,CAACQ,MAAhB,KAA2B,CAA3B,GACC;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,aAAa,KAAK,IAAlB,GACCA,aAAa,CAACI,GAAd,CAAkBI,IAAI,IACpB,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,IAAI,CAACF,GAAtB;AAA2B,IAAA,IAAI,EAAEE,IAAjC;AAAuC,IAAA,SAAS,EAAEL,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKCJ,eAAe,CAACK,GAAhB,CAAoBI,IAAI,IACtB,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,IAAI,CAACF,GAAtB;AAA2B,IAAA,IAAI,EAAEE,IAAjC;AAAuC,IAAA,SAAS,EAAEL,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CAJJ,CADF;AAmBD,CA5BD;;AA8BA,eAAeN,aAAf","sourcesContent":["import React, { useContext } from 'react';\nimport SearchItem from './SearchItem';\nimport SearchableUsersContext from '../../contexts/searchableUsers/searchableUsersContext';\nimport FriendContext from '../../contexts/friends/friendContext';\n\nconst SearchResults = () => {\n  const searchableUsersContext = useContext(SearchableUsersContext);\n  const { searchableUsers, filteredUsers } = searchableUsersContext;\n\n  const friendContext = useContext(FriendContext);\n  const { friends } = friendContext;\n\n  const friendIds = friends.map(friend => friend._id);\n\n  return (\n    <React.Fragment>\n      {searchableUsers.length === 0 ? (\n        <li className='collection-item'>Loading...</li>\n      ) : (\n        <React.Fragment>\n          {filteredUsers !== null ? (\n            filteredUsers.map(user => \n              <SearchItem key={user._id} user={user} friendIds={friendIds}/>\n            )\n          ) : (\n            searchableUsers.map(user =>\n              <SearchItem key={user._id} user={user} friendIds={friendIds}/>\n            )\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_FRIENDS, ADD_FRIEND, DELETE_FRIEND, SET_CURRENT_FRIEND, CLEAR_CURRENT_FRIEND, SET_FRIEND_LOADING, FRIENDS_ERROR, CLEAR_FRIEND_ERRORS, CLEAR_FRIENDS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_FRIENDS:\n      return _objectSpread({}, state, {\n        friends: action.payload,\n        friendIds: action.payload.map(friend => friend._id),\n        loading: false\n      });\n\n    case ADD_FRIEND:\n      return _objectSpread({}, state, {\n        friends: [...state.friends, action.payload],\n        friendIds: [...state.friendIds, action.payload.id],\n        loading: false\n      });\n\n    case DELETE_FRIEND:\n      return _objectSpread({}, state, {\n        friends: state.friends.filter(friend => friend._id !== action.payload),\n        friendIds: state.friendIds.filter(id => id !== action.payload),\n        loading: false\n      });\n\n    case SET_CURRENT_FRIEND:\n      return _objectSpread({}, state, {\n        current: state.friends.find(friend => friend._id === action.payload)\n      });\n\n    case CLEAR_CURRENT_FRIEND:\n      return _objectSpread({}, state, {\n        current: {}\n      });\n\n    case SET_FRIEND_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FRIENDS_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    case CLEAR_FRIEND_ERRORS:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    case CLEAR_FRIENDS:\n      return _objectSpread({}, state, {\n        friends: [],\n        current: {},\n        error: null,\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/friends/friendReducer.js"],"names":["GET_FRIENDS","ADD_FRIEND","DELETE_FRIEND","SET_CURRENT_FRIEND","CLEAR_CURRENT_FRIEND","SET_FRIEND_LOADING","FRIENDS_ERROR","CLEAR_FRIEND_ERRORS","CLEAR_FRIENDS","state","action","type","friends","payload","friendIds","map","friend","_id","loading","id","filter","current","find","error"],"mappings":";AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,kBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,aAPF,EAQEC,mBARF,EASEC,aATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,WAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,OAAO,EAAEF,MAAM,CAACG,OAFlB;AAGEC,QAAAA,SAAS,EAAEJ,MAAM,CAACG,OAAP,CAAeE,GAAf,CAAmBC,MAAM,IAAIA,MAAM,CAACC,GAApC,CAHb;AAIEC,QAAAA,OAAO,EAAE;AAJX;;AAMF,SAAKjB,UAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,OAAO,EAAE,CAAC,GAAGH,KAAK,CAACG,OAAV,EAAmBF,MAAM,CAACG,OAA1B,CAFX;AAGEC,QAAAA,SAAS,EAAE,CAAC,GAAGL,KAAK,CAACK,SAAV,EAAqBJ,MAAM,CAACG,OAAP,CAAeM,EAApC,CAHb;AAIED,QAAAA,OAAO,EAAE;AAJX;;AAMF,SAAKhB,aAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcQ,MAAd,CAAqBJ,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeP,MAAM,CAACG,OAArD,CAFX;AAGEC,QAAAA,SAAS,EAAEL,KAAK,CAACK,SAAN,CAAgBM,MAAhB,CAAuBD,EAAE,IAAIA,EAAE,KAAKT,MAAM,CAACG,OAA3C,CAHb;AAIEK,QAAAA,OAAO,EAAE;AAJX;;AAMF,SAAKf,kBAAL;AACE,+BACKM,KADL;AAEEY,QAAAA,OAAO,EAAEZ,KAAK,CAACG,OAAN,CAAcU,IAAd,CAAmBN,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeP,MAAM,CAACG,OAAnD;AAFX;;AAIF,SAAKT,oBAAL;AACE,+BACKK,KADL;AAEEY,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKhB,kBAAL;AACE,+BACKI,KADL;AAEES,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKZ,aAAL;AACE,+BACKG,KADL;AAEEc,QAAAA,KAAK,EAAEb,MAAM,CAACG,OAFhB;AAGEK,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKX,mBAAL;AACE,+BACKE,KADL;AAEEc,QAAAA,KAAK,EAAE;AAFT;;AAIF,SAAKf,aAAL;AACE,+BACKC,KADL;AAEEG,QAAAA,OAAO,EAAE,EAFX;AAGES,QAAAA,OAAO,EAAE,EAHX;AAIEE,QAAAA,KAAK,EAAE,IAJT;AAKEL,QAAAA,OAAO,EAAE;AALX;;AAOF;AACE,aAAOT,KAAP;AAzDJ;AA2DD,CA5DD","sourcesContent":["import {\n  GET_FRIENDS,\n  ADD_FRIEND,\n  DELETE_FRIEND,\n  SET_CURRENT_FRIEND,\n  CLEAR_CURRENT_FRIEND,\n  SET_FRIEND_LOADING,\n  FRIENDS_ERROR,\n  CLEAR_FRIEND_ERRORS,\n  CLEAR_FRIENDS,\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_FRIENDS:\n      return {\n        ...state,\n        friends: action.payload,\n        friendIds: action.payload.map(friend => friend._id),\n        loading: false\n      }\n    case ADD_FRIEND:\n      return {\n        ...state,\n        friends: [...state.friends, action.payload],\n        friendIds: [...state.friendIds, action.payload.id],\n        loading: false\n      }\n    case DELETE_FRIEND:\n      return {\n        ...state,\n        friends: state.friends.filter(friend => friend._id !== action.payload),\n        friendIds: state.friendIds.filter(id => id !== action.payload),\n        loading: false\n      }\n    case SET_CURRENT_FRIEND:\n      return {\n        ...state,\n        current: state.friends.find(friend => friend._id === action.payload)\n      }\n    case CLEAR_CURRENT_FRIEND:\n      return {\n        ...state,\n        current: {}\n      }\n    case SET_FRIEND_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case FRIENDS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    case CLEAR_FRIEND_ERRORS:\n      return {\n        ...state,\n        error: null\n      }\n    case CLEAR_FRIENDS:\n      return {\n        ...state,\n        friends: [],\n        current: {},\n        error: null,\n        loading: true\n      }\n    default: \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}
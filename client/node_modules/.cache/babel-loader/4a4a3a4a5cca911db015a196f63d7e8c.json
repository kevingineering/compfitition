{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js\";\nimport React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst GoalPassFail = ({\n  current: {\n    duration,\n    startDate,\n    total,\n    compId,\n    tracker,\n    completed\n  }\n}) => {\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlerts = alertContext.clearAlerts;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  setRecord(record.map((value, index) => {\n    if (index <= time && value === null) {\n      value = false;\n    }\n\n    return value;\n  })); //event.target will get the icon and fail, but event.currentTarget will get the button every time\n\n  const handleClick = e => {\n    let clickLoc = parseInt(e.currentTarget.name);\n\n    if (time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    } else setRecord(record.map((value, index) => {\n      if (index === clickLoc) {\n        if (value === null || value === false) {\n          value = true;\n        } else value = false;\n      }\n\n      return value;\n    }));\n  };\n\n  const table = () => {\n    let list = [];\n\n    for (let i = 1; i <= duration / 7; i++) {\n      list.push(React.createElement(\"span\", {\n        className: \"table-row\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"table-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Week \", i, React.createElement(\"span\", {\n        className: \"hide-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" - \", moment(startDate.substring(0, 10)).add(7 * i, 'day').format('MMM Do'))), React.createElement(\"span\", {\n        className: \"table-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, buttons(i - 1))));\n    }\n\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n\n    for (let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(React.createElement(\"button\", {\n        className: `table-btn ${time === loc && 'table-btn-today'}`,\n        onClick: handleClick,\n        key: loc,\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, record[loc] && React.createElement(\"i\", {\n        className: \"fas fa-check success-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), !record[loc] && record[loc] !== null && React.createElement(\"i\", {\n        className: \"fas fa-times danger-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), record[loc] === null && ' '));\n    }\n\n    return list;\n  };\n\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, table()), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Start Date: \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Total: XX / \", duration / 7 * total, \" (XX%)\"));\n};\n\nexport default GoalPassFail;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js"],"names":["React","useState","useContext","moment","AlertContext","GoalPassFail","current","duration","startDate","total","compId","tracker","completed","alertContext","setAlert","clearAlerts","record","setRecord","time","startOf","diff","map","value","index","handleClick","e","clickLoc","parseInt","currentTarget","name","setTimeout","table","list","i","push","substring","add","format","buttons","week","loc"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst GoalPassFail = ({current: { duration, startDate, total, compId, tracker, completed }}) => {\n  const alertContext = useContext(AlertContext);\n  const {setAlert, clearAlerts} = alertContext;\n\n  const [record, setRecord] = useState(tracker);\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n\n  setRecord(record.map((value, index) => {\n    if (index <= time && value === null) {\n      value = false;\n    }\n    return value;\n  }));\n\n  //event.target will get the icon and fail, but event.currentTarget will get the button every time\n  const handleClick = e => {\n    let clickLoc = parseInt(e.currentTarget.name);\n    if (time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    }\n    else setRecord(record.map((value, index) => {\n      if (index === clickLoc) {\n        if (value === null || value === false) {\n          value = true;\n        }\n        else value = false;\n      }\n      return value;\n    }))\n  };\n\n  const table = () => {\n    let list = [];\n    for(let i = 1; i <= duration / 7; i++) {\n      list.push(\n        <span className='table-row' key={i}>\n          <h3 className='table-label'>Week {i}<span className='hide-sm'> - {moment(startDate.substring(0, 10)).add(7*i, 'day').format('MMM Do')}</span></h3>\n          <span className='table-buttons'>\n            {buttons(i-1)}\n          </span>\n        </span>);\n    }\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n    for(let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(\n        <button \n          className={`table-btn ${time === loc && 'table-btn-today'}`}\n          onClick={handleClick} \n          key={loc} \n          name={loc} \n        >\n          {record[loc] && <i className='fas fa-check success-color' name={loc}/>}\n          {!record[loc] && record[loc] !== null && <i className='fas fa-times danger-color' name={loc}/>}\n          {record[loc] === null && ' '}\n        </button>\n      )\n    }\n    return list;\n  };\n\n  return (\n    <ul>\n      <li>\n        {table()}\n      </li>\n      <li>Start Date: </li>\n      <li>Total: XX / {duration / 7 * total} (XX%)</li>\n    </ul>\n  );\n};\n\nexport default GoalPassFail;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_USER_GOALS, GET_PUBLIC_GOALS, GET_FRIEND_GOALS, ADD_GOAL, DELETE_GOAL, DELETE_GOALS, UPDATE_GOAL, SET_CURRENT_GOAL, CLEAR_CURRENT_GOAL, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOAL_ERRORS, CLEAR_GOALS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_USER_GOALS:\n      console.log('fetch');\n      return _objectSpread({}, state, {\n        userGoals: action.payload,\n        loading: false\n      });\n\n    case ADD_GOAL:\n      console.log('set');\n      return _objectSpread({}, state, {\n        userGoals: [...state.userGoals, action.payload],\n        loading: false\n      });\n\n    case DELETE_GOAL:\n      return _objectSpread({}, state, {\n        userGoals: state.userGoals.filter(goal => goal._id !== action.payload),\n        loading: false\n      });\n\n    case UPDATE_GOAL:\n      return _objectSpread({}, state, {\n        userGoals: state.userGoals.map(goal => goal._id === action.payload._id ? action.payload : goal),\n        loading: false\n      });\n\n    case SET_GOAL_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GOAL_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    case CLEAR_GOAL_ERRORS:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    case SET_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        current: state.userGoals.find(goal => goal._id === action.payload)\n      });\n\n    case CLEAR_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        current: {}\n      });\n\n    case DELETE_GOALS:\n    case CLEAR_GOALS:\n      return _objectSpread({}, state, {\n        userGoals: [],\n        publicGoals: [],\n        friendGoals: [],\n        current: {},\n        error: null,\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalReducer.js"],"names":["GET_USER_GOALS","GET_PUBLIC_GOALS","GET_FRIEND_GOALS","ADD_GOAL","DELETE_GOAL","DELETE_GOALS","UPDATE_GOAL","SET_CURRENT_GOAL","CLEAR_CURRENT_GOAL","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOAL_ERRORS","CLEAR_GOALS","state","action","type","console","log","userGoals","payload","loading","filter","goal","_id","map","error","current","find","publicGoals","friendGoals"],"mappings":";AAAA,SACEA,cADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,gBARF,EASEC,kBATF,EAUEC,gBAVF,EAWEC,UAXF,EAYEC,iBAZF,EAaEC,WAbF,QAcO,UAdP;AAgBA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKf,cAAL;AACEgB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,+BACKJ,KADL;AAEEK,QAAAA,SAAS,EAAEJ,MAAM,CAACK,OAFpB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKjB,QAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,+BACKJ,KADL;AAEEK,QAAAA,SAAS,EAAE,CAAC,GAAGL,KAAK,CAACK,SAAV,EAAqBJ,MAAM,CAACK,OAA5B,CAFb;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKhB,WAAL;AACE,+BACKS,KADL;AAEEK,QAAAA,SAAS,EAAEL,KAAK,CAACK,SAAN,CAAgBG,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACK,OAAnD,CAFb;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKd,WAAL;AACE,+BACKO,KADL;AAEEK,QAAAA,SAAS,EAAEL,KAAK,CAACK,SAAN,CAAgBM,GAAhB,CAAoBF,IAAI,IACjCA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACK,OAAP,CAAeI,GAA5B,GAAkCT,MAAM,CAACK,OAAzC,GAAmDG,IAD1C,CAFb;AAIEF,QAAAA,OAAO,EAAE;AAJX;;AAMF,SAAKX,gBAAL;AACE,+BACKI,KADL;AAEEO,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKV,UAAL;AACE,+BACKG,KADL;AAEEY,QAAAA,KAAK,EAAEX,MAAM,CAACK,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKT,iBAAL;AACE,+BACKE,KADL;AAEEY,QAAAA,KAAK,EAAE;AAFT;;AAIF,SAAKlB,gBAAL;AACE,+BACKM,KADL;AAEEa,QAAAA,OAAO,EAAEb,KAAK,CAACK,SAAN,CAAgBS,IAAhB,CAAqBL,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACK,OAAjD;AAFX;;AAIF,SAAKX,kBAAL;AACE,+BACKK,KADL;AAEEa,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKrB,YAAL;AACA,SAAKO,WAAL;AACE,+BACKC,KADL;AAEEK,QAAAA,SAAS,EAAE,EAFb;AAGEU,QAAAA,WAAW,EAAE,EAHf;AAIEC,QAAAA,WAAW,EAAE,EAJf;AAKEH,QAAAA,OAAO,EAAE,EALX;AAMED,QAAAA,KAAK,EAAE,IANT;AAOEL,QAAAA,OAAO,EAAE;AAPX;;AASF;AACE,aAAOP,KAAP;AAlEJ;AAoED,CArED","sourcesContent":["import {\n  GET_USER_GOALS,\n  GET_PUBLIC_GOALS,\n  GET_FRIEND_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  DELETE_GOALS,\n  UPDATE_GOAL,\n  SET_CURRENT_GOAL,\n  CLEAR_CURRENT_GOAL,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOAL_ERRORS,\n  CLEAR_GOALS\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_USER_GOALS:\n      console.log('fetch')\n      return {\n        ...state, \n        userGoals: action.payload,\n        loading: false\n      }\n    case ADD_GOAL:\n      console.log('set')\n      return {\n        ...state,\n        userGoals: [...state.userGoals, action.payload],\n        loading: false\n      }\n    case DELETE_GOAL:\n      return {\n        ...state,\n        userGoals: state.userGoals.filter(goal => goal._id !== action.payload),\n        loading: false\n      }\n    case UPDATE_GOAL:\n      return {\n        ...state,\n        userGoals: state.userGoals.map(goal => \n          goal._id === action.payload._id ? action.payload : goal),\n        loading: false\n      }\n    case SET_GOAL_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case GOAL_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    case CLEAR_GOAL_ERRORS:\n      return {\n        ...state,\n        error: null\n      }\n    case SET_CURRENT_GOAL:\n      return {\n        ...state,\n        current: state.userGoals.find(goal => goal._id === action.payload)\n      }\n    case CLEAR_CURRENT_GOAL:\n      return {\n        ...state,\n        current: {}\n      }\n    case DELETE_GOALS:\n    case CLEAR_GOALS:\n      return { \n        ...state,\n        userGoals: [],\n        publicGoals: [],\n        friendGoals: [],\n        current: {},\n        error: null,\n        loading: true\n      }\n    default: \n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nconst CompetitionForm = props => {\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal,\n        updateGoal = goalContext.updateGoal,\n        goalCurrent = goalContext.goalCurrent,\n        clearCurrentGoal = goalContext.clearCurrentGoal;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlert = alertContext.clearAlert;\n  const competitionContext = useContext(CompetitionContext);\n  const addCompetition = competitionContext.addCompetition,\n        updateCompetition = competitionContext.updateCompetition;\n\n  const _useState = useState({\n    name: '',\n    duration: 28,\n    startDate: moment().startOf('day').format('YYYY-MM-DD'),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    isPrivate: false,\n    compId: null,\n    initialValue: 0,\n    started: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isMax = _useState4[0],\n        setIsMax = _useState4[1]; //control if current or not\n\n\n  useEffect(() => {\n    if (Object.entries(goalCurrent).length) {\n      setGoal(_objectSpread({}, goalCurrent, {\n        startDate: moment.utc(goalCurrent.startDate).startOf('day'),\n        initialValue: goalCurrent.tracker[0]\n      }));\n\n      if (moment(goalCurrent.startDate).startOf('day') < moment.utc().startOf('day')) {\n        setGoal(_objectSpread({}, goalCurrent, {\n          started: true,\n          initialValue: goalCurrent.tracker[0]\n        }));\n        setAlert('This competition has already begun, so some attributes cannot be changed.', true);\n      }\n    } //clear nonpersistant alert\n\n\n    return () => {\n      clearAlert();\n    }; //eslint-disable-next-line\n  }, []);\n  const message = Object.entries(goalCurrent).length ? 'Modify Competition' : 'Add Competition';\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        total = goal.total,\n        isPrivate = goal.isPrivate,\n        initialValue = goal.initialValue,\n        started = goal.started;\n  let time = moment.utc().startOf('day').diff(startDate, 'days');\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //verify start date not in past\n\n    if (time > 0 && !started) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    } //verify finish date is not in past (for goals that have started)\n\n\n    if (duration - time < 0) {\n      setAlert('Finish date cannot be in the past.');\n      return null;\n    } //try to submit \n\n\n    if (name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //add/update goal and tell user\n      if (message === 'Modify Competition') {\n        await updateGoal(goal);\n        setAlert('Competition updated!', true);\n        clearCurrentGoal();\n      } else {\n        await addGoal(goal);\n        setAlert('Competition added!', true);\n      }\n    } else setAlert('Please enter all fields.');\n  }; //redirect to new goal page\n\n\n  let history = useHistory();\n  useEffect(() => {\n    if (alert.msg === 'Goal updated!' || alert.msg === 'Goal added!') {\n      addCompetition(goalCurrent._id, isMax);\n      console.log(asdf);\n      history.push('/competition');\n    }\n  }, [alert]);\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') setGoal(_objectSpread({}, goal, {\n        [e.target.name]: ''\n      }));else setGoal(_objectSpread({}, goal, {\n        [e.target.name]: parseInt(e.target.value)\n      }));\n    } else if (e.target.name === 'type' && e.target.value === 'pass/fail') setGoal(_objectSpread({}, goal, {\n      total: 7,\n      type: 'pass/fail'\n    }));else setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleClick = e => {\n    setGoal(_objectSpread({}, goal, {\n      isPrivate: !isPrivate\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, message), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Competition Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(\"input\", {\n    disabled: started,\n    type: \"date\",\n    name: \"startDate\",\n    onChange: handleChange,\n    value: started ? moment.utc(startDate).format('YYYY-MM-DD') : moment(startDate).format('YYYY-MM-DD'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Competition Duration (days)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), type === 'pass/fail' && !Number.isInteger(duration / 7) && duration !== '' && React.createElement(\"span\", {\n    className: \"block small-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"*Competition duration will be adjusted to \", duration - duration % 7 + 7, \" days to use full weeks.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"What type of competition would you like?\", React.createElement(\"select\", {\n    disabled: started,\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"Pass/Fail  (e.g. Stretch every day)\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Total  (e.g. Run 100 miles)\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Difference  (e.g. Gain 10 lbs)\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, type === 'pass/fail' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \"How many days a week do you want participants to hit?\"), React.createElement(\"select\", {\n    disabled: started,\n    name: \"total\",\n    value: total,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Every day\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Six days a week\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Five days a week\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Four days a week\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Three days a week\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Twice a week\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Once a week\"))), type === 'difference' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"What is your (personal) start number?\"), React.createElement(\"input\", {\n    disabled: started,\n    type: \"number\",\n    name: \"initialValue\",\n    onChange: handleChange,\n    value: initialValue,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }))), type !== 'pass/fail' && React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"Units (e.g lbs or miles)\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, \"Who can see this competition?\"), React.createElement(\"label\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: !isPrivate,\n    onChange: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"slider round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"register-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, isPrivate ? 'Only participants can see this competition.' : 'Friends of participants can see this competition.')), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"How is this competition decided?\"), React.createElement(\"label\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isMax,\n    onChange: () => setIsMax(!isMax),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"slider round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"register-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, \"This competition is won by the user with the \", isMax ? 'highest' : 'lowest', \" cumulative value.\")), React.createElement(\"input\", {\n    type: \"submit\",\n    value: message,\n    className: \"btn btn-block btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  })));\n};\n\nexport default CompetitionForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionForm.js"],"names":["React","useState","useContext","useEffect","GoalContext","CompetitionContext","AlertContext","moment","useHistory","CompetitionForm","props","goalContext","addGoal","updateGoal","goalCurrent","clearCurrentGoal","alertContext","setAlert","clearAlert","competitionContext","addCompetition","updateCompetition","name","duration","startDate","startOf","format","type","units","total","isPrivate","compId","initialValue","started","goal","setGoal","isMax","setIsMax","Object","entries","length","utc","tracker","message","time","diff","handleSubmit","e","preventDefault","history","alert","msg","_id","console","log","asdf","push","handleChange","target","value","parseInt","handleClick","Number","isInteger"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nconst CompetitionForm = props => {\n  const goalContext = useContext(GoalContext);\n  const { addGoal, updateGoal, goalCurrent, clearCurrentGoal } = goalContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlert } = alertContext;\n\n  const competitionContext = useContext(CompetitionContext);\n  const { addCompetition, updateCompetition } = competitionContext;\n\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: 28,\n    startDate: moment().startOf('day').format('YYYY-MM-DD'),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    isPrivate: false,\n    compId: null,\n    initialValue: 0,\n    started: false\n  });\n\n  const [isMax, setIsMax] = useState(true);\n\n  //control if current or not\n  useEffect(() => {\n    if (Object.entries(goalCurrent).length) {\n      setGoal({ \n        ...goalCurrent, \n        startDate: moment.utc(goalCurrent.startDate).startOf('day'),\n        initialValue: goalCurrent.tracker[0]\n      });\n      if (moment(goalCurrent.startDate).startOf('day') < moment.utc().startOf('day')) {\n        setGoal({\n          ...goalCurrent, \n          started: true,\n          initialValue: goalCurrent.tracker[0] \n        })\n        setAlert('This competition has already begun, so some attributes cannot be changed.', true)\n      }\n    }\n    //clear nonpersistant alert\n    return () => {\n      clearAlert();\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const message = Object.entries(goalCurrent).length ? 'Modify Competition' : 'Add Competition';\n  \n  const { name, duration, startDate, type, units, total, isPrivate, initialValue, started } = goal;\n\n  let time = moment.utc().startOf('day').diff(startDate, 'days');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    //verify start date not in past\n    if(time > 0 && !started) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    }\n\n    //verify finish date is not in past (for goals that have started)\n    if(duration - time < 0){\n      setAlert('Finish date cannot be in the past.');\n      return null;\n    }\n\n    //try to submit \n    if(name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //add/update goal and tell user\n      if (message === 'Modify Competition') {\n        await updateGoal(goal);\n        setAlert('Competition updated!', true);\n        clearCurrentGoal();\n      } else {\n        await addGoal(goal);\n        setAlert('Competition added!', true);\n      }\n    }\n    else \n      setAlert('Please enter all fields.');\n  };\n\n  //redirect to new goal page\n  let history = useHistory();\n\n  useEffect(() => {\n    if (alert.msg === 'Goal updated!' || alert.msg === 'Goal added!') {\n      addCompetition(goalCurrent._id, isMax);\n      console.log(asdf);\n      history.push('/competition');\n    }\n  }, [alert])\n\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') \n        setGoal({ ...goal, [e.target.name]: ''});\n      else \n        setGoal({ ...goal, [e.target.name]: parseInt(e.target.value)});\n    }\n    else if (e.target.name === 'type' && e.target.value === 'pass/fail')\n      setGoal({ ...goal, total: 7, type: 'pass/fail' });\n    else\n      setGoal({\n        ...goal, \n        [e.target.name]: e.target.value\n      });\n  };\n\n  const handleClick = e => {\n    setGoal({ ...goal, isPrivate: !isPrivate });\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>{message}</h1>\n      <form onSubmit={handleSubmit} autoComplete='off'>\n        {/* Name */}\n        <div className=\"form-group\">\n          <label>Competition Name</label>\n          <input \n            type='text' \n            name='name' \n            onChange={handleChange}\n            value={name}\n            autoFocus={true}\n          />\n        </div>\n        {/* Start Date */}\n        <div className=\"form-group\">\n          <label>Start Date</label>\n          <input \n            disabled={started}\n            type='date' \n            name='startDate' \n            onChange={handleChange}\n            value={started ? moment.utc(startDate).format('YYYY-MM-DD') : moment(startDate).format('YYYY-MM-DD')}\n          />\n        </div>\n        {/* Duration */}\n        <div className=\"form-group\">\n          <label>Competition Duration (days)</label>\n          <input \n            type='number' \n            name='duration' \n            onChange={handleChange}\n            value={duration}\n          />\n          {type === 'pass/fail' && !(Number.isInteger(duration / 7)) && (duration !== '') &&\n            <span className='block small-text'>*Competition duration will be adjusted to {duration - (duration % 7) + 7} days to use full weeks.</span>\n          }\n        </div>\n        {/* Type */}\n        <div className=\"form-group\">\n          <label>What type of competition would you like?\n            <select\n              disabled={started}\n              name='type'\n              value={type}\n              onChange={handleChange}\n            >\n              <option value='pass/fail'>Pass/Fail  (e.g. Stretch every day)</option>\n              <option value='total'>Total  (e.g. Run 100 miles)</option>\n              <option value='difference'>Difference  (e.g. Gain 10 lbs)</option>\n            </select>  \n          </label>\n        </div>\n        {/* Total */}\n        <div className=\"form-group\">\n          {type === 'pass/fail' && (\n            <React.Fragment>\n              <label>\n                How many days a week do you want participants to hit?\n              </label>\n              <select\n                disabled={started}\n                name='total'\n                value={total}\n                onChange={handleChange}\n              >\n                <option value='7'>Every day</option>\n                <option value='6'>Six days a week</option>\n                <option value='5'>Five days a week</option>\n                <option value='4'>Four days a week</option>\n                <option value='3'>Three days a week</option>\n                <option value='2'>Twice a week</option>\n                <option value='1'>Once a week</option>\n              </select>  \n            </React.Fragment>\n          )}\n          {type === 'difference' && (\n            <React.Fragment>\n              <label>What is your (personal) start number?</label>\n              <input \n                disabled={started}\n                type='number' \n                name='initialValue' \n                onChange={handleChange}\n                value={initialValue}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n        </div>\n        {/* Units */}\n        {type !== 'pass/fail' && (\n          <div className=\"form-group\">\n            <label>Units (e.g lbs or miles)</label>\n            <input \n              type='text' \n              name='units' \n              placeholder='Units (Example: miles)' \n              onChange={handleChange}\n              value={units}\n            />\n          </div> \n        )}\n        {/* isPrivate */}\n        <div className=\"form-group\">\n          <label className='block'>\n            Who can see this competition?\n          </label>\n          <label className='switch'>\n            <input\n              type='checkbox'\n              checked={!isPrivate}\n              onChange={handleClick}\n            />\n            <span className='slider round'/>\n          </label>\n          <span className='register-span'>\n            {isPrivate ? 'Only participants can see this competition.' : 'Friends of participants can see this competition.'}\n          </span>\n        </div>\n        {/* isMax */}\n        <div className=\"form-group\">\n          <label className='block'>\n            How is this competition decided?\n          </label>\n          <label className='switch'>\n            <input\n              type='checkbox'\n              checked={isMax}\n              onChange={() => setIsMax(!isMax)}\n            />\n            <span className='slider round'/>\n          </label>\n          <span className='register-span'>\n            This competition is won by the user with the {isMax ? 'highest' : 'lowest'} cumulative value.\n          </span>\n        </div>\n        {/* Submit */}\n        <input \n          type='submit' \n          value={message} \n          className='btn btn-block btn-primary'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default CompetitionForm;"]},"metadata":{},"sourceType":"module"}
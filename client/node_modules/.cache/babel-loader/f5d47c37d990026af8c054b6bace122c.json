{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalItem.js\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport GoalContext from '../../contexts/goals/goalContext';\n\nconst GoalItem = ({\n  goal: {\n    _id,\n    name,\n    startDate,\n    duration,\n    tracker,\n    type,\n    units\n  },\n  setStatus\n}) => {\n  const goalContext = useContext(GoalContext);\n  const setCurrent = goalContext.setCurrent;\n  let time = moment.utc().startOf('day').diff(startDate, 'days') + 1;\n  if (time < 0) time = 0;else if (time > duration) {\n    setStatus(true, false);\n    return null;\n  }\n  setStatus(false, true); //calc progress\n\n  let progress = '';\n\n  if (type === 'pass/fail') {\n    let count = 0;\n\n    for (let i = 0; i < tracker.length; i++) {\n      if (tracker[i]) count++;\n    }\n\n    progress = `Success: ${count} / ${time}`;\n  } else if (type === 'total') {\n    let count = 0;\n\n    for (let i = 0; i < tracker.length; i++) {\n      count += tracker[i];\n    }\n\n    progress = `Total: ${count} ${units}`;\n  } else {\n    let temp = tracker.filter(value => value !== null);\n    let count = temp.pop() - tracker[0];\n    progress = `Change: ${count} ${units}`;\n  }\n\n  const handleClick = () => {\n    setCurrent(_id);\n  };\n\n  return React.createElement(\"li\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"vertical-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Link, {\n    onClick: handleClick,\n    to: `/goal/${_id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, name))), React.createElement(\"div\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, time > 0 ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Day: \", time, \" / \", duration), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, progress)) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Begins \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, moment.utc(startDate).format('MMM Do')))));\n};\n\nGoalItem.propTypes = {\n  goal: PropTypes.object.isRequired\n};\nexport default GoalItem;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalItem.js"],"names":["React","useContext","Link","PropTypes","moment","GoalContext","GoalItem","goal","_id","name","startDate","duration","tracker","type","units","setStatus","goalContext","setCurrent","time","utc","startOf","diff","progress","count","i","length","temp","filter","value","pop","handleClick","format","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport GoalContext from '../../contexts/goals/goalContext';\n\nconst GoalItem = ({goal: { _id, name, startDate, duration, tracker, type, units }, setStatus}) => {\n  const goalContext = useContext(GoalContext);\n  const { setCurrent } = goalContext;\n\n  let time = moment.utc().startOf('day').diff(startDate, 'days') + 1;\n  if (time < 0)\n    time = 0;\n  else if (time > duration) {\n    setStatus(true, false);\n    return null;\n  }\n\n  setStatus(false, true);\n\n  //calc progress\n  let progress = '';\n  if (type === 'pass/fail'){\n    let count = 0;\n    for (let i = 0; i < tracker.length; i++) {\n      if (tracker[i]) count++;\n    }\n    progress = `Success: ${count} / ${time}`\n  }\n  else if (type === 'total') {\n    let count = 0;\n    for (let i = 0; i < tracker.length; i++) {\n      count += tracker[i];\n    }\n    progress = `Total: ${count} ${units}`\n  }\n  else {\n    let temp = tracker.filter(value => value !== null)\n    let count = temp.pop() - tracker[0];\n    progress = `Change: ${count} ${units}`\n  }\n\n  const handleClick = () => {\n    setCurrent(_id);\n  };\n\n  return (\n    <li className='collection-item'>\n      <div className='flex'>\n        <h3 className='vertical-center'>\n          <Link onClick={handleClick} to={`/goal/${_id}`}>{name}</Link>\n        </h3>\n      </div>\n      <div className='hide-sm'>\n        {time > 0 ? (\n        <React.Fragment>\n          <span className='right'>Day: {time} / {duration}</span>\n          <br/>\n          <span className='right'>{progress}</span>\n        </React.Fragment>\n        ) : (\n        <React.Fragment>\n          <span className='right'>Begins </span>\n          <br/>\n          <span className='right'>{moment.utc(startDate).format('MMM Do')}</span>\n        </React.Fragment>\n        )}\n      </div>\n    </li>\n  );\n};\n\nGoalItem.propTypes = {\n  goal: PropTypes.object.isRequired\n}\n\nexport default GoalItem;"]},"metadata":{},"sourceType":"module"}
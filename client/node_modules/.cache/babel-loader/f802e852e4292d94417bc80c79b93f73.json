{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/friends/friendState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport FriendContext from './friendContext';\nimport FriendReducer from './friendReducer';\nimport { GET_FRIENDS, ADD_FRIEND, DELETE_FRIEND, SET_CURRENT_FRIEND, GET_CURRENT_FRIEND_GOALS, GET_CURRENT_FRIEND_FRIENDS, SET_CURRENT_FRIEND_GOAL, CLEAR_CURRENT_FRIEND, SET_FRIENDS_LOADING, FRIENDS_ERROR, CLEAR_FRIEND_ERRORS, CLEAR_FRIENDS, FILTER_FRIENDS, CLEAR_FRIENDS_FILTER } from '../types';\n\nconst FriendState = props => {\n  const initialState = {\n    friends: [],\n    friendIds: [],\n    friendCurrent: {},\n    friendsFiltered: null,\n    friendsError: null,\n    friendsLoading: true,\n    friendCurrentGoals: [],\n    friendCurrentFriends: [],\n    friendCurrentGoal: {}\n  };\n\n  const _useReducer = useReducer(FriendReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //get friends\n\n\n  const getFriends = async () => {\n    try {\n      //setLoading();\n      const res = await axios.get('/api/friends');\n      dispatch({\n        type: GET_FRIENDS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: FRIENDS_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //add friend\n\n\n  const addFriend = async _id => {\n    try {\n      //setLoading();\n      const res = await axios.put(`/api/friends/add/${_id}`);\n      dispatch({\n        type: ADD_FRIEND,\n        payload: res.data\n      });\n      getFriends();\n    } catch (err) {\n      dispatch({\n        type: FRIENDS_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //delete friend\n\n\n  const deleteFriend = async _id => {\n    try {\n      //setLoading();\n      await axios.put(`/api/friends/remove/${_id}`);\n      dispatch({\n        type: DELETE_FRIEND,\n        payload: _id\n      });\n      getFriends();\n    } catch (err) {\n      dispatch({\n        type: FRIENDS_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //set current friend\n\n\n  const setCurrentFriend = _id => {\n    dispatch({\n      type: SET_CURRENT_FRIEND,\n      payload: _id\n    });\n  }; //get current friend goals\n\n\n  const getCurrentFriendGoals = async _id => {\n    try {\n      setLoading();\n      const res = await axios.get(`/api/friends/goals/${_id}`);\n      dispatch({\n        type: GET_CURRENT_FRIEND_GOALS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: FRIENDS_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //get current friend friends\n\n\n  const getCurrentFriendFriends = async _id => {\n    try {\n      setLoading();\n      const res = await axios.get(`/api/friends/friends/${_id}`);\n      dispatch({\n        type: GET_CURRENT_FRIEND_FRIENDS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: FRIENDS_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //set current friend goal\n\n\n  const setCurrentFriendGoal = _id => {\n    dispatch({\n      type: SET_CURRENT_FRIEND_GOAL,\n      payload: _id\n    });\n  }; //clear current friend\n\n\n  const clearCurrentFriend = () => {\n    dispatch({\n      type: CLEAR_CURRENT_FRIEND\n    });\n  }; //clear friends\n\n\n  const clearFriends = () => {\n    dispatch({\n      type: CLEAR_FRIENDS\n    });\n  }; //set loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_FRIENDS_LOADING\n    });\n  }; //filter friends\n\n\n  const filterFriends = text => {\n    dispatch({\n      type: FILTER_FRIENDS,\n      payload: text\n    });\n  }; //clear filter\n\n\n  const clearFriendsFilter = () => {\n    dispatch({\n      type: CLEAR_FRIENDS_FILTER\n    });\n  };\n\n  return React.createElement(FriendContext.Provider, {\n    value: {\n      friends: state.friends,\n      friendIds: state.friendIds,\n      friendCurrent: state.friendCurrent,\n      friendsFiltered: state.friendsFiltered,\n      friendsError: state.friendsError,\n      friendsLoading: state.friendsLoading,\n      friendCurrentGoals: state.friendCurrentGoals,\n      friendCurrentFriends: state.friendCurrentFriends,\n      friendCurrentGoal: state.friendCurrentGoal,\n      getFriends,\n      addFriend,\n      deleteFriend,\n      setCurrentFriend,\n      getCurrentFriendGoals,\n      getCurrentFriendFriends,\n      setCurrentFriendGoal,\n      clearCurrentFriend,\n      filterFriends,\n      clearFriendsFilter,\n      clearFriends\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default FriendState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/friends/friendState.js"],"names":["React","useReducer","axios","FriendContext","FriendReducer","GET_FRIENDS","ADD_FRIEND","DELETE_FRIEND","SET_CURRENT_FRIEND","GET_CURRENT_FRIEND_GOALS","GET_CURRENT_FRIEND_FRIENDS","SET_CURRENT_FRIEND_GOAL","CLEAR_CURRENT_FRIEND","SET_FRIENDS_LOADING","FRIENDS_ERROR","CLEAR_FRIEND_ERRORS","CLEAR_FRIENDS","FILTER_FRIENDS","CLEAR_FRIENDS_FILTER","FriendState","props","initialState","friends","friendIds","friendCurrent","friendsFiltered","friendsError","friendsLoading","friendCurrentGoals","friendCurrentFriends","friendCurrentGoal","state","dispatch","getFriends","res","get","type","payload","data","err","response","msg","addFriend","_id","put","deleteFriend","setCurrentFriend","getCurrentFriendGoals","setLoading","getCurrentFriendFriends","setCurrentFriendGoal","clearCurrentFriend","clearFriends","filterFriends","text","clearFriendsFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport FriendContext from './friendContext';\nimport FriendReducer from './friendReducer';\nimport {\n  GET_FRIENDS,\n  ADD_FRIEND,\n  DELETE_FRIEND,\n  SET_CURRENT_FRIEND,\n  GET_CURRENT_FRIEND_GOALS,\n  GET_CURRENT_FRIEND_FRIENDS,\n  SET_CURRENT_FRIEND_GOAL,\n  CLEAR_CURRENT_FRIEND,\n  SET_FRIENDS_LOADING,\n  FRIENDS_ERROR,\n  CLEAR_FRIEND_ERRORS,\n  CLEAR_FRIENDS,\n  FILTER_FRIENDS,\n  CLEAR_FRIENDS_FILTER\n} from '../types';\n\nconst FriendState = props => {\n  const initialState = {\n    friends: [],\n    friendIds: [],\n    friendCurrent: {},\n    friendsFiltered: null,\n    friendsError: null,\n    friendsLoading: true,\n    friendCurrentGoals: [],\n    friendCurrentFriends: [],\n    friendCurrentGoal: {}\n  };\n\n  const [state, dispatch] = useReducer(FriendReducer, initialState);\n\n  //get friends\n  const getFriends = async () => {\n    try {\n      //setLoading();\n      const res = await axios.get('/api/friends');\n      dispatch({ type: GET_FRIENDS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: FRIENDS_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //add friend\n  const addFriend = async _id => {\n    try {\n      //setLoading();\n      const res = await axios.put(`/api/friends/add/${_id}`);\n      dispatch({ type: ADD_FRIEND, payload: res.data });\n      getFriends();\n    } catch (err) {\n      dispatch({ type: FRIENDS_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //delete friend\n  const deleteFriend = async _id => {\n    try {\n      //setLoading();\n      await axios.put(`/api/friends/remove/${_id}`);\n      dispatch({ type: DELETE_FRIEND, payload: _id });\n      getFriends();\n    } catch (err) {\n      dispatch({ type: FRIENDS_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //set current friend\n  const setCurrentFriend = _id => {\n    dispatch({ type: SET_CURRENT_FRIEND, payload: _id });\n  };\n\n  //get current friend goals\n  const getCurrentFriendGoals = async (_id) => {\n    try {\n      setLoading();\n      const res = await axios.get(`/api/friends/goals/${_id}`);\n      dispatch({ type: GET_CURRENT_FRIEND_GOALS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: FRIENDS_ERROR, payload: err.response.data.msg });\n    }\n  }\n\n  //get current friend friends\n  const getCurrentFriendFriends = async (_id) => {\n    try {\n      setLoading();\n      const res = await axios.get(`/api/friends/friends/${_id}`);\n      dispatch({ type: GET_CURRENT_FRIEND_FRIENDS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: FRIENDS_ERROR, payload: err.response.data.msg });\n    }\n  }\n\n  //set current friend goal\n  const setCurrentFriendGoal = (_id) => {\n    dispatch({ type: SET_CURRENT_FRIEND_GOAL, payload: _id });\n  };\n\n  //clear current friend\n  const clearCurrentFriend = () => {\n    dispatch({ type: CLEAR_CURRENT_FRIEND });\n  };\n\n  //clear friends\n  const clearFriends = () => {\n    dispatch({ type: CLEAR_FRIENDS });\n  };\n\n  //set loading\n  const setLoading = () => {\n    dispatch({ type: SET_FRIENDS_LOADING });\n  };\n\n  //filter friends\n  const filterFriends = text => {\n    dispatch({ type: FILTER_FRIENDS, payload: text});\n  };\n\n  //clear filter\n  const clearFriendsFilter = () => {\n    dispatch({ type: CLEAR_FRIENDS_FILTER });\n  }\n\n  return (\n    <FriendContext.Provider\n      value={{\n        friends: state.friends,\n        friendIds: state.friendIds,\n        friendCurrent: state.friendCurrent,\n        friendsFiltered: state.friendsFiltered,\n        friendsError: state.friendsError,\n        friendsLoading: state.friendsLoading,\n        friendCurrentGoals: state.friendCurrentGoals,\n        friendCurrentFriends: state.friendCurrentFriends,\n        friendCurrentGoal: state.friendCurrentGoal,\n        getFriends,\n        addFriend,\n        deleteFriend,\n        setCurrentFriend,\n        getCurrentFriendGoals,\n        getCurrentFriendFriends,\n        setCurrentFriendGoal,\n        clearCurrentFriend,\n        filterFriends,\n        clearFriendsFilter,\n        clearFriends\n    }}>\n      {props.children}\n    </FriendContext.Provider>\n  );\n};\n\nexport default FriendState;"]},"metadata":{},"sourceType":"module"}
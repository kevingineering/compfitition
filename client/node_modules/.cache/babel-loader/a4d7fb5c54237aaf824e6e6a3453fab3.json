{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_REQUESTS, ADD_REQUEST, DELETE_REQUEST, REQUEST_ERROR, CLEAR_REQUESTS_ERROR, CLEAR_REQUESTS, SET_REQUESTS_LOADING, SET_REQUEST_LOADING } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_REQUESTS:\n      return _objectSpread({}, state, {\n        requests: action.payload.requests,\n        requestsSent: action.payload.requests.map(request => request.requester === action.payload._id),\n        requestsReceived: action.payload.requests.map(request => request.requestee === action.payload._id),\n        requestsLoading: false\n      });\n\n    case ADD_REQUEST:\n      return _objectSpread({}, state, {\n        requests: [...state.requests, action.payload],\n        requestsSent: [...state.requestsSent, action.payload],\n        requestsLoading: false\n      });\n\n    case DELETE_REQUEST:\n      return _objectSpread({}, state, {\n        requests: state.requests.filter(request => request._id !== action.payload),\n        requestsSent: state.requestsSent.filter(request => request._id !== action.payload),\n        requestsReceived: state.requestsReceived.filter(request => request._id !== action.payload),\n        requestsLoading: false\n      });\n\n    case REQUEST_ERROR:\n      return _objectSpread({}, state, {\n        requestsError: action.payload,\n        requestsLoading: false\n      });\n\n    case CLEAR_REQUESTS_ERROR:\n      return _objectSpread({}, state, {\n        requestsError: null\n      });\n\n    case CLEAR_REQUESTS:\n      return _objectSpread({}, state, {\n        requests: [],\n        requestsSent: [],\n        requestsReceived: [],\n        requestsError: null,\n        requestsLoading: true\n      });\n\n    case SET_REQUESTS_LOADING:\n      return _objectSpread({}, state, {\n        requestsLoading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/requests/requestReducer.js"],"names":["GET_REQUESTS","ADD_REQUEST","DELETE_REQUEST","REQUEST_ERROR","CLEAR_REQUESTS_ERROR","CLEAR_REQUESTS","SET_REQUESTS_LOADING","SET_REQUEST_LOADING","state","action","type","requests","payload","requestsSent","map","request","requester","_id","requestsReceived","requestee","requestsLoading","filter","requestsError"],"mappings":";AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,oBALF,EAMEC,cANF,EAOEC,oBAPF,EAQEC,mBARF,QASO,UATP;AAWA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKV,YAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAAP,CAAeD,QAF3B;AAGEE,QAAAA,YAAY,EAAEJ,MAAM,CAACG,OAAP,CAAeD,QAAf,CAAwBG,GAAxB,CAA4BC,OAAO,IAAIA,OAAO,CAACC,SAAR,KAAsBP,MAAM,CAACG,OAAP,CAAeK,GAA5E,CAHhB;AAIEC,QAAAA,gBAAgB,EAAET,MAAM,CAACG,OAAP,CAAeD,QAAf,CAAwBG,GAAxB,CAA4BC,OAAO,IAAIA,OAAO,CAACI,SAAR,KAAsBV,MAAM,CAACG,OAAP,CAAeK,GAA5E,CAJpB;AAKEG,QAAAA,eAAe,EAAE;AALnB;;AAOF,SAAKnB,WAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B,CAFZ;AAGEC,QAAAA,YAAY,EAAE,CAAC,GAAGL,KAAK,CAACK,YAAV,EAAwBJ,MAAM,CAACG,OAA/B,CAHhB;AAIEQ,QAAAA,eAAe,EAAE;AAJnB;;AAMF,SAAKlB,cAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeU,MAAf,CAAsBN,OAAO,IAAIA,OAAO,CAACE,GAAR,KAAgBR,MAAM,CAACG,OAAxD,CAFZ;AAGEC,QAAAA,YAAY,EAAEL,KAAK,CAACK,YAAN,CAAmBQ,MAAnB,CAA0BN,OAAO,IAAIA,OAAO,CAACE,GAAR,KAAgBR,MAAM,CAACG,OAA5D,CAHhB;AAIEM,QAAAA,gBAAgB,EAAEV,KAAK,CAACU,gBAAN,CAAuBG,MAAvB,CAA8BN,OAAO,IAAIA,OAAO,CAACE,GAAR,KAAgBR,MAAM,CAACG,OAAhE,CAJpB;AAKEQ,QAAAA,eAAe,EAAE;AALnB;;AAOF,SAAKjB,aAAL;AACE,+BACKK,KADL;AAEEc,QAAAA,aAAa,EAAEb,MAAM,CAACG,OAFxB;AAGEQ,QAAAA,eAAe,EAAE;AAHnB;;AAKF,SAAKhB,oBAAL;AACE,+BACKI,KADL;AAEEc,QAAAA,aAAa,EAAE;AAFjB;;AAIF,SAAKjB,cAAL;AACE,+BACKG,KADL;AAEEG,QAAAA,QAAQ,EAAE,EAFZ;AAGEE,QAAAA,YAAY,EAAE,EAHhB;AAIEK,QAAAA,gBAAgB,EAAE,EAJpB;AAKEI,QAAAA,aAAa,EAAE,IALjB;AAMEF,QAAAA,eAAe,EAAE;AANnB;;AAQF,SAAKd,oBAAL;AACE,+BACKE,KADL;AAEEY,QAAAA,eAAe,EAAE;AAFnB;;AAIF;AACE,aAAOZ,KAAP;AAlDJ;AAoDD,CArDD","sourcesContent":["import {\n  GET_REQUESTS,\n  ADD_REQUEST,\n  DELETE_REQUEST,\n  REQUEST_ERROR,\n  CLEAR_REQUESTS_ERROR,\n  CLEAR_REQUESTS,\n  SET_REQUESTS_LOADING,\n  SET_REQUEST_LOADING\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_REQUESTS:\n      return {\n        ...state,\n        requests: action.payload.requests,\n        requestsSent: action.payload.requests.map(request => request.requester === action.payload._id),\n        requestsReceived: action.payload.requests.map(request => request.requestee === action.payload._id),\n        requestsLoading: false\n      }\n    case ADD_REQUEST:\n      return {\n        ...state,\n        requests: [...state.requests, action.payload],\n        requestsSent: [...state.requestsSent, action.payload],\n        requestsLoading: false\n      }\n    case DELETE_REQUEST:\n      return {\n        ...state,\n        requests: state.requests.filter(request => request._id !== action.payload),\n        requestsSent: state.requestsSent.filter(request => request._id !== action.payload),\n        requestsReceived: state.requestsReceived.filter(request => request._id !== action.payload),\n        requestsLoading: false\n      }\n    case REQUEST_ERROR:\n      return {\n        ...state,\n        requestsError: action.payload,\n        requestsLoading: false\n      }\n    case CLEAR_REQUESTS_ERROR:\n      return { \n        ...state,\n        requestsError: null\n      }\n    case CLEAR_REQUESTS:\n      return {\n        ...state, \n        requests: [],\n        requestsSent: [],\n        requestsReceived: [],\n        requestsError: null,\n        requestsLoading: true\n      }\n    case SET_REQUESTS_LOADING:\n      return {\n        ...state,\n        requestsLoading: true\n      }\n    default: \n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
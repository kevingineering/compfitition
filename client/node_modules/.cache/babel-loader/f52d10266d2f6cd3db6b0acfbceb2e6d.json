{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport { GET_GOALS, ADD_GOAL, DELETE_GOAL, UPDATE_GOAL, SET_CURRENT, CLEAR_CURRENT, SET_LOADING, GOAL_ERROR, CLEAR_ERRORS } from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goals: null,\n    current: null,\n    error: null,\n    loading: true\n  };\n\n  const _useReducer = useReducer(GoalReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //used for addGoal and updateGoal\n\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //get goals\n\n  const getGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/goals');\n      dispatch({\n        type: GET_GOALS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err\n      });\n    }\n  }; //add goal\n\n\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/goals', goal, config);\n      dispatch({\n        type: ADD_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err\n      });\n    }\n  }; //delete goal\n\n\n  const deleteGoal = async id => {\n    try {\n      setLoading();\n      await axios.delete(`/goals/${id}`);\n      dispatch({\n        type: DELETE_GOAL,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err\n      });\n    }\n  }; //update goal\n\n\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/goals/${goal.id}`, goal, config);\n      dispatch({\n        type: UPDATE_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err\n      });\n    }\n  }; //set loading\n\n\n  const setLoading = () => {\n    return {\n      type: SET_LOADING\n    };\n  }; //clear errors\n\n\n  const clearErrors = () => {}; //set current\n\n\n  const setCurrent = goal => {\n    dispatch({\n      type: SET_CURRENT\n    });\n  }; //clear current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  return React.createElement(GoalContext.Provider, {\n    value: {\n      goals: state.goals,\n      current: state.current,\n      error: state.error,\n      loading: state.loading,\n      getGoals,\n      addGoal,\n      deleteGoal,\n      setCurrent,\n      clearCurrent,\n      updateGoal,\n      clearErrors\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GoalState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js"],"names":["React","useReducer","axios","GoalContext","GoalReducer","GET_GOALS","ADD_GOAL","DELETE_GOAL","UPDATE_GOAL","SET_CURRENT","CLEAR_CURRENT","SET_LOADING","GOAL_ERROR","CLEAR_ERRORS","GoalState","props","initialState","goals","current","error","loading","state","dispatch","config","headers","getGoals","setLoading","res","get","type","payload","data","err","addGoal","goal","post","deleteGoal","id","delete","updateGoal","put","clearErrors","setCurrent","clearCurrent","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport {\n  GET_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  UPDATE_GOAL,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SET_LOADING,\n  GOAL_ERROR,\n  CLEAR_ERRORS\n} from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goals: null,\n    current: null,\n    error: null,\n    loading: true\n  };\n\n  const [state, dispatch] = useReducer(GoalReducer, initialState);\n\n  //used for addGoal and updateGoal\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  //get goals\n  const getGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/goals');\n      dispatch({ type: GET_GOALS, payload: res.data});\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err });\n    }\n  };\n\n  //add goal\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/goals', goal, config);\n      dispatch({ type: ADD_GOAL, payload: res.data});\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err });\n    }\n  };\n\n  //delete goal\n  const deleteGoal = async id => {\n    try {\n      setLoading();\n      await axios.delete(`/goals/${id}`);\n      dispatch({ type: DELETE_GOAL, payload: id });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err });\n    }\n  };\n\n  //update goal\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/goals/${goal.id}`, goal, config);\n      dispatch({ type: UPDATE_GOAL, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err });\n    }\n  };\n\n  //set loading\n  const setLoading = () => {\n    return {type: SET_LOADING}\n  };\n\n  //clear errors\n  const clearErrors = () => {\n\n  };\n\n  //set current\n  const setCurrent = goal => {\n    dispatch({ type: SET_CURRENT });\n  };\n\n  //clear current\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  return (\n    <GoalContext.Provider\n    value={{\n      goals: state.goals,\n      current: state.current,\n      error: state.error,\n      loading: state.loading,\n      getGoals,\n      addGoal,\n      deleteGoal,\n      setCurrent,\n      clearCurrent,\n      updateGoal,\n      clearErrors\n    }}>\n      {props.children}\n    </GoalContext.Provider>\n  )\n};\n\nexport default GoalState;"]},"metadata":{},"sourceType":"module"}
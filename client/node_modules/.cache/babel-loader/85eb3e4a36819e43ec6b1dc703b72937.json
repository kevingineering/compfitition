{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport { GET_GOALS, ADD_GOAL, DELETE_GOAL, UPDATE_GOAL, UPDATE_GOAL_TRACKER, SET_CURRENT_GOAL, CLEAR_CURRENT_GOAL, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOAL_ERRORS, CLEAR_GOALS } from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goals: [],\n    goalCurrent: {},\n    goalsError: null,\n    goalsLoading: true\n  };\n\n  const _useReducer = useReducer(GoalReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //set headers for addGoal, updateGoal, and updateGoalTracker\n\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; //get user goals\n\n  const getGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/goals');\n      dispatch({\n        type: GET_GOALS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //add goal\n\n\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/goals', goal, config);\n      dispatch({\n        type: ADD_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //delete goal\n\n\n  const deleteGoal = async _id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/goals/${_id}`);\n      dispatch({\n        type: DELETE_GOAL,\n        payload: _id\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //update goal\n\n\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/${goal._id}`, goal, config);\n      dispatch({\n        type: UPDATE_GOAL,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //update goal tracker\n\n\n  const updateGoalTracker = async (tracker, _id) => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/tracker/${_id}`, {\n        tracker\n      }, config);\n      dispatch({\n        type: UPDATE_GOAL_TRACKER,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: GOAL_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //set loading\n\n\n  const setLoading = () => {\n    return {\n      type: SET_GOAL_LOADING\n    };\n  }; //clear errors\n\n\n  const clearGoalErrors = () => {\n    dispatch({\n      type: CLEAR_GOAL_ERRORS\n    });\n  }; //set current\n\n\n  const setCurrentGoal = _id => {\n    dispatch({\n      type: SET_CURRENT_GOAL,\n      payload: _id\n    });\n  }; //clear current\n\n\n  const clearCurrentGoal = () => {\n    dispatch({\n      type: CLEAR_CURRENT_GOAL\n    });\n  }; //clear goals\n\n\n  const clearGoals = () => {\n    dispatch({\n      type: CLEAR_GOALS\n    });\n  };\n\n  return React.createElement(GoalContext.Provider, {\n    value: {\n      goals: state.goals,\n      goalCurrent: state.goalCurrent,\n      goalsError: state.goalsError,\n      goalsLoading: state.goalsLoading,\n      getGoals,\n      addGoal,\n      deleteGoal,\n      updateGoal,\n      updateGoalTracker,\n      clearGoalErrors,\n      setCurrentGoal,\n      clearCurrentGoal,\n      clearGoals\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GoalState;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalState.js"],"names":["React","useReducer","axios","GoalContext","GoalReducer","GET_GOALS","ADD_GOAL","DELETE_GOAL","UPDATE_GOAL","UPDATE_GOAL_TRACKER","SET_CURRENT_GOAL","CLEAR_CURRENT_GOAL","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOAL_ERRORS","CLEAR_GOALS","GoalState","props","initialState","goals","goalCurrent","goalsError","goalsLoading","state","dispatch","config","headers","getGoals","setLoading","res","get","type","payload","data","err","response","msg","addGoal","goal","post","deleteGoal","_id","delete","updateGoal","put","updateGoalTracker","tracker","clearGoalErrors","setCurrentGoal","clearCurrentGoal","clearGoals","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GoalContext from './goalContext';\nimport GoalReducer from './goalReducer';\nimport {\n  GET_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  UPDATE_GOAL,\n  UPDATE_GOAL_TRACKER,\n  SET_CURRENT_GOAL,\n  CLEAR_CURRENT_GOAL,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOAL_ERRORS,\n  CLEAR_GOALS\n} from '../types';\n\nconst GoalState = props => {\n  const initialState = {\n    goals: [],\n    goalCurrent: {},\n    goalsError: null,\n    goalsLoading: true\n  };\n\n  const [state, dispatch] = useReducer(GoalReducer, initialState);\n\n  //set headers for addGoal, updateGoal, and updateGoalTracker\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  //get user goals\n  const getGoals = async () => {\n    try {\n      setLoading();\n      const res = await axios.get('/api/goals');\n      dispatch({ type: GET_GOALS, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //add goal\n  const addGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.post('/api/goals', goal, config);\n      dispatch({ type: ADD_GOAL, payload: res.data});\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //delete goal\n  const deleteGoal = async _id => {\n    try {\n      setLoading();\n      await axios.delete(`/api/goals/${_id}`);\n      dispatch({ type: DELETE_GOAL, payload: _id });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //update goal\n  const updateGoal = async goal => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/${goal._id}`, goal, config);\n      dispatch({ type: UPDATE_GOAL, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  };\n\n  //update goal tracker\n  const updateGoalTracker = async (tracker, _id) => {\n    try {\n      setLoading();\n      const res = await axios.put(`/api/goals/tracker/${_id}`, {tracker}, config);\n      dispatch({ type: UPDATE_GOAL_TRACKER, payload: res.data });\n    } catch (err) {\n      dispatch({ type: GOAL_ERROR, payload: err.response.data.msg });\n    }\n  }\n  //set loading\n  const setLoading = () => {\n    return { type: SET_GOAL_LOADING }\n  };\n\n  //clear errors\n  const clearGoalErrors = () => {\n    dispatch({ type: CLEAR_GOAL_ERRORS });\n  };\n\n  //set current\n  const setCurrentGoal = _id => {\n    dispatch({ type: SET_CURRENT_GOAL, payload: _id });\n  };\n\n  //clear current\n  const clearCurrentGoal = () => {\n    dispatch({ type: CLEAR_CURRENT_GOAL });\n  };\n\n  //clear goals\n  const clearGoals = () => {\n    dispatch({ type: CLEAR_GOALS });\n  };\n\n  return (\n    <GoalContext.Provider\n    value={{\n      goals: state.goals,\n      goalCurrent: state.goalCurrent,\n      goalsError: state.goalsError,\n      goalsLoading: state.goalsLoading,\n      getGoals,\n      addGoal,\n      deleteGoal,\n      updateGoal,\n      updateGoalTracker,\n      clearGoalErrors,\n      setCurrentGoal,\n      clearCurrentGoal,\n      clearGoals\n    }}>\n      {props.children}\n    </GoalContext.Provider>\n  )\n};\n\nexport default GoalState;"]},"metadata":{},"sourceType":"module"}
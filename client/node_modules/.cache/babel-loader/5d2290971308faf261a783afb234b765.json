{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_USER_GOALS //GET_PUBLIC_GOALS,\n//GET_FRIEND_GOALS,\n, ADD_GOAL, DELETE_GOAL, DELETE_GOALS, UPDATE_GOAL, UPDATE_GOAL_TRACKER, SET_CURRENT_GOAL, CLEAR_CURRENT_GOAL, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOAL_ERRORS, CLEAR_GOALS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_USER_GOALS:\n      return _objectSpread({}, state, {\n        userGoals: action.payload,\n        loading: false\n      });\n\n    case ADD_GOAL:\n      return _objectSpread({}, state, {\n        userGoals: [...state.userGoals, action.payload],\n        loading: false\n      });\n\n    case DELETE_GOAL:\n      return _objectSpread({}, state, {\n        userGoals: state.userGoals.filter(goal => goal._id !== action.payload),\n        loading: false\n      });\n\n    case UPDATE_GOAL:\n    case UPDATE_GOAL_TRACKER:\n      return _objectSpread({}, state, {\n        userGoals: state.userGoals.map(goal => goal._id === action.payload._id ? action.payload : goal),\n        loading: false\n      });\n\n    case SET_GOAL_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GOAL_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    case CLEAR_GOAL_ERRORS:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    case SET_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        current: state.userGoals.find(goal => goal._id === action.payload)\n      });\n\n    case CLEAR_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        current: {}\n      });\n\n    case DELETE_GOALS:\n    case CLEAR_GOALS:\n      return _objectSpread({}, state, {\n        userGoals: [],\n        publicGoals: [],\n        friendGoals: [],\n        current: {},\n        error: null,\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalReducer.js"],"names":["GET_USER_GOALS","ADD_GOAL","DELETE_GOAL","DELETE_GOALS","UPDATE_GOAL","UPDATE_GOAL_TRACKER","SET_CURRENT_GOAL","CLEAR_CURRENT_GOAL","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOAL_ERRORS","CLEAR_GOALS","state","action","type","userGoals","payload","loading","filter","goal","_id","map","error","current","find","publicGoals","friendGoals"],"mappings":";AAAA,SACEA,cADF,CAEE;AACA;AAHF,EAIEC,QAJF,EAKEC,WALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,mBARF,EASEC,gBATF,EAUEC,kBAVF,EAWEC,gBAXF,EAYEC,UAZF,EAaEC,iBAbF,EAcEC,WAdF,QAeO,UAfP;AAiBA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKd,cAAL;AACE,+BACKY,KADL;AAEEG,QAAAA,SAAS,EAAEF,MAAM,CAACG,OAFpB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKhB,QAAL;AACE,+BACKW,KADL;AAEEG,QAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACG,SAAV,EAAqBF,MAAM,CAACG,OAA5B,CAFb;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKf,WAAL;AACE,+BACKU,KADL;AAEEG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBG,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAnD,CAFb;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKb,WAAL;AACA,SAAKC,mBAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,CAAgBM,GAAhB,CAAoBF,IAAI,IACjCA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAP,CAAeI,GAA5B,GAAkCP,MAAM,CAACG,OAAzC,GAAmDG,IAD1C,CAFb;AAIEF,QAAAA,OAAO,EAAE;AAJX;;AAMF,SAAKT,gBAAL;AACE,+BACKI,KADL;AAEEK,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKR,UAAL;AACE,+BACKG,KADL;AAEEU,QAAAA,KAAK,EAAET,MAAM,CAACG,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,iBAAL;AACE,+BACKE,KADL;AAEEU,QAAAA,KAAK,EAAE;AAFT;;AAIF,SAAKhB,gBAAL;AACE,+BACKM,KADL;AAEEW,QAAAA,OAAO,EAAEX,KAAK,CAACG,SAAN,CAAgBS,IAAhB,CAAqBL,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAjD;AAFX;;AAIF,SAAKT,kBAAL;AACE,+BACKK,KADL;AAEEW,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKpB,YAAL;AACA,SAAKQ,WAAL;AACE,+BACKC,KADL;AAEEG,QAAAA,SAAS,EAAE,EAFb;AAGEU,QAAAA,WAAW,EAAE,EAHf;AAIEC,QAAAA,WAAW,EAAE,EAJf;AAKEH,QAAAA,OAAO,EAAE,EALX;AAMED,QAAAA,KAAK,EAAE,IANT;AAOEL,QAAAA,OAAO,EAAE;AAPX;;AASF;AACE,aAAOL,KAAP;AAjEJ;AAmED,CApED","sourcesContent":["import {\n  GET_USER_GOALS,\n  //GET_PUBLIC_GOALS,\n  //GET_FRIEND_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  DELETE_GOALS,\n  UPDATE_GOAL,\n  UPDATE_GOAL_TRACKER,\n  SET_CURRENT_GOAL,\n  CLEAR_CURRENT_GOAL,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOAL_ERRORS,\n  CLEAR_GOALS\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_USER_GOALS:\n      return {\n        ...state, \n        userGoals: action.payload,\n        loading: false\n      }\n    case ADD_GOAL:\n      return {\n        ...state,\n        userGoals: [...state.userGoals, action.payload],\n        loading: false\n      }\n    case DELETE_GOAL:\n      return {\n        ...state,\n        userGoals: state.userGoals.filter(goal => goal._id !== action.payload),\n        loading: false\n      }\n    case UPDATE_GOAL:\n    case UPDATE_GOAL_TRACKER:\n      return {\n        ...state,\n        userGoals: state.userGoals.map(goal => \n          goal._id === action.payload._id ? action.payload : goal),\n        loading: false\n      }\n    case SET_GOAL_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case GOAL_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    case CLEAR_GOAL_ERRORS:\n      return {\n        ...state,\n        error: null\n      }\n    case SET_CURRENT_GOAL:\n      return {\n        ...state,\n        current: state.userGoals.find(goal => goal._id === action.payload)\n      }\n    case CLEAR_CURRENT_GOAL:\n      return {\n        ...state,\n        current: {}\n      }\n    case DELETE_GOALS:\n    case CLEAR_GOALS:\n      return { \n        ...state,\n        userGoals: [],\n        publicGoals: [],\n        friendGoals: [],\n        current: {},\n        error: null,\n        loading: true\n      }\n    default: \n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
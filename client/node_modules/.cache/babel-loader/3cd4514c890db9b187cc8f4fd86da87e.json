{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst GoalPassFail = ({\n  handleSave,\n  current: {\n    duration,\n    startDate,\n    total,\n    compId,\n    tracker,\n    completed\n  }\n}) => {\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlerts = alertContext.clearAlerts;\n\n  const _useState = useState(tracker),\n        _useState2 = _slicedToArray(_useState, 2),\n        record = _useState2[0],\n        setRecord = _useState2[1];\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  useEffect(() => {\n    setRecord(record.map((value, index) => {\n      if (index < time && value === null) {\n        value = false;\n      }\n\n      return value;\n    }));\n  }, []);\n  let success = 0;\n\n  for (let i = 0; i < record.length; i++) {\n    if (record[i] === true) success++;\n  } //event.target will get the icon and fail, but event.currentTarget will get the button every time\n\n\n  const handleClick = e => {\n    let clickLoc = parseInt(e.currentTarget.name);\n\n    if (time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    } else setRecord(record.map((value, index) => {\n      if (index === clickLoc) {\n        if (value === null || value === false) {\n          value = true;\n        } else value = false;\n      }\n\n      return value;\n    }));\n  };\n\n  const table = () => {\n    let list = [];\n\n    for (let i = 1; i <= duration / 7; i++) {\n      list.push(React.createElement(\"span\", {\n        className: \"table-row\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"table-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Week \", i, React.createElement(\"span\", {\n        className: \"hide-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" - \", moment(startDate.substring(0, 10)).add(7 * i, 'day').format('MMM Do'))), React.createElement(\"span\", {\n        className: \"table-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, buttons(i - 1))));\n    }\n\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n\n    for (let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(React.createElement(\"button\", {\n        className: `table-btn ${time === loc && 'table-btn-today'}`,\n        onClick: handleClick,\n        key: loc,\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, record[loc] && React.createElement(\"i\", {\n        className: \"fas fa-check success-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), !record[loc] && record[loc] !== null && React.createElement(\"i\", {\n        className: \"fas fa-times danger-color\",\n        name: loc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), record[loc] === null && ' '));\n    }\n\n    return list;\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, table()), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Start Date: \", moment(startDate).format('MMMM Do, YYYY')), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Success To Date: \", success, \" / \", time + 1, \" (\", success / (time + 1) * 100, \"%)\"), React.createElement(\"li\", {\n    className: \"table-info lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Success Total: \", success, \" / \", duration / 7 * total, \" (\", success / duration * 100, \"%)\")), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => handleSave(record),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Save Goal\"));\n};\n\nexport default GoalPassFail;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalPassFail.js"],"names":["React","useState","useContext","useEffect","moment","AlertContext","GoalPassFail","handleSave","current","duration","startDate","total","compId","tracker","completed","alertContext","setAlert","clearAlerts","record","setRecord","time","startOf","diff","map","value","index","success","i","length","handleClick","e","clickLoc","parseInt","currentTarget","name","setTimeout","table","list","push","substring","add","format","buttons","week","loc"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport moment from 'moment';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst GoalPassFail = ({handleSave, current: { duration, startDate, total, compId, tracker, completed }}) => {\n  const alertContext = useContext(AlertContext);\n  const {setAlert, clearAlerts} = alertContext;\n\n  const [record, setRecord] = useState(tracker);\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n\n  useEffect(() => {\n    setRecord(record.map((value, index) => {\n      if (index < time && value === null) {\n        value = false;\n      }\n      return value;\n    }));\n  }, []);\n\n  let success = 0;\n\n  for (let i = 0; i < record.length; i++ ) {\n    if (record[i] === true) \n      success++;\n  }\n\n  //event.target will get the icon and fail, but event.currentTarget will get the button every time\n  const handleClick = e => {\n    let clickLoc = parseInt(e.currentTarget.name);\n    if (time < clickLoc) {\n      setAlert(\"You can't record the future.\");\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    }\n    else setRecord(record.map((value, index) => {\n      if (index === clickLoc) {\n        if (value === null || value === false) {\n          value = true;\n        }\n        else value = false;\n      }\n      return value;\n    }))\n  };\n\n  const table = () => {\n    let list = [];\n    for(let i = 1; i <= duration / 7; i++) {\n      list.push(\n        <span className='table-row' key={i}>\n          <h3 className='table-label'>Week {i}<span className='hide-sm'> - {moment(startDate.substring(0, 10)).add(7*i, 'day').format('MMM Do')}</span></h3>\n          <span className='table-buttons'>\n            {buttons(i-1)}\n          </span>\n        </span>);\n    }\n    return list;\n  };\n\n  const buttons = week => {\n    let list = [];\n    for(let i = 0; i < total; i++) {\n      let loc = week * total + i;\n      list.push(\n        <button \n          className={`table-btn ${time === loc && 'table-btn-today'}`}\n          onClick={handleClick} \n          key={loc} \n          name={loc} \n        >\n          {record[loc] && <i className='fas fa-check success-color' name={loc}/>}\n          {!record[loc] && record[loc] !== null && <i className='fas fa-times danger-color' name={loc}/>}\n          {record[loc] === null && ' '}\n        </button>\n      )\n    }\n    return list;\n  };\n\n  return (\n    <React.Fragment>\n      <ul>\n        <li>\n          {table()}\n        </li>\n        <li className='table-info lr-border'>Start Date: {moment(startDate).format('MMMM Do, YYYY')}</li>\n        <li className='table-info lr-border'>Success To Date: {success} / {time + 1} ({success / (time + 1) * 100}%)</li>\n        <li className='table-info lr-border'>Success Total: {success} / {duration / 7 * total} ({success / duration * 100}%)</li>\n      </ul>\n      <button className='btn btn-primary btn-block' onClick={() => handleSave(record)}>\n        Save Goal\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default GoalPassFail;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport GoalPassFail from '../goals/GoalPassFail';\nimport GoalTotal from '../goals/GoalTotal';\nimport GoalDifference from '../goals/GoalDifference';\nimport moment from 'moment';\n\nconst CompetitionPage = props => {\n  const goalContext = useContext(GoalContext);\n  const goalCurrent = goalContext.goalCurrent,\n        clearCurrentGoal = goalContext.clearCurrentGoal,\n        goalsError = goalContext.goalsError,\n        updateGoalTracker = goalContext.updateGoalTracker;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlert = alertContext.clearAlert;\n  const competitionContext = useContext(CompetitionContext);\n  const getCompetition = competitionContext.getCompetition,\n        getCompetitionGoals = competitionContext.getCompetitionGoals,\n        competition = competitionContext.competition,\n        competitionLoading = competitionContext.competitionLoading,\n        competitionError = competitionContext.competitionError,\n        deleteCompetition = competitionContext.deleteCompetition,\n        clearCompetition = competitionContext.clearCompetition;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        deleteToggle = _useState2[0],\n        setDeleteToggle = _useState2[1];\n\n  const name = goalCurrent.name,\n        _id = goalCurrent._id,\n        type = goalCurrent.type,\n        startDate = goalCurrent.startDate,\n        duration = goalCurrent.duration,\n        compId = goalCurrent.compId;\n  !Object.entries(goalCurrent).length && props.history.push('/');\n  useEffect(() => {\n    if (goalCurrent.compId !== null) getCompetition(compId); //eslint-disable-next-line\n  }, [goalCurrent]);\n  useEffect(() => {\n    if (Object.entries(competion).length !== 0) getCompetitionGoals(compId); //eslint-disable-next-line\n  }, [competition]);\n  const goalId = competition.goalId,\n        userIds = competition.userIds,\n        adminIds = competition.adminIds,\n        isMax = competition.isMax;\n  let time = moment().startOf('day').diff(startDate, 'days');\n\n  const handleDelete = async () => {\n    await deleteCompetition(_id);\n\n    if (competitionError) {\n      setAlert(goalsError);\n    } else {\n      setAlert('Competition deleted!', true);\n      props.history.push('/');\n      clearCurrentGoal();\n      clearCompetition();\n    }\n  };\n\n  const handleSave = async record => {\n    await updateGoalTracker(record, _id);\n\n    if (goalsError) {\n      setAlert(goalsError);\n    } else {\n      setAlert('Goal saved!');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, !Object.entries(goalCurrent).length ? React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, name), type === 'pass/fail' && React.createElement(GoalPassFail, {\n    goal: goalCurrent,\n    handleSave: handleSave,\n    isOwner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), type === 'total' && React.createElement(GoalTotal, {\n    goal: goalCurrent,\n    handleSave: handleSave,\n    isOwner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), type === 'difference' && React.createElement(GoalDifference, {\n    goal: goalCurrent,\n    handleSave: handleSave,\n    isOwner: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), time <= duration && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/goalform\",\n    className: \"btn btn-primary btn-block center\",\n    onClick: clearAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Modify Goal\"), React.createElement(\"p\", {\n    className: \"lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), !deleteToggle && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    onClick: () => setDeleteToggle(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Delete Goal\")), deleteToggle && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"alert lr-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Are you sure you want to delete this goal? Deletions cannot be undone.\"), React.createElement(\"button\", {\n    className: \"btn btn-danger btn-split\",\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Yes\"), React.createElement(\"button\", {\n    className: \"btn btn-primary btn-split\",\n    onClick: () => setDeleteToggle(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"No\"))));\n};\n\nexport default CompetitionPage;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/competitions/CompetitionPage.js"],"names":["React","useContext","useState","useEffect","Link","GoalContext","AlertContext","CompetitionContext","GoalPassFail","GoalTotal","GoalDifference","moment","CompetitionPage","props","goalContext","goalCurrent","clearCurrentGoal","goalsError","updateGoalTracker","alertContext","setAlert","clearAlert","competitionContext","getCompetition","getCompetitionGoals","competition","competitionLoading","competitionError","deleteCompetition","clearCompetition","deleteToggle","setDeleteToggle","name","_id","type","startDate","duration","compId","Object","entries","length","history","push","competion","goalId","userIds","adminIds","isMax","time","startOf","diff","handleDelete","handleSave","record"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport CompetitionContext from '../../contexts/competitions/competitionContext';\nimport GoalPassFail from '../goals/GoalPassFail';\nimport GoalTotal from '../goals/GoalTotal';\nimport GoalDifference from '../goals/GoalDifference';\nimport moment from 'moment';\n\nconst CompetitionPage = props => {\n  const goalContext = useContext(GoalContext);\n  const { goalCurrent, clearCurrentGoal, goalsError, updateGoalTracker } = goalContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlert } = alertContext;\n\n  const competitionContext = useContext(CompetitionContext);\n  const { \n    getCompetition, \n    getCompetitionGoals, \n    competition, \n    competitionLoading, \n    competitionError, \n    deleteCompetition,\n    clearCompetition \n  } = competitionContext;\n\n  const [deleteToggle, setDeleteToggle] = useState(false);\n\n  const { name, _id, type, startDate, duration, compId } = goalCurrent;\n  !Object.entries(goalCurrent).length && props.history.push('/');\n\n  useEffect(() => {\n    if (goalCurrent.compId !== null)\n      getCompetition(compId);\n    //eslint-disable-next-line\n  }, [goalCurrent])\n\n  useEffect(() => {\n    if(Object.entries(competion).length !== 0)\n      getCompetitionGoals(compId);\n    //eslint-disable-next-line\n  }, [competition])\n\n  const {goalId, userIds, adminIds, isMax} = competition;\n\n  let time = moment().startOf('day').diff(startDate, 'days');\n  \n  const handleDelete = async () => {\n    await deleteCompetition(_id);\n    if (competitionError) {\n      setAlert(goalsError);\n    }\n    else {\n      setAlert('Competition deleted!', true);\n      props.history.push('/');\n      clearCurrentGoal();\n      clearCompetition();\n    }\n  };\n\n  const handleSave = async (record) => {\n    await updateGoalTracker(record, _id);\n    if (goalsError) {\n      setAlert(goalsError);\n    }\n    else {\n      setAlert('Goal saved!');\n    }\n  }\n\n  return (\n    <div className='form-container'>\n    {!Object.entries(goalCurrent).length ? (\n      <h2>Loading...</h2>\n    ) : (\n      <React.Fragment>\n        <h2 className='collection-header'>{name}</h2>\n        {type === 'pass/fail' && \n          <GoalPassFail goal={goalCurrent} handleSave={handleSave} isOwner={true}/>}\n        {type === 'total' && \n          <GoalTotal goal={goalCurrent} handleSave={handleSave} isOwner={true}/>}\n        {type === 'difference' && \n          <GoalDifference goal={goalCurrent} handleSave={handleSave} isOwner={true}/>}\n        {time <= duration &&\n          <React.Fragment>\n            <Link \n              to='/goalform' \n              className='btn btn-primary btn-block center' \n              onClick={clearAlert}\n            >\n              Modify Goal\n            </Link>\n            <p className='lr-border'/>\n          </React.Fragment>\n        }\n        {!deleteToggle &&\n          <React.Fragment>\n            <button \n              className='btn btn-primary btn-block' \n              onClick={() => setDeleteToggle(true)}\n            >\n              Delete Goal\n            </button>\n          </React.Fragment>\n        }\n        {/*Delete module*/}\n        {deleteToggle && (\n          <React.Fragment>\n            <hr/>\n            <span className='alert lr-border'>\n              Are you sure you want to delete this goal? Deletions cannot be undone.\n            </span>\n            <button\n              className='btn btn-danger btn-split'\n              onClick={handleDelete}\n            >Yes</button>\n            <button\n              className='btn btn-primary btn-split'\n              onClick={() => setDeleteToggle(false)}\n            >No</button>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )}\n    </div>\n  )\n}\n\nexport default CompetitionPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/auth/Login.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../../contexts/auth/authContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst Login = props => {\n  const authContext = useContext(AuthContext);\n  const loginUser = authContext.loginUser,\n        userError = authContext.userError,\n        clearUserErrors = authContext.clearUserErrors,\n        isAuthenticated = authContext.isAuthenticated;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlert = alertContext.clearAlert; //redirect if authenticated, set alert if error\n\n  useEffect(() => {\n    if (isAuthenticated) props.history.push('/');\n\n    if (userError) {\n      setAlert(userError);\n      clearUserErrors();\n    } //eslint-disable-next-line\n\n  }, [isAuthenticated, userError, props.history]); //clear alert before redirect\n\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }; //eslint-disable-next-line\n  }, []);\n\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const email = user.email,\n        password = user.password;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await loginUser(user);\n  };\n\n  const handleChange = e => {\n    setUser(_objectSpread({}, user, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Account Login\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    name: \"email\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    value: password,\n    name: \"password\",\n    onChange: handleChange,\n    autoComplete: \"currentPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Log In\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/auth/Login.js"],"names":["React","useState","useEffect","useContext","AuthContext","AlertContext","Login","props","authContext","loginUser","userError","clearUserErrors","isAuthenticated","alertContext","setAlert","clearAlert","history","push","email","password","user","setUser","handleSubmit","e","preventDefault","handleChange","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../../contexts/auth/authContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\n\nconst Login = props => {\n  const authContext = useContext(AuthContext);\n  const { loginUser, userError, clearUserErrors, isAuthenticated } = authContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlert } = alertContext;\n\n  //redirect if authenticated, set alert if error\n  useEffect(() => {\n    if (isAuthenticated)\n      props.history.push('/');\n\n    if (userError) {\n      setAlert(userError);\n      clearUserErrors();\n    }\n    //eslint-disable-next-line\n  }, [isAuthenticated, userError, props.history]);\n\n  //clear alert before redirect\n  useEffect(() => {\n    return () => {\n      clearAlert();\n    }\n    //eslint-disable-next-line\n  }, []);\n\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = user;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await loginUser(user);\n  }\n\n  const handleChange = e => {\n    setUser({...user, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div className='form-container'>\n      <h1>Account Login</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor='email'>Email Address</label>\n          <input\n            type='email'\n            value={email}\n            name='email'\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            value={password}\n            name='password'\n            onChange={handleChange}\n            autoComplete='currentPassword'\n          />\n        </div>\n        <input \n          type='submit'\n          value='Log In'\n          className='btn btn-primary btn-block'\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
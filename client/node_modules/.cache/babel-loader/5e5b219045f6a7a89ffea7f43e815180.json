{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_GOALS, ADD_GOAL, DELETE_GOAL, UPDATE_GOAL, SET_CURRENT, CLEAR_CURRENT, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOAL_ERRORS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_GOALS:\n      return _objectSpread({}, state, {\n        goals: action.payload,\n        loading: false\n      });\n\n    case ADD_GOAL:\n      return _objectSpread({}, state, {\n        goals: [...state.goals, action.payload],\n        loading: false\n      });\n\n    case DELETE_GOAL:\n      return _objectSpread({}, state, {\n        goals: state.goals.filter(goal => goal.id !== action.payload),\n        loading: false\n      });\n\n    case UPDATE_GOAL:\n      return _objectSpread({}, state, {\n        goals: state.goals.map(goal => goal.id === action.payload.id ? action.payload : goal),\n        loading: false\n      });\n\n    case SET_GOAL_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GOAL_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    case CLEAR_GOAL_ERRORS:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalReducer.js"],"names":["GET_GOALS","ADD_GOAL","DELETE_GOAL","UPDATE_GOAL","SET_CURRENT","CLEAR_CURRENT","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOAL_ERRORS","state","action","type","goals","payload","loading","filter","goal","id","map","error","current"],"mappings":";AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,aANF,EAOEC,gBAPF,EAQEC,UARF,EASEC,iBATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,SAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKb,QAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,OAAxB,CAFT;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKZ,WAAL;AACE,+BACKO,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYG,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAA9C,CAFT;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKX,WAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYM,GAAZ,CAAgBF,IAAI,IACzBA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA3B,GAAgCP,MAAM,CAACG,OAAvC,GAAiDG,IAD5C,CAFT;AAIEF,QAAAA,OAAO,EAAE;AAJX;;AAMF,SAAKR,gBAAL;AACE,+BACKG,KADL;AAEEK,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKP,UAAL;AACE,+BACKE,KADL;AAEEU,QAAAA,KAAK,EAAET,MAAM,CAACG,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,iBAAL;AACE,+BACKC,KADL;AAEEU,QAAAA,KAAK,EAAE;AAFT;;AAIF,SAAKf,WAAL;AACE,+BACKK,KADL;AAEEW,QAAAA,OAAO,EAAEV,MAAM,CAACG;AAFlB;;AAIF,SAAKR,aAAL;AACE,+BACKI,KADL;AAEEW,QAAAA,OAAO,EAAE;AAFX;;AAIF;AACE,aAAOX,KAAP;AArDJ;AAuDD,CAxDD","sourcesContent":["import {\n  GET_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  UPDATE_GOAL,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOAL_ERRORS\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_GOALS:\n      return {\n        ...state, \n        goals: action.payload,\n        loading: false\n      }\n    case ADD_GOAL:\n      return {\n        ...state,\n        goals: [...state.goals, action.payload],\n        loading: false\n      }\n    case DELETE_GOAL:\n      return {\n        ...state,\n        goals: state.goals.filter(goal => goal.id !== action.payload),\n        loading: false\n      }\n    case UPDATE_GOAL:\n      return {\n        ...state,\n        goals: state.goals.map(goal => \n          goal.id === action.payload.id ? action.payload : goal),\n        loading: false\n      }\n    case SET_GOAL_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case GOAL_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    case CLEAR_GOAL_ERRORS:\n      return {\n        ...state,\n        error: null\n      }\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      }\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      }\n    default: \n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
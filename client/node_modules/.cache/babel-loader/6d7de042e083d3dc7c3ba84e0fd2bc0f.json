{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/Friend/FriendGoals.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FriendGoals = () => {\n  const friendContext = useContext(FriendContext);\n  const friendCurrent = friendContext.friendCurrent,\n        getCurrentFriendGoals = friendContext.getCurrentFriendGoals; //get friend 'friends' and 'public' goals \n\n  useEffect(() => {\n    getCurrentFriendGoals(friendCurrent._id); //eslint-disable-next-line\n  }, [friendCurrent]); // //sort current from past goals\n  // const [activeGoals, setActiveGoals] = useState([]);\n  // const [pastGoals, setPastGoals] = useState([]);\n  // //determine if there are active and/or past goals\n  // useEffect(() => {\n  //   let tempActive = userGoals.filter(goal => \n  //     (moment().startOf('day').diff(goal.startDate, 'days') + 1) <= goal.duration);\n  //   let tempPast = userGoals.filter(goal => \n  //     (moment().startOf('day').diff(goal.startDate, 'days') + 1) > goal.duration);\n  //   setActiveGoals(tempActive);\n  //   setPastGoals(tempPast);\n  // }, [userGoals]);\n  // //active goals\n  // let activeItems = null;\n  // if (loading) {\n  //   activeItems = (\n  //     <li className='collection-item'>\n  //       Loading...\n  //     </li>\n  //   )\n  // }\n  // else if (activeGoals.length === 0) {\n  //   activeItems = (\n  //     <li className='collection-item center collection-item-block'>\n  //       <p className='width-250'>\n  //         You have no goals. \n  //         <br/>\n  //         I'm not judging, but you should add a few to make us both feel better.\n  //       </p>\n  //     </li>\n  //   );\n  // }\n  // else {\n  //   activeItems = (\n  //     <React.Fragment>\n  //       {activeGoals.map(goal => <GoalItem goal={goal} key={goal._id} />)}\n  //     </React.Fragment>\n  //   );\n  // }\n  // //past goals\n  // let pastItems = null;\n  // if (pastGoals.length !== 0) {\n  //   pastItems = (\n  //     <React.Fragment>\n  //       {pastGoals.map(goal => <GoalItem goal={goal} key={goal._id} />)}\n  //     </React.Fragment>\n  //   );\n  // }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  });\n};\n\nexport default FriendGoals;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/friends/Friend/FriendGoals.js"],"names":["React","useContext","useEffect","Link","FriendGoals","friendContext","FriendContext","friendCurrent","getCurrentFriendGoals","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,aAAa,GAAGJ,UAAU,CAACK,aAAD,CAAhC;AADwB,QAEhBC,aAFgB,GAEyBF,aAFzB,CAEhBE,aAFgB;AAAA,QAEDC,qBAFC,GAEyBH,aAFzB,CAEDG,qBAFC,EAIxB;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,qBAAqB,CAACD,aAAa,CAACE,GAAf,CAArB,CADc,CAEd;AACD,GAHQ,EAGN,CAACF,aAAD,CAHM,CAAT,CALwB,CAUxB;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAkBD,CApFD;;AAsFA,eAAeH,WAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst FriendGoals = () => {\n  const friendContext = useContext(FriendContext);\n  const { friendCurrent, getCurrentFriendGoals } = friendContext;\n\n  //get friend 'friends' and 'public' goals \n  useEffect(() => {\n    getCurrentFriendGoals(friendCurrent._id);\n    //eslint-disable-next-line\n  }, [friendCurrent])\n  \n  // //sort current from past goals\n  // const [activeGoals, setActiveGoals] = useState([]);\n  // const [pastGoals, setPastGoals] = useState([]);\n\n  // //determine if there are active and/or past goals\n  // useEffect(() => {\n  //   let tempActive = userGoals.filter(goal => \n  //     (moment().startOf('day').diff(goal.startDate, 'days') + 1) <= goal.duration);\n    \n  //   let tempPast = userGoals.filter(goal => \n  //     (moment().startOf('day').diff(goal.startDate, 'days') + 1) > goal.duration);\n\n  //   setActiveGoals(tempActive);\n  //   setPastGoals(tempPast);\n  // }, [userGoals]);\n\n  // //active goals\n  // let activeItems = null;\n\n  // if (loading) {\n  //   activeItems = (\n  //     <li className='collection-item'>\n  //       Loading...\n  //     </li>\n  //   )\n  // }\n  // else if (activeGoals.length === 0) {\n  //   activeItems = (\n  //     <li className='collection-item center collection-item-block'>\n  //       <p className='width-250'>\n  //         You have no goals. \n  //         <br/>\n  //         I'm not judging, but you should add a few to make us both feel better.\n  //       </p>\n  //     </li>\n  //   );\n  // }\n  // else {\n  //   activeItems = (\n  //     <React.Fragment>\n  //       {activeGoals.map(goal => <GoalItem goal={goal} key={goal._id} />)}\n  //     </React.Fragment>\n  //   );\n  // }\n\n  // //past goals\n  // let pastItems = null;\n\n  // if (pastGoals.length !== 0) {\n  //   pastItems = (\n  //     <React.Fragment>\n  //       {pastGoals.map(goal => <GoalItem goal={goal} key={goal._id} />)}\n  //     </React.Fragment>\n  //   );\n  // }\n\n  return (\n    <React.Fragment>\n      {/* <ul className='collection'>\n        <li className='collection-header'>\n          <h2>{name}'s Goals</h2>\n        </li>\n        {activeItems}\n      </ul>\n      {pastGoals.length !== 0 && \n        <ul className='collection'>\n          <li className='collection-header'>\n            <h2>{name}'s Past Goals</h2>\n          </li>\n          {pastItems}\n        </ul>\n      } */}\n    </React.Fragment>\n  )\n}\n\nexport default FriendGoals;"]},"metadata":{},"sourceType":"module"}
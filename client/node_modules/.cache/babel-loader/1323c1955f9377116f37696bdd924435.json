{"ast":null,"code":"import _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/Goals.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport GoalItem from './GoalItem';\nimport moment from 'moment';\n\nconst Goals = () => {\n  const goalContext = useContext(GoalContext);\n  const getUserGoals = goalContext.getUserGoals,\n        userGoals = goalContext.userGoals,\n        loading = goalContext.loading;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeGoals = _useState2[0],\n        setActiveGoals = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pastGoals = _useState4[0],\n        setPastGoals = _useState4[1];\n\n  useEffect(() => {\n    getUserGoals(); //eslint-disable-next-line\n  }, []); //determine if there are active and/or past goals\n\n  useEffect(() => {\n    let tempActive = userGoals.filter(goal => moment().startOf('day').diff(goal.startDate, 'days') + 1 <= goal.duration);\n    let tempPast = userGoals.filter(goal => moment().startOf('day').diff(goal.startDate, 'days') + 1 > goal.duration);\n    setActiveGoals(tempActive);\n    setPastGoals(tempPast);\n  }, [userGoals]); //active goals\n\n  let activeItems = null;\n\n  if (loading) {\n    activeItems = React.createElement(\"li\", {\n      className: \"collection-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Loading...\"));\n  } else if (activeGoals.length === 0) {\n    const message = `You have no goals :( \\n I'm sure that's not true, add your goals here!`;\n    activeItems = React.createElement(\"li\", {\n      className: \"collection-item center collection-item-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, message, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), message);\n  } else {\n    activeItems = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, activeGoals.map(goal => React.createElement(GoalItem, {\n      goal: goal,\n      key: goal._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  } //past goals\n\n\n  let pastItems = null;\n\n  if (pastGoals.length !== 0) {\n    pastItems = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, pastGoals.map(goal => React.createElement(GoalItem, {\n      goal: goal,\n      key: goal._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Current Goals\")), activeItems, React.createElement(\"li\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/goalform\",\n    className: \"text-secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \" Add Goal\")))), pastGoals.length !== 0 && React.createElement(\"ul\", {\n    className: \"collection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Past Goals\")), pastItems));\n};\n\nexport default Goals;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/Goals.js"],"names":["React","useContext","useEffect","useState","Link","GoalContext","GoalItem","moment","Goals","goalContext","getUserGoals","userGoals","loading","activeGoals","setActiveGoals","pastGoals","setPastGoals","tempActive","filter","goal","startOf","diff","startDate","duration","tempPast","activeItems","length","message","map","_id","pastItems"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport GoalItem from './GoalItem';\nimport moment from 'moment';\n\nconst Goals = () => {\n  const goalContext = useContext(GoalContext);\n  const { getUserGoals, userGoals, loading } = goalContext;\n  \n  const [activeGoals, setActiveGoals] = useState([]);\n  const [pastGoals, setPastGoals] = useState([]);\n\n  useEffect(() => {\n    getUserGoals();\n    //eslint-disable-next-line\n  }, []);\n\n  //determine if there are active and/or past goals\n  useEffect(() => {\n    let tempActive = userGoals.filter(goal => \n      (moment().startOf('day').diff(goal.startDate, 'days') + 1) <= goal.duration);\n    \n    let tempPast = userGoals.filter(goal => \n      (moment().startOf('day').diff(goal.startDate, 'days') + 1) > goal.duration);\n\n    setActiveGoals(tempActive);\n    setPastGoals(tempPast);\n  }, [userGoals]);\n\n  //active goals\n  let activeItems = null;\n\n  if (loading) {\n    activeItems = (\n      <li className='collection-item'>\n        <h6>Loading...</h6>\n      </li>\n    )\n  }\n  else if (activeGoals.length === 0) {\n    const message = `You have no goals :( \\n I'm sure that's not true, add your goals here!`\n    activeItems = (\n      <li className='collection-item center collection-item-block'>\n        {message} \n        <br/>\n        {message}\n      </li>\n    );\n  }\n  else {\n    activeItems = (\n      <React.Fragment>\n        {activeGoals.map(goal => <GoalItem goal={goal} key={goal._id} />)}\n      </React.Fragment>\n    );\n  }\n\n  //past goals\n  let pastItems = null;\n\n  if (pastGoals.length !== 0) {\n    pastItems = (\n      <React.Fragment>\n        {pastGoals.map(goal => <GoalItem goal={goal} key={goal._id} />)}\n      </React.Fragment>\n    );\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <ul className='collection'>\n        <li className='collection-header'>\n          <h2>Current Goals</h2>\n        </li>\n        {activeItems}\n        <li className='collection-footer'>\n          <Link to='/goalform' className='text-secondary'>\n            <p><i className='fas fa-plus'/> Add Goal</p>\n          </Link>\n        </li>\n      </ul>\n      {pastGoals.length !== 0 && \n        <ul className='collection'>\n          <li className='collection-header'>\n            <h2>Past Goals</h2>\n          </li>\n          {pastItems}\n        </ul>\n      }\n    </React.Fragment>\n  );\n};\n\nexport default Goals;"]},"metadata":{},"sourceType":"module"}
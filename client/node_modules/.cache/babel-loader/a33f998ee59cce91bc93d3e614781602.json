{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext'; //alert context\n\nconst GoalForm = () => {\n  const _useState = useState({\n    name: '',\n    duration: '',\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: '',\n    privacy: 'only me',\n    compId: '',\n    assume: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1];\n\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        frequency = goal.frequency,\n        privacy = goal.privacy,\n        compId = goal.compId,\n        assume = goal.assume;\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && duration && startDate && type && frequency) addGoal(goal);\n    setGoal({\n      name: '',\n      duration: '',\n      startDate: '',\n      type: '',\n      units: '',\n      frequency: '',\n      privacy: '',\n      compId: '',\n      assume: ''\n    }); //else\n    //show alert\n  };\n\n  const handleChange = e => {\n    setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"What type of goal would you like?\"), React.createElement(\"select\", {\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Yes / No\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Total\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Difference\")));\n};\n\nexport default GoalForm;\n/* <div>\n  <h1>Add Goal</h1>\n  <label>What type of goal would you like?\n      <select\n        name='type'\n        value={type}\n        onChange={handleChange}>\n        <option value='pass/fail'>Yes / No</option>\n        <option value='total'>Total</option>\n        <option value='difference'>Difference</option>\n      </select>  \n    </label>\n     <label>How many days a week?\n      <select\n        name='frequency'\n        value={frequency}\n        onChange={handleChange}>\n        <option value='pass/fail'>Daily</option>\n        <option value='total'>Six days a week</option>\n        <option value='total'>Five days a week</option>\n        <option value='total'>Four days a week</option>\n        <option value='total'>Three days a week</option>\n        <option value='total'>Two days a week</option>\n        <option value='total'>Once a week</option>\n      </select>  \n    </label>\n     <label>Who can see your goal?\n      <select\n        name='privacy'\n        value={privacy}\n        onChange={handleChange}>\n        <option value='pass/fail'>Only Me</option>\n        <option value='total'>Friends</option>\n        <option value='difference'>Public</option>\n      </select>  \n    </label>\n   <form onSubmit={e => handleSubmit(e)}>\n      <label>If you miss logging your progress, should we assume you achieved or did not achieve your goal?\n      <input\n        name='assume'\n        type='checkbox'\n        check={assume}\n        onChange={handleChange}\n      />\n    </label>\n     <input \n      type='text' \n      name='name' \n      placeholder='Goal Name' \n      onChange={handleChange}\n      value={name}\n      autoFocus={true}\n    />\n    <input \n      type='number' \n      name='duration' \n      placeholder='Duration (days)' \n      onChange={handleChange}\n      value={duration}\n    />\n    <input \n      type='date' \n      name='startDate' \n      placeholder='Start Date' \n      onChange={handleChange}\n      value={startDate}\n    />\n    <input \n      type='text' \n      name='units' \n      placeholder='Units (Example: miles)' \n      onChange={handleChange}\n      value={units}\n    />\n    <p>Who do you want to be able to see your goal?</p>\n    <input \n      type='checkbox' \n      name='privacy' \n      placeholder='Units (Example: miles)' \n      onChange={handleChange}\n      checked={privacy}\n    /> \n    <input \n      type='submit' \n      value='Add Goal' \n    />\n  </form>\nYes / No (Did I or did I not succeed today? e.g. Went to the gym)\nTotal (How many did I achieve? e.g. Ran three miles)\nDifference (How much now compared to the beginning? e.g. Lost 15 lbs)\n</div> */","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","GoalContext","GoalForm","name","duration","startDate","Date","now","type","units","frequency","privacy","compId","assume","goal","setGoal","goalContext","addGoal","handleSubmit","e","preventDefault","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\n//alert context\n\nconst GoalForm = () => {\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: '',\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: '',\n    privacy: 'only me',\n    compId: '',\n    assume: ''\n  });\n  const {name, duration, startDate, type, units, frequency, privacy, compId, assume } = goal;\n\n  const goalContext = useContext(GoalContext);\n  const { addGoal } = goalContext;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(name && duration && startDate && type && frequency)\n      addGoal(goal);\n      setGoal({\n        name: '',\n        duration: '',\n        startDate: '',\n        type: '',\n        units: '',\n        frequency: '',\n        privacy: '',\n        compId: '',\n        assume: ''\n      });\n    //else\n      //show alert\n  };\n\n  const handleChange = e => {\n    setGoal({\n      ...goal, \n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <div className=\"\">\n      <label>What type of goal would you like?</label>\n      <select\n        name='type'\n        value={type}\n        onChange={handleChange}>\n        <option value='pass/fail'>Yes / No</option>\n        <option value='total'>Total</option>\n        <option value='difference'>Difference</option>\n      </select>  \n    </div>\n  )\n}\n\nexport default GoalForm;\n\n    /* <div>\n      <h1>Add Goal</h1>\n      <label>What type of goal would you like?\n          <select\n            name='type'\n            value={type}\n            onChange={handleChange}>\n            <option value='pass/fail'>Yes / No</option>\n            <option value='total'>Total</option>\n            <option value='difference'>Difference</option>\n          </select>  \n        </label>\n\n        <label>How many days a week?\n          <select\n            name='frequency'\n            value={frequency}\n            onChange={handleChange}>\n            <option value='pass/fail'>Daily</option>\n            <option value='total'>Six days a week</option>\n            <option value='total'>Five days a week</option>\n            <option value='total'>Four days a week</option>\n            <option value='total'>Three days a week</option>\n            <option value='total'>Two days a week</option>\n            <option value='total'>Once a week</option>\n          </select>  \n        </label>\n\n        <label>Who can see your goal?\n          <select\n            name='privacy'\n            value={privacy}\n            onChange={handleChange}>\n            <option value='pass/fail'>Only Me</option>\n            <option value='total'>Friends</option>\n            <option value='difference'>Public</option>\n          </select>  \n        </label>\n\n      <form onSubmit={e => handleSubmit(e)}>\n\n\n        <label>If you miss logging your progress, should we assume you achieved or did not achieve your goal?\n          <input\n            name='assume'\n            type='checkbox'\n            check={assume}\n            onChange={handleChange}\n          />\n        </label>\n\n        <input \n          type='text' \n          name='name' \n          placeholder='Goal Name' \n          onChange={handleChange}\n          value={name}\n          autoFocus={true}\n        />\n        <input \n          type='number' \n          name='duration' \n          placeholder='Duration (days)' \n          onChange={handleChange}\n          value={duration}\n        />\n        <input \n          type='date' \n          name='startDate' \n          placeholder='Start Date' \n          onChange={handleChange}\n          value={startDate}\n        />\n        <input \n          type='text' \n          name='units' \n          placeholder='Units (Example: miles)' \n          onChange={handleChange}\n          value={units}\n        />\n        <p>Who do you want to be able to see your goal?</p>\n        <input \n          type='checkbox' \n          name='privacy' \n          placeholder='Units (Example: miles)' \n          onChange={handleChange}\n          checked={privacy}\n        /> \n        <input \n          type='submit' \n          value='Add Goal' \n        />\n      </form>\n\nYes / No (Did I or did I not succeed today? e.g. Went to the gym)\nTotal (How many did I achieve? e.g. Ran three miles)\nDifference (How much now compared to the beginning? e.g. Lost 15 lbs)\n    </div> */\n\n"]},"metadata":{},"sourceType":"module"}
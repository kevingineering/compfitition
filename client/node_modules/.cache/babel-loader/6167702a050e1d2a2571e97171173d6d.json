{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext'; //alert context\n\nconst GoalForm = () => {\n  const _useState = useState({\n    name: '',\n    duration: '',\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: 1,\n    total: 1,\n    privacy: 'only me',\n    compId: '',\n    assume: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1];\n\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        frequency = goal.frequency,\n        total = goal.total,\n        privacy = goal.privacy,\n        compId = goal.compId,\n        assume = goal.assume;\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal;\n  let label = null;\n\n  if (type === 'pass/fail') {\n    setGoal(_objectSpread({}, goal, {\n      total: 0\n    }));\n    label = 'How many days a week do you want to work?';\n  } else {\n    setGoal(_objectSpread({}, goal, {\n      frequency: 7\n    }));\n    if (type === 'total') label = 'What total number do you want to hit?';else label = 'What difference do you want to achieve?';\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name && duration && startDate && type && frequency) addGoal(goal);\n    setGoal({\n      name: '',\n      duration: '',\n      startDate: '',\n      type: '',\n      units: '',\n      frequency: '',\n      privacy: '',\n      compId: '',\n      assume: ''\n    }); //else\n    //show alert\n  };\n\n  const handleChange = e => {\n    setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Add Goal\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Goal Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Goal Duration (days)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"What type of goal would you like?\", React.createElement(\"select\", {\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Pass/Fail (e.g. I went to the gym today)\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Total (e.g. I ran three miles today)\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Difference (e.g. I lost three pounds this month)\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, label, label === 'pass/fail' ? React.createElement(\"select\", {\n    name: \"frequency\",\n    value: frequency,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Daily\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Six days a week\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Five days a week\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Four days a week\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Three days a week\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Twice a week\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Once a week\"), React.createElement(\"option\", {\n    value: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Once a month\")) : React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Who can see your goal?\", React.createElement(\"select\", {\n    name: \"privacy\",\n    value: privacy,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Only Me\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Friends\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Public\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    placeholder: \"Start Date\",\n    onChange: handleChange,\n    value: startDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Who do you want to be able to see your goal?\"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"privacy\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    checked: privacy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add Goal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  })), \"Yes / No (Did I or did I not succeed today? e.g. Went to the gym) Total (How many did I achieve? e.g. Ran three miles) Difference (How much now compared to the beginning? e.g. Lost 15 lbs)\");\n};\n\nexport default GoalForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","GoalContext","GoalForm","name","duration","startDate","Date","now","type","units","frequency","total","privacy","compId","assume","goal","setGoal","goalContext","addGoal","label","handleSubmit","e","preventDefault","handleChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\n//alert context\n\nconst GoalForm = () => {\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: '',\n    startDate: Date.now(),\n    type: 'pass/fail',\n    units: '',\n    frequency: 1,\n    total: 1,\n    privacy: 'only me',\n    compId: '',\n    assume: false\n  });\n\n  const {name, duration, startDate, type, units, frequency, total, privacy, compId, assume } = goal;\n\n  const goalContext = useContext(GoalContext);\n  const { addGoal } = goalContext;\n\n  let label = null;\n\n  if (type === 'pass/fail') {\n    setGoal({ \n      ...goal,\n      total: 0\n    })\n    label = 'How many days a week do you want to work?';\n  }\n  else {\n    setGoal({\n      ...goal, \n      frequency: 7\n    });\n    if (type === 'total')\n      label = 'What total number do you want to hit?';\n    else\n      label = 'What difference do you want to achieve?';\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(name && duration && startDate && type && frequency)\n      addGoal(goal);\n      setGoal({\n        name: '',\n        duration: '',\n        startDate: '',\n        type: '',\n        units: '',\n        frequency: '',\n        privacy: '',\n        compId: '',\n        assume: ''\n      });\n    //else\n      //show alert\n  };\n\n  const handleChange = e => {\n    setGoal({\n      ...goal, \n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>Add Goal</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Goal Name</label>\n          <input \n            type='text' \n            name='name' \n            onChange={handleChange}\n            value={name}\n            autoFocus={true}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Goal Duration (days)</label>\n          <input \n            type='number' \n            name='duration' \n            onChange={handleChange}\n            value={duration}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>What type of goal would you like?\n            <select\n              name='type'\n              value={type}\n              onChange={handleChange}>\n              <option value='pass/fail'>Pass/Fail (e.g. I went to the gym today)</option>\n              <option value='total'>Total (e.g. I ran three miles today)</option>\n              <option value='difference'>Difference (e.g. I lost three pounds this month)</option>\n            </select>  \n          </label>\n        </div>\n        <div className=\"form-group\">\n          <label>{label}\n            {label === 'pass/fail' ? (\n              <select\n                name='frequency'\n                value={frequency}\n                onChange={handleChange}>\n                <option value='7'>Daily</option>\n                <option value='6'>Six days a week</option>\n                <option value='5'>Five days a week</option>\n                <option value='4'>Four days a week</option>\n                <option value='3'>Three days a week</option>\n                <option value='2'>Twice a week</option>\n                <option value='1'>Once a week</option>\n                <option value='30'>Once a month</option>\n              </select>  \n            ) : (\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n              />\n            )}\n          </label>\n        </div>\n        <div className=\"form-group\">\n          <label>Who can see your goal?\n            <select\n              name='privacy'\n              value={privacy}\n              onChange={handleChange}>\n              <option value='pass/fail'>Only Me</option>\n              <option value='total'>Friends</option>\n              <option value='difference'>Public</option>\n            </select>  \n          </label>\n        </div>\n        <div className=\"form-group\">\n        </div>\n        <div className=\"form-group\">\n        </div>\n\n\n\n\n\n\n\n\n\n\n        <input \n          type='date' \n          name='startDate' \n          placeholder='Start Date' \n          onChange={handleChange}\n          value={startDate}\n        />\n        <input \n          type='text' \n          name='units' \n          placeholder='Units (Example: miles)' \n          onChange={handleChange}\n          value={units}\n        />\n        <p>Who do you want to be able to see your goal?</p>\n        <input \n          type='checkbox' \n          name='privacy' \n          placeholder='Units (Example: miles)' \n          onChange={handleChange}\n          checked={privacy}\n        /> \n        <input \n          type='submit' \n          value='Add Goal' \n        />\n      </form>\n\nYes / No (Did I or did I not succeed today? e.g. Went to the gym)\nTotal (How many did I achieve? e.g. Ran three miles)\nDifference (How much now compared to the beginning? e.g. Lost 15 lbs)\n    </div>\n  )\n}\n\nexport default GoalForm;\n\n\n\n    \n\n"]},"metadata":{},"sourceType":"module"}
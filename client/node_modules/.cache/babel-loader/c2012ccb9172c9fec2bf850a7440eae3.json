{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_GOALS, ADD_GOAL, DELETE_GOAL, UPDATE_GOAL, UPDATE_GOAL_TRACKER, SET_CURRENT_GOAL, CLEAR_CURRENT_GOAL, SET_GOAL_LOADING, GOAL_ERROR, CLEAR_GOALS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_GOALS:\n      return _objectSpread({}, state, {\n        goals: action.payload,\n        goalsLoading: false\n      });\n\n    case ADD_GOAL:\n      return _objectSpread({}, state, {\n        goals: [...state.goals, action.payload],\n        goalCurrent: action.payload,\n        goalsLoading: false\n      });\n\n    case DELETE_GOAL:\n      return _objectSpread({}, state, {\n        goals: state.goals.filter(goal => goal._id !== action.payload),\n        goalsLoading: false\n      });\n\n    case UPDATE_GOAL:\n    case UPDATE_GOAL_TRACKER:\n      return _objectSpread({}, state, {\n        goals: state.goals.map(goal => goal._id === action.payload._id ? action.payload : goal),\n        goalsLoading: false,\n        goalCurrent: action.payload\n      });\n\n    case SET_GOAL_LOADING:\n      return _objectSpread({}, state, {\n        goalsLoading: true\n      });\n\n    case GOAL_ERROR:\n      return _objectSpread({}, state, {\n        goalsError: action.payload,\n        goalsLoading: false\n      });\n\n    case SET_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        goalCurrent: state.goals.find(goal => goal._id === action.payload)\n      });\n\n    case CLEAR_CURRENT_GOAL:\n      return _objectSpread({}, state, {\n        goalCurrent: {}\n      });\n\n    case CLEAR_GOALS:\n      return _objectSpread({}, state, {\n        goals: [],\n        goalCurrent: {},\n        goalsError: null,\n        goalsLoading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/contexts/goals/goalReducer.js"],"names":["GET_GOALS","ADD_GOAL","DELETE_GOAL","UPDATE_GOAL","UPDATE_GOAL_TRACKER","SET_CURRENT_GOAL","CLEAR_CURRENT_GOAL","SET_GOAL_LOADING","GOAL_ERROR","CLEAR_GOALS","state","action","type","goals","payload","goalsLoading","goalCurrent","filter","goal","_id","map","goalsError","find"],"mappings":";AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,mBALF,EAMEC,gBANF,EAOEC,kBAPF,EAQEC,gBARF,EASEC,UATF,EAUEC,WAVF,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKZ,SAAL;AACE,+BACKU,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFhB;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKd,QAAL;AACE,+BACKS,KADL;AAEEG,QAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiBF,MAAM,CAACG,OAAxB,CAFT;AAGEE,QAAAA,WAAW,EAAEL,MAAM,CAACG,OAHtB;AAIEC,QAAAA,YAAY,EAAE;AAJhB;;AAMF,SAAKb,WAAL;AACE,+BACKQ,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYI,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAA/C,CAFT;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKZ,WAAL;AACA,SAAKC,mBAAL;AACE,+BACKM,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYO,GAAZ,CAAgBF,IAAI,IACzBA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAAP,CAAeK,GAA5B,GAAkCR,MAAM,CAACG,OAAzC,GAAmDI,IAD9C,CAFT;AAIIH,QAAAA,YAAY,EAAE,KAJlB;AAKEC,QAAAA,WAAW,EAAEL,MAAM,CAACG;AALtB;;AAOF,SAAKP,gBAAL;AACE,+BACKG,KADL;AAEEK,QAAAA,YAAY,EAAE;AAFhB;;AAIF,SAAKP,UAAL;AACE,+BACKE,KADL;AAEEW,QAAAA,UAAU,EAAEV,MAAM,CAACG,OAFrB;AAGEC,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKV,gBAAL;AACE,+BACKK,KADL;AAEEM,QAAAA,WAAW,EAAEN,KAAK,CAACG,KAAN,CAAYS,IAAZ,CAAiBJ,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACG,OAA7C;AAFf;;AAIF,SAAKR,kBAAL;AACE,+BACKI,KADL;AAEEM,QAAAA,WAAW,EAAE;AAFf;;AAIF,SAAKP,WAAL;AACE,+BACKC,KADL;AAEEG,QAAAA,KAAK,EAAE,EAFT;AAGEG,QAAAA,WAAW,EAAE,EAHf;AAIEK,QAAAA,UAAU,EAAE,IAJd;AAKEN,QAAAA,YAAY,EAAE;AALhB;;AAOF;AACE,aAAOL,KAAP;AA3DJ;AA6DD,CA9DD","sourcesContent":["import {\n  GET_GOALS,\n  ADD_GOAL,\n  DELETE_GOAL,\n  UPDATE_GOAL,\n  UPDATE_GOAL_TRACKER,\n  SET_CURRENT_GOAL,\n  CLEAR_CURRENT_GOAL,\n  SET_GOAL_LOADING,\n  GOAL_ERROR,\n  CLEAR_GOALS\n} from '../types';\n\nexport default (state, action) => {\n  switch(action.type) {\n    case GET_GOALS:\n      return {\n        ...state, \n        goals: action.payload,\n        goalsLoading: false\n      }\n    case ADD_GOAL:\n      return {\n        ...state,\n        goals: [...state.goals, action.payload],\n        goalCurrent: action.payload,\n        goalsLoading: false\n      }\n    case DELETE_GOAL:\n      return {\n        ...state,\n        goals: state.goals.filter(goal => goal._id !== action.payload),\n        goalsLoading: false\n      }\n    case UPDATE_GOAL:\n    case UPDATE_GOAL_TRACKER:\n      return {\n        ...state,\n        goals: state.goals.map(goal => \n          goal._id === action.payload._id ? action.payload : goal),\n          goalsLoading: false,\n        goalCurrent: action.payload\n      }\n    case SET_GOAL_LOADING:\n      return {\n        ...state,\n        goalsLoading: true\n      }\n    case GOAL_ERROR:\n      return {\n        ...state,\n        goalsError: action.payload,\n        goalsLoading: false\n      }\n    case SET_CURRENT_GOAL:\n      return {\n        ...state,\n        goalCurrent: state.goals.find(goal => goal._id === action.payload)\n      }\n    case CLEAR_CURRENT_GOAL:\n      return {\n        ...state,\n        goalCurrent: {}\n      }\n    case CLEAR_GOALS:\n      return { \n        ...state,\n        goals: [],\n        goalCurrent: {},\n        goalsError: null,\n        goalsLoading: true\n      }\n    default: \n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\n\nconst GoalForm = props => {\n  const goalContext = useContext(GoalContext);\n  const addGoal = goalContext.addGoal,\n        updateGoal = goalContext.updateGoal,\n        current = goalContext.current,\n        clearCurrent = goalContext.clearCurrent;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert,\n        clearAlerts = alertContext.clearAlerts;\n\n  const _useState = useState({\n    name: '',\n    duration: 28,\n    startDate: moment(),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    privacy: 'only me',\n    sign: true,\n    initialValue: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        goal = _useState2[0],\n        setGoal = _useState2[1]; //determine whether or not goal has already started\n\n\n  let started = false; //control if current or not\n\n  useEffect(() => {\n    if (Object.entries(current).length) {\n      setGoal(_objectSpread({}, current, {\n        sign: total >= 0,\n        startDate: moment(current.startDate.substring(0, 10))\n      }));\n\n      if (moment(current.startDate) < moment.now()) {\n        started = true;\n        setAlert('This goal has already begun, so some attributes cannot be changed.');\n      }\n    } //eslint-disable-next-line\n\n  }, []);\n  const message = Object.entries(current).length ? 'Modify Goal' : 'Add Goal';\n  const name = goal.name,\n        duration = goal.duration,\n        startDate = goal.startDate,\n        type = goal.type,\n        units = goal.units,\n        total = goal.total,\n        privacy = goal.privacy,\n        sign = goal.sign,\n        initialValue = goal.initialValue;\n\n  const handleSubmit = async e => {\n    let time = moment().startOf('day').diff(startDate, 'days');\n    e.preventDefault();\n    clearAlerts(); //verify start date not in past\n\n    if (time > 0) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    } //set sign on type 'difference'\n\n\n    if (!sign) setGoal(_objectSpread({}, goal, {\n      total: total * -1\n    }));\n\n    if (name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //readjust duration if using 'pass/fail'\n      if (type === 'pass/fail') setGoal(_objectSpread({}, goal, {\n        duration: duration - duration % 7 + 7\n      })); //fix date\n\n      setGoal(_objectSpread({}, goal, {\n        startDate: moment(startDate)\n      })); //add/update goal and tell user\n\n      if (message === 'Modify Goal') {\n        await updateGoal(goal);\n        setAlert('Goal updated!');\n        clearCurrent();\n      } else {\n        await addGoal(goal);\n        setAlert('Goal added!');\n      } //redirect to homepage and clear alerts\n\n\n      props.history.push('/');\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    } else setAlert('Please enter all fields.');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') setGoal(_objectSpread({}, goal, {\n        [e.target.name]: ''\n      }));else setGoal(_objectSpread({}, goal, {\n        [e.target.name]: parseInt(e.target.value)\n      }));\n    } else setGoal(_objectSpread({}, goal, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, message), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Goal Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    onChange: handleChange,\n    value: name,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Start Date\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"startDate\",\n    onChange: !started && handleChange,\n    value: moment(startDate).format('YYYY-MM-DD'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Goal Duration (days)\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"duration\",\n    onChange: handleChange,\n    value: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), type === 'pass/fail' && !Number.isInteger(duration / 7) && duration !== '' && React.createElement(\"span\", {\n    className: \"block small-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"*Goal duration will be adjusted to \", duration - duration % 7 + 7, \" days to use full weeks.\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"What type of goal would you like?\", React.createElement(\"select\", {\n    name: \"type\",\n    value: type,\n    onChange: handleChange,\n    disabled: started,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"pass/fail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Pass/Fail  (e.g. Stretch every day)\"), React.createElement(\"option\", {\n    value: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Total  (e.g. Run 100 miles)\"), React.createElement(\"option\", {\n    value: \"difference\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Difference  (e.g. Gain 10 lbs)\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, type === 'pass/fail' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"How many days a week do you want to hit your goal?\"), React.createElement(\"select\", {\n    name: \"total\",\n    value: total,\n    onChange: handleChange,\n    disabled: started,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"7\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Every day\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Six days a week\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Five days a week\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Four days a week\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Three days a week\"), React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Twice a week\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Once a week\"))), type === 'total' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"What total number do you want to hit?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), type === 'difference' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"What is your current number?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"initialValue\",\n    onChange: handleChange,\n    value: initialValue,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"What number do you want to achieve?\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"total\",\n    onChange: handleChange,\n    value: total,\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Who can see your goal?\", React.createElement(\"select\", {\n    name: \"privacy\",\n    value: privacy,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"only me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"Only Me\"), React.createElement(\"option\", {\n    value: \"friends\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"My Friends\"), React.createElement(\"option\", {\n    value: \"public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Everyone\")))), type !== 'pass/fail' && React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Units (e.g lbs or miles)\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"units\",\n    placeholder: \"Units (Example: miles)\",\n    onChange: handleChange,\n    value: units,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: message,\n    className: \"btn btn-block btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })));\n};\n\nexport default GoalForm;","map":{"version":3,"sources":["/home/kevin/Documents/js_html_css/fitness_website/second_start/client/src/components/goals/GoalForm.js"],"names":["React","useState","useContext","useEffect","GoalContext","AlertContext","moment","GoalForm","props","goalContext","addGoal","updateGoal","current","clearCurrent","alertContext","setAlert","clearAlerts","name","duration","startDate","type","units","total","privacy","sign","initialValue","goal","setGoal","started","Object","entries","length","substring","now","message","handleSubmit","e","time","startOf","diff","preventDefault","history","push","setTimeout","handleChange","target","value","parseInt","format","Number","isInteger"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport GoalContext from '../../contexts/goals/goalContext';\nimport AlertContext from '../../contexts/alerts/alertContext';\nimport moment from 'moment';\n\nconst GoalForm = props => {\n  const goalContext = useContext(GoalContext);\n  const { addGoal, updateGoal, current, clearCurrent } = goalContext;\n\n  const alertContext = useContext(AlertContext);\n  const { setAlert, clearAlerts } = alertContext;\n\n  const [goal, setGoal] = useState({\n    name: '',\n    duration: 28,\n    startDate: moment(),\n    type: 'pass/fail',\n    units: '',\n    total: 7,\n    privacy: 'only me',\n    sign: true,\n    initialValue: 0\n  });\n\n  //determine whether or not goal has already started\n  let started = false;\n\n  //control if current or not\n  useEffect(() => {\n    if (Object.entries(current).length) {\n      setGoal({ ...current, sign: (total >= 0), startDate: moment(current.startDate.substring(0,10))});\n      if (moment(current.startDate) < moment.now()) {\n        started = true;\n        setAlert('This goal has already begun, so some attributes cannot be changed.')\n      }\n    }\n      //eslint-disable-next-line\n  }, [])\n\n  const message = Object.entries(current).length ? 'Modify Goal' : 'Add Goal';\n\n  const { name, duration, startDate, type, units, total, privacy, sign, initialValue } = goal;\n\n  const handleSubmit = async (e) => {\n    let time = moment().startOf('day').diff(startDate, 'days');\n    e.preventDefault();\n    clearAlerts();\n    //verify start date not in past\n    if(time > 0) {\n      setAlert('Start date cannot be in the past.');\n      return null;\n    }\n    //set sign on type 'difference'\n    if(!sign)\n      setGoal({ ...goal, total: total * -1 })\n    if(name && duration && startDate && type && total && (units || type === 'pass/fail')) {\n      //readjust duration if using 'pass/fail'\n      if (type === 'pass/fail')\n        setGoal({ ...goal, duration: duration - (duration % 7) + 7 });\n      //fix date\n      setGoal({ ...goal, startDate: moment(startDate)});\n      //add/update goal and tell user\n      if (message === 'Modify Goal') {\n        await updateGoal(goal);\n        setAlert('Goal updated!');\n        clearCurrent();\n      } else {\n        await addGoal(goal);\n        setAlert('Goal added!');\n      }\n      \n      //redirect to homepage and clear alerts\n      props.history.push('/');\n      setTimeout(() => {\n        clearAlerts();\n      }, 2000);\n    }\n    else \n      setAlert('Please enter all fields.');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'duration' || e.target.name === 'total' || e.target.name === 'initialValue') {\n      if (e.target.value === '') \n        setGoal({\n          ...goal,\n          [e.target.name]: ''\n        });\n      else \n        setGoal({\n          ...goal,\n          [e.target.name]: parseInt(e.target.value)\n        });\n    }\n    else\n      setGoal({\n        ...goal, \n        [e.target.name]: e.target.value\n      });\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>{message}</h1>\n      <form onSubmit={handleSubmit} autoComplete='off'>\n        {/* Name */}\n        <div className=\"form-group\">\n          <label>Goal Name</label>\n          <input \n            type='text' \n            name='name' \n            onChange={handleChange}\n            value={name}\n            autoFocus={true}\n          />\n        </div>\n        {/* Start Date */}\n        <div className=\"form-group\">\n          <label>Start Date</label>\n          <input \n            type='date' \n            name='startDate' \n            onChange={!started && handleChange}\n            value={moment(startDate).format('YYYY-MM-DD')}\n          />\n        </div>\n        {/* Duration */}\n        <div className=\"form-group\">\n          <label>Goal Duration (days)</label>\n          <input \n            type='number' \n            name='duration' \n            onChange={handleChange}\n            value={duration}\n          />\n          {type === 'pass/fail' && !(Number.isInteger(duration / 7)) && (duration !== '') &&\n            <span className='block small-text'>*Goal duration will be adjusted to {duration - (duration % 7) + 7} days to use full weeks.</span>\n          }\n        </div>\n        {/* Type */}\n        <div className=\"form-group\">\n          <label>What type of goal would you like?\n            <select\n              name='type'\n              value={type}\n              onChange={handleChange}\n              disabled={started}>\n              <option value='pass/fail'>Pass/Fail  (e.g. Stretch every day)</option>\n              <option value='total'>Total  (e.g. Run 100 miles)</option>\n              <option value='difference'>Difference  (e.g. Gain 10 lbs)</option>\n            </select>  \n          </label>\n        </div>\n        {/* Total / Sign */}\n        <div className=\"form-group\">\n          {type === 'pass/fail' && (\n            <React.Fragment>\n              <label>How many days a week do you want to hit your goal?</label>\n              <select\n                name='total'\n                value={total}\n                onChange={handleChange}\n                disabled={started}>\n                <option value='7'>Every day</option>\n                <option value='6'>Six days a week</option>\n                <option value='5'>Five days a week</option>\n                <option value='4'>Four days a week</option>\n                <option value='3'>Three days a week</option>\n                <option value='2'>Twice a week</option>\n                <option value='1'>Once a week</option>\n              </select>  \n            </React.Fragment>\n          )}\n          {type === 'total' && (\n            <React.Fragment>\n              <label>What total number do you want to hit?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n          {type === 'difference' && (\n            <React.Fragment>\n              <label>What is your current number?</label>\n              <input \n                type='number' \n                name='initialValue' \n                onChange={handleChange}\n                value={initialValue}\n                min='0'\n              />\n              <label>What number do you want to achieve?</label>\n              <input \n                type='number' \n                name='total' \n                onChange={handleChange}\n                value={total}\n                min='0'\n              />\n            </React.Fragment>\n          )}\n        </div>\n        {/* Privacy */}\n        <div className=\"form-group\">\n          <label>Who can see your goal?\n            <select\n              name='privacy'\n              value={privacy}\n              onChange={handleChange}>\n              <option value='only me'>Only Me</option>\n              <option value='friends'>My Friends</option>\n              <option value='public'>Everyone</option>\n            </select>  \n          </label>\n        </div>\n        {/* Units */}\n        {type !== 'pass/fail' && (\n          <div className=\"form-group\">\n            <label>Units (e.g lbs or miles)</label>\n            <input \n              type='text' \n              name='units' \n              placeholder='Units (Example: miles)' \n              onChange={handleChange}\n              value={units}\n            />\n          </div> \n        )}\n        {/* Submit */}\n        <input \n          type='submit' \n          value={message} \n          className='btn btn-block btn-primary'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default GoalForm;"]},"metadata":{},"sourceType":"module"}